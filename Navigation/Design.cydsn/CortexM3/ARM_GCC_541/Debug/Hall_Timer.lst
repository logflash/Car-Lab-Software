ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Hall_Timer.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Hall_Timer_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	Hall_Timer_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	Hall_Timer_Enable, %function
  25              	Hall_Timer_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\Hall_Timer.c"
   1:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Hall_Timer.c **** * File Name: Hall_Timer.c
   3:Generated_Source\PSoC5/Hall_Timer.c **** * Version 2.80
   4:Generated_Source\PSoC5/Hall_Timer.c **** *
   5:Generated_Source\PSoC5/Hall_Timer.c **** * Description:
   6:Generated_Source\PSoC5/Hall_Timer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/Hall_Timer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/Hall_Timer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/Hall_Timer.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/Hall_Timer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/Hall_Timer.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/Hall_Timer.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/Hall_Timer.c **** *  or a capture event.
  14:Generated_Source\PSoC5/Hall_Timer.c **** *
  15:Generated_Source\PSoC5/Hall_Timer.c **** * Note:
  16:Generated_Source\PSoC5/Hall_Timer.c **** *
  17:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
  18:Generated_Source\PSoC5/Hall_Timer.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/Hall_Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/Hall_Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/Hall_Timer.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/Hall_Timer.c **** 
  24:Generated_Source\PSoC5/Hall_Timer.c **** #include "Hall_Timer.h"
  25:Generated_Source\PSoC5/Hall_Timer.c **** 
  26:Generated_Source\PSoC5/Hall_Timer.c **** uint8 Hall_Timer_initVar = 0u;
  27:Generated_Source\PSoC5/Hall_Timer.c **** 
  28:Generated_Source\PSoC5/Hall_Timer.c **** 
  29:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_Init
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 2


  31:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
  32:Generated_Source\PSoC5/Hall_Timer.c **** *
  33:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
  34:Generated_Source\PSoC5/Hall_Timer.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/Hall_Timer.c **** *
  36:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
  37:Generated_Source\PSoC5/Hall_Timer.c **** *  void
  38:Generated_Source\PSoC5/Hall_Timer.c **** *
  39:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
  40:Generated_Source\PSoC5/Hall_Timer.c **** *  void
  41:Generated_Source\PSoC5/Hall_Timer.c **** *
  42:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/Hall_Timer.c **** void Hall_Timer_Init(void) 
  44:Generated_Source\PSoC5/Hall_Timer.c **** {
  45:Generated_Source\PSoC5/Hall_Timer.c ****     #if(!Hall_Timer_UsingFixedFunction)
  46:Generated_Source\PSoC5/Hall_Timer.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/Hall_Timer.c ****             uint8 Hall_Timer_interruptState;
  48:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/Hall_Timer.c **** 
  50:Generated_Source\PSoC5/Hall_Timer.c ****     #if (Hall_Timer_UsingFixedFunction)
  51:Generated_Source\PSoC5/Hall_Timer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_CONTROL &= Hall_Timer_CTRL_ENABLE;
  53:Generated_Source\PSoC5/Hall_Timer.c **** 
  54:Generated_Source\PSoC5/Hall_Timer.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/Hall_Timer.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/Hall_Timer.c ****             Hall_Timer_CONTROL2 &= ((uint8)(~Hall_Timer_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/Hall_Timer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/Hall_Timer.c **** 
  59:Generated_Source\PSoC5/Hall_Timer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/Hall_Timer.c ****             Hall_Timer_CONTROL3 &= ((uint8)(~Hall_Timer_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/Hall_Timer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/Hall_Timer.c **** 
  63:Generated_Source\PSoC5/Hall_Timer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/Hall_Timer.c ****         #if (Hall_Timer_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/Hall_Timer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/Hall_Timer.c ****             Hall_Timer_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/Hall_Timer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/Hall_Timer.c **** 
  69:Generated_Source\PSoC5/Hall_Timer.c ****         #if (Hall_Timer_RunModeUsed == 2)
  70:Generated_Source\PSoC5/Hall_Timer.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/Hall_Timer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/Hall_Timer.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/Hall_Timer.c ****                 Hall_Timer_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/Hall_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/Hall_Timer.c **** 
  76:Generated_Source\PSoC5/Hall_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/Hall_Timer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/Hall_Timer.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/Hall_Timer.c ****                 Hall_Timer_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/Hall_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/Hall_Timer.c **** 
  82:Generated_Source\PSoC5/Hall_Timer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/Hall_Timer.c **** 
  84:Generated_Source\PSoC5/Hall_Timer.c ****         #if (Hall_Timer_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/Hall_Timer.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/Hall_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/Hall_Timer.c ****                 Hall_Timer_CONTROL2 |= Hall_Timer_CTRL_MODE_PULSEWIDTH;
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 3


  88:Generated_Source\PSoC5/Hall_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/Hall_Timer.c **** 
  90:Generated_Source\PSoC5/Hall_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/Hall_Timer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/Hall_Timer.c ****                 Hall_Timer_CONTROL3 &= ((uint8)(~Hall_Timer_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/Hall_Timer.c ****                 Hall_Timer_CONTROL3 |= Hall_Timer_CTRL_RCOD;
  94:Generated_Source\PSoC5/Hall_Timer.c **** 
  95:Generated_Source\PSoC5/Hall_Timer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/Hall_Timer.c ****                 Hall_Timer_CONTROL3 &= ((uint8)(~Hall_Timer_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/Hall_Timer.c ****                 Hall_Timer_CONTROL3 |= Hall_Timer_CTRL_ENBL;
  98:Generated_Source\PSoC5/Hall_Timer.c **** 
  99:Generated_Source\PSoC5/Hall_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/Hall_Timer.c ****                 Hall_Timer_CONTROL3 |= Hall_Timer_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/Hall_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/Hall_Timer.c **** 
 103:Generated_Source\PSoC5/Hall_Timer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/Hall_Timer.c **** 
 105:Generated_Source\PSoC5/Hall_Timer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_RT1 &= ((uint8)(~Hall_Timer_RT1_MASK));
 107:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_RT1 |= Hall_Timer_SYNC;
 108:Generated_Source\PSoC5/Hall_Timer.c **** 
 109:Generated_Source\PSoC5/Hall_Timer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_RT1 &= ((uint8)(~Hall_Timer_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_RT1 |= Hall_Timer_SYNCDSI_EN;
 112:Generated_Source\PSoC5/Hall_Timer.c **** 
 113:Generated_Source\PSoC5/Hall_Timer.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_CONTROL2 |= Hall_Timer_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/Hall_Timer.c **** 
 117:Generated_Source\PSoC5/Hall_Timer.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/Hall_Timer.c ****     Hall_Timer_WritePeriod(Hall_Timer_INIT_PERIOD);
 119:Generated_Source\PSoC5/Hall_Timer.c ****     Hall_Timer_WriteCounter(Hall_Timer_INIT_PERIOD);
 120:Generated_Source\PSoC5/Hall_Timer.c **** 
 121:Generated_Source\PSoC5/Hall_Timer.c ****     #if (Hall_Timer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_CAPTURE_COUNT_CTRL |= Hall_Timer_CNTR_ENABLE;
 123:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_SetCaptureCount(Hall_Timer_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/Hall_Timer.c **** 
 126:Generated_Source\PSoC5/Hall_Timer.c ****     #if (!Hall_Timer_UsingFixedFunction)
 127:Generated_Source\PSoC5/Hall_Timer.c ****         #if (Hall_Timer_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/Hall_Timer.c ****             Hall_Timer_SetCaptureMode(Hall_Timer_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/Hall_Timer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/Hall_Timer.c **** 
 131:Generated_Source\PSoC5/Hall_Timer.c ****         #if (Hall_Timer_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/Hall_Timer.c ****             #if (!Hall_Timer_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/Hall_Timer.c ****                 if (0u == (Hall_Timer_CONTROL & Hall_Timer__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/Hall_Timer.c ****                 {
 135:Generated_Source\PSoC5/Hall_Timer.c ****                     Hall_Timer_SetTriggerMode(Hall_Timer_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/Hall_Timer.c ****                 }
 137:Generated_Source\PSoC5/Hall_Timer.c ****             #endif /* (!Hall_Timer_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/Hall_Timer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/Hall_Timer.c **** 
 140:Generated_Source\PSoC5/Hall_Timer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/Hall_Timer.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_interruptState = CyEnterCriticalSection();
 143:Generated_Source\PSoC5/Hall_Timer.c **** 
 144:Generated_Source\PSoC5/Hall_Timer.c ****         /* Use the interrupt output of the status register for IRQ output */
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 4


 145:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_STATUS_AUX_CTRL |= Hall_Timer_STATUS_ACTL_INT_EN_MASK;
 146:Generated_Source\PSoC5/Hall_Timer.c **** 
 147:Generated_Source\PSoC5/Hall_Timer.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/Hall_Timer.c ****         CyExitCriticalSection(Hall_Timer_interruptState);
 149:Generated_Source\PSoC5/Hall_Timer.c **** 
 150:Generated_Source\PSoC5/Hall_Timer.c ****         #if (Hall_Timer_EnableTriggerMode)
 151:Generated_Source\PSoC5/Hall_Timer.c ****             Hall_Timer_EnableTrigger();
 152:Generated_Source\PSoC5/Hall_Timer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/Hall_Timer.c **** 		
 154:Generated_Source\PSoC5/Hall_Timer.c **** 		
 155:Generated_Source\PSoC5/Hall_Timer.c ****         #if (Hall_Timer_InterruptOnCaptureCount && !Hall_Timer_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/Hall_Timer.c ****             Hall_Timer_SetInterruptCount(Hall_Timer_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/Hall_Timer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/Hall_Timer.c **** 
 159:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_ClearFIFO();
 160:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/Hall_Timer.c **** 
 162:Generated_Source\PSoC5/Hall_Timer.c ****     Hall_Timer_SetInterruptMode(Hall_Timer_INIT_INTERRUPT_MODE);
 163:Generated_Source\PSoC5/Hall_Timer.c **** }
 164:Generated_Source\PSoC5/Hall_Timer.c **** 
 165:Generated_Source\PSoC5/Hall_Timer.c **** 
 166:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_Enable
 168:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 169:Generated_Source\PSoC5/Hall_Timer.c **** *
 170:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 171:Generated_Source\PSoC5/Hall_Timer.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/Hall_Timer.c **** *
 173:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 174:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 175:Generated_Source\PSoC5/Hall_Timer.c **** *
 176:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 177:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 178:Generated_Source\PSoC5/Hall_Timer.c **** *
 179:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/Hall_Timer.c **** void Hall_Timer_Enable(void) 
 181:Generated_Source\PSoC5/Hall_Timer.c **** {
  28              		.loc 1 181 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 182:Generated_Source\PSoC5/Hall_Timer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/Hall_Timer.c ****     #if (Hall_Timer_UsingFixedFunction)
 184:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_GLOBAL_ENABLE |= Hall_Timer_BLOCK_EN_MASK;
 185:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_GLOBAL_STBY_ENABLE |= Hall_Timer_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/Hall_Timer.c **** 
 188:Generated_Source\PSoC5/Hall_Timer.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/Hall_Timer.c ****     #if (!Hall_Timer_UDB_CONTROL_REG_REMOVED || Hall_Timer_UsingFixedFunction)
 190:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_CONTROL |= Hall_Timer_CTRL_ENABLE;
  33              		.loc 1 190 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 5


  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 7B650040 		.word	1073767803
  43              		.cfi_endproc
  44              	.LFE1:
  45              		.size	Hall_Timer_Enable, .-Hall_Timer_Enable
  46              		.section	.text.Hall_Timer_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	Hall_Timer_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	Hall_Timer_Stop, %function
  52              	Hall_Timer_Stop:
  53              	.LFB3:
 191:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/Hall_Timer.c **** }
 193:Generated_Source\PSoC5/Hall_Timer.c **** 
 194:Generated_Source\PSoC5/Hall_Timer.c **** 
 195:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_Start
 197:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 198:Generated_Source\PSoC5/Hall_Timer.c **** *
 199:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 200:Generated_Source\PSoC5/Hall_Timer.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/Hall_Timer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/Hall_Timer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/Hall_Timer.c **** *
 204:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 205:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 206:Generated_Source\PSoC5/Hall_Timer.c **** *
 207:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 208:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 209:Generated_Source\PSoC5/Hall_Timer.c **** *
 210:Generated_Source\PSoC5/Hall_Timer.c **** * Global variables:
 211:Generated_Source\PSoC5/Hall_Timer.c **** *  Hall_Timer_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/Hall_Timer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/Hall_Timer.c **** *
 214:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/Hall_Timer.c **** void Hall_Timer_Start(void) 
 216:Generated_Source\PSoC5/Hall_Timer.c **** {
 217:Generated_Source\PSoC5/Hall_Timer.c ****     if(Hall_Timer_initVar == 0u)
 218:Generated_Source\PSoC5/Hall_Timer.c ****     {
 219:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_Init();
 220:Generated_Source\PSoC5/Hall_Timer.c **** 
 221:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_initVar = 1u;   /* Clear this bit for Initialization */
 222:Generated_Source\PSoC5/Hall_Timer.c ****     }
 223:Generated_Source\PSoC5/Hall_Timer.c **** 
 224:Generated_Source\PSoC5/Hall_Timer.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/Hall_Timer.c ****     Hall_Timer_Enable();
 226:Generated_Source\PSoC5/Hall_Timer.c **** }
 227:Generated_Source\PSoC5/Hall_Timer.c **** 
 228:Generated_Source\PSoC5/Hall_Timer.c **** 
 229:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_Stop
 231:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 232:Generated_Source\PSoC5/Hall_Timer.c **** *
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 6


 233:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 234:Generated_Source\PSoC5/Hall_Timer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/Hall_Timer.c **** *  interrupts.
 236:Generated_Source\PSoC5/Hall_Timer.c **** *
 237:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 238:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 239:Generated_Source\PSoC5/Hall_Timer.c **** *
 240:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 241:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 242:Generated_Source\PSoC5/Hall_Timer.c **** *
 243:Generated_Source\PSoC5/Hall_Timer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/Hall_Timer.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/Hall_Timer.c **** *
 246:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/Hall_Timer.c **** void Hall_Timer_Stop(void) 
 248:Generated_Source\PSoC5/Hall_Timer.c **** {
  54              		.loc 1 248 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 249:Generated_Source\PSoC5/Hall_Timer.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/Hall_Timer.c ****     #if(!Hall_Timer_UDB_CONTROL_REG_REMOVED || Hall_Timer_UsingFixedFunction)
 251:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_CONTROL &= ((uint8)(~Hall_Timer_CTRL_ENABLE));
  59              		.loc 1 251 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 7B650040 		.word	1073767803
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	Hall_Timer_Stop, .-Hall_Timer_Stop
  72              		.section	.text.Hall_Timer_SetInterruptMode,"ax",%progbits
  73              		.align	2
  74              		.global	Hall_Timer_SetInterruptMode
  75              		.thumb
  76              		.thumb_func
  77              		.type	Hall_Timer_SetInterruptMode, %function
  78              	Hall_Timer_SetInterruptMode:
  79              	.LFB4:
 252:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/Hall_Timer.c **** 
 254:Generated_Source\PSoC5/Hall_Timer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/Hall_Timer.c ****     #if (Hall_Timer_UsingFixedFunction)
 256:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_GLOBAL_ENABLE &= ((uint8)(~Hall_Timer_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_GLOBAL_STBY_ENABLE &= ((uint8)(~Hall_Timer_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/Hall_Timer.c **** }
 260:Generated_Source\PSoC5/Hall_Timer.c **** 
 261:Generated_Source\PSoC5/Hall_Timer.c **** 
 262:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_SetInterruptMode
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 7


 264:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 265:Generated_Source\PSoC5/Hall_Timer.c **** *
 266:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 267:Generated_Source\PSoC5/Hall_Timer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/Hall_Timer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/Hall_Timer.c **** *  be selected.
 270:Generated_Source\PSoC5/Hall_Timer.c **** *
 271:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 272:Generated_Source\PSoC5/Hall_Timer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/Hall_Timer.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/Hall_Timer.c **** *
 275:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 276:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 277:Generated_Source\PSoC5/Hall_Timer.c **** *
 278:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/Hall_Timer.c **** void Hall_Timer_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/Hall_Timer.c **** {
  80              		.loc 1 280 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 281:Generated_Source\PSoC5/Hall_Timer.c ****     Hall_Timer_STATUS_MASK = interruptMode;
  86              		.loc 1 281 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 8B650040 		.word	1073767819
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	Hall_Timer_SetInterruptMode, .-Hall_Timer_SetInterruptMode
  97              		.section	.text.Hall_Timer_SoftwareCapture,"ax",%progbits
  98              		.align	2
  99              		.global	Hall_Timer_SoftwareCapture
 100              		.thumb
 101              		.thumb_func
 102              		.type	Hall_Timer_SoftwareCapture, %function
 103              	Hall_Timer_SoftwareCapture:
 104              	.LFB5:
 282:Generated_Source\PSoC5/Hall_Timer.c **** }
 283:Generated_Source\PSoC5/Hall_Timer.c **** 
 284:Generated_Source\PSoC5/Hall_Timer.c **** 
 285:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_SoftwareCapture
 287:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 288:Generated_Source\PSoC5/Hall_Timer.c **** *
 289:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 290:Generated_Source\PSoC5/Hall_Timer.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/Hall_Timer.c **** *
 292:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 293:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 294:Generated_Source\PSoC5/Hall_Timer.c **** *
 295:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 8


 296:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 297:Generated_Source\PSoC5/Hall_Timer.c **** *
 298:Generated_Source\PSoC5/Hall_Timer.c **** * Side Effects:
 299:Generated_Source\PSoC5/Hall_Timer.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/Hall_Timer.c **** *
 301:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/Hall_Timer.c **** void Hall_Timer_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/Hall_Timer.c **** {
 105              		.loc 1 303 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 304:Generated_Source\PSoC5/Hall_Timer.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/Hall_Timer.c ****     #if(Hall_Timer_UsingFixedFunction)
 306:Generated_Source\PSoC5/Hall_Timer.c ****         (void)CY_GET_REG16(Hall_Timer_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/Hall_Timer.c ****     #else
 308:Generated_Source\PSoC5/Hall_Timer.c ****         (void)CY_GET_REG8(Hall_Timer_COUNTER_LSB_PTR_8BIT);
 110              		.loc 1 308 0
 111 0000 014B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 113 0004 7047     		bx	lr
 114              	.L12:
 115 0006 00BF     		.align	2
 116              	.L11:
 117 0008 08650040 		.word	1073767688
 118              		.cfi_endproc
 119              	.LFE5:
 120              		.size	Hall_Timer_SoftwareCapture, .-Hall_Timer_SoftwareCapture
 121              		.section	.text.Hall_Timer_ReadStatusRegister,"ax",%progbits
 122              		.align	2
 123              		.global	Hall_Timer_ReadStatusRegister
 124              		.thumb
 125              		.thumb_func
 126              		.type	Hall_Timer_ReadStatusRegister, %function
 127              	Hall_Timer_ReadStatusRegister:
 128              	.LFB6:
 309:Generated_Source\PSoC5/Hall_Timer.c ****     #endif/* (Hall_Timer_UsingFixedFunction) */
 310:Generated_Source\PSoC5/Hall_Timer.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/Hall_Timer.c **** }
 312:Generated_Source\PSoC5/Hall_Timer.c **** 
 313:Generated_Source\PSoC5/Hall_Timer.c **** 
 314:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_ReadStatusRegister
 316:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 317:Generated_Source\PSoC5/Hall_Timer.c **** *
 318:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 319:Generated_Source\PSoC5/Hall_Timer.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/Hall_Timer.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/Hall_Timer.c **** *  be permuteable.
 322:Generated_Source\PSoC5/Hall_Timer.c **** *
 323:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 324:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 325:Generated_Source\PSoC5/Hall_Timer.c **** *
 326:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 327:Generated_Source\PSoC5/Hall_Timer.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/Hall_Timer.c **** *
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 9


 329:Generated_Source\PSoC5/Hall_Timer.c **** * Side Effects:
 330:Generated_Source\PSoC5/Hall_Timer.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/Hall_Timer.c **** *
 332:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/Hall_Timer.c **** uint8   Hall_Timer_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/Hall_Timer.c **** {
 129              		.loc 1 334 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 335:Generated_Source\PSoC5/Hall_Timer.c ****     return (Hall_Timer_STATUS);
 134              		.loc 1 335 0
 135 0000 014B     		ldr	r3, .L14
 136 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:Generated_Source\PSoC5/Hall_Timer.c **** }
 137              		.loc 1 336 0
 138 0004 7047     		bx	lr
 139              	.L15:
 140 0006 00BF     		.align	2
 141              	.L14:
 142 0008 6B650040 		.word	1073767787
 143              		.cfi_endproc
 144              	.LFE6:
 145              		.size	Hall_Timer_ReadStatusRegister, .-Hall_Timer_ReadStatusRegister
 146              		.section	.text.Hall_Timer_ReadControlRegister,"ax",%progbits
 147              		.align	2
 148              		.global	Hall_Timer_ReadControlRegister
 149              		.thumb
 150              		.thumb_func
 151              		.type	Hall_Timer_ReadControlRegister, %function
 152              	Hall_Timer_ReadControlRegister:
 153              	.LFB7:
 337:Generated_Source\PSoC5/Hall_Timer.c **** 
 338:Generated_Source\PSoC5/Hall_Timer.c **** 
 339:Generated_Source\PSoC5/Hall_Timer.c **** #if (!Hall_Timer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/Hall_Timer.c **** 
 341:Generated_Source\PSoC5/Hall_Timer.c **** 
 342:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_ReadControlRegister
 344:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 345:Generated_Source\PSoC5/Hall_Timer.c **** *
 346:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 347:Generated_Source\PSoC5/Hall_Timer.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/Hall_Timer.c **** *
 349:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 350:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 351:Generated_Source\PSoC5/Hall_Timer.c **** *
 352:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 353:Generated_Source\PSoC5/Hall_Timer.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/Hall_Timer.c **** *
 355:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/Hall_Timer.c **** uint8 Hall_Timer_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/Hall_Timer.c **** {
 154              		.loc 1 357 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 10


 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 358:Generated_Source\PSoC5/Hall_Timer.c ****     #if (!Hall_Timer_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/Hall_Timer.c ****         return ((uint8)Hall_Timer_CONTROL);
 159              		.loc 1 359 0
 160 0000 014B     		ldr	r3, .L17
 161 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 360:Generated_Source\PSoC5/Hall_Timer.c ****     #else
 361:Generated_Source\PSoC5/Hall_Timer.c ****         return (0);
 362:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /* (!Hall_Timer_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/Hall_Timer.c **** }
 162              		.loc 1 363 0
 163 0004 7047     		bx	lr
 164              	.L18:
 165 0006 00BF     		.align	2
 166              	.L17:
 167 0008 7B650040 		.word	1073767803
 168              		.cfi_endproc
 169              	.LFE7:
 170              		.size	Hall_Timer_ReadControlRegister, .-Hall_Timer_ReadControlRegister
 171              		.section	.text.Hall_Timer_WriteControlRegister,"ax",%progbits
 172              		.align	2
 173              		.global	Hall_Timer_WriteControlRegister
 174              		.thumb
 175              		.thumb_func
 176              		.type	Hall_Timer_WriteControlRegister, %function
 177              	Hall_Timer_WriteControlRegister:
 178              	.LFB8:
 364:Generated_Source\PSoC5/Hall_Timer.c **** 
 365:Generated_Source\PSoC5/Hall_Timer.c **** 
 366:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_WriteControlRegister
 368:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 369:Generated_Source\PSoC5/Hall_Timer.c **** *
 370:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 371:Generated_Source\PSoC5/Hall_Timer.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/Hall_Timer.c **** *
 373:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 374:Generated_Source\PSoC5/Hall_Timer.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/Hall_Timer.c **** *
 376:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 377:Generated_Source\PSoC5/Hall_Timer.c **** *
 378:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/Hall_Timer.c **** void Hall_Timer_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/Hall_Timer.c **** {
 179              		.loc 1 380 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              	.LVL1:
 381:Generated_Source\PSoC5/Hall_Timer.c ****     #if (!Hall_Timer_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_CONTROL = control;
 185              		.loc 1 382 0
 186 0000 014B     		ldr	r3, .L20
 187 0002 1870     		strb	r0, [r3]
 188 0004 7047     		bx	lr
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 11


 189              	.L21:
 190 0006 00BF     		.align	2
 191              	.L20:
 192 0008 7B650040 		.word	1073767803
 193              		.cfi_endproc
 194              	.LFE8:
 195              		.size	Hall_Timer_WriteControlRegister, .-Hall_Timer_WriteControlRegister
 196              		.section	.text.Hall_Timer_ReadPeriod,"ax",%progbits
 197              		.align	2
 198              		.global	Hall_Timer_ReadPeriod
 199              		.thumb
 200              		.thumb_func
 201              		.type	Hall_Timer_ReadPeriod, %function
 202              	Hall_Timer_ReadPeriod:
 203              	.LFB9:
 383:Generated_Source\PSoC5/Hall_Timer.c ****     #else
 384:Generated_Source\PSoC5/Hall_Timer.c ****         control = 0u;
 385:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /* (!Hall_Timer_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/Hall_Timer.c **** }
 387:Generated_Source\PSoC5/Hall_Timer.c **** 
 388:Generated_Source\PSoC5/Hall_Timer.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/Hall_Timer.c **** 
 390:Generated_Source\PSoC5/Hall_Timer.c **** 
 391:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_ReadPeriod
 393:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 394:Generated_Source\PSoC5/Hall_Timer.c **** *
 395:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 396:Generated_Source\PSoC5/Hall_Timer.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/Hall_Timer.c **** *
 398:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 399:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 400:Generated_Source\PSoC5/Hall_Timer.c **** *
 401:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 402:Generated_Source\PSoC5/Hall_Timer.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/Hall_Timer.c **** *
 404:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/Hall_Timer.c **** uint32 Hall_Timer_ReadPeriod(void) 
 406:Generated_Source\PSoC5/Hall_Timer.c **** {
 204              		.loc 1 406 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 407:Generated_Source\PSoC5/Hall_Timer.c ****    #if(Hall_Timer_UsingFixedFunction)
 408:Generated_Source\PSoC5/Hall_Timer.c ****        return ((uint32)CY_GET_REG16(Hall_Timer_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/Hall_Timer.c ****    #else
 410:Generated_Source\PSoC5/Hall_Timer.c ****        return (CY_GET_REG32(Hall_Timer_PERIOD_LSB_PTR));
 209              		.loc 1 410 0
 210 0000 014B     		ldr	r3, .L23
 211 0002 1868     		ldr	r0, [r3]
 411:Generated_Source\PSoC5/Hall_Timer.c ****    #endif /* (Hall_Timer_UsingFixedFunction) */
 412:Generated_Source\PSoC5/Hall_Timer.c **** }
 212              		.loc 1 412 0
 213 0004 7047     		bx	lr
 214              	.L24:
 215 0006 00BF     		.align	2
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 12


 216              	.L23:
 217 0008 28650040 		.word	1073767720
 218              		.cfi_endproc
 219              	.LFE9:
 220              		.size	Hall_Timer_ReadPeriod, .-Hall_Timer_ReadPeriod
 221              		.section	.text.Hall_Timer_WritePeriod,"ax",%progbits
 222              		.align	2
 223              		.global	Hall_Timer_WritePeriod
 224              		.thumb
 225              		.thumb_func
 226              		.type	Hall_Timer_WritePeriod, %function
 227              	Hall_Timer_WritePeriod:
 228              	.LFB10:
 413:Generated_Source\PSoC5/Hall_Timer.c **** 
 414:Generated_Source\PSoC5/Hall_Timer.c **** 
 415:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_WritePeriod
 417:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 418:Generated_Source\PSoC5/Hall_Timer.c **** *
 419:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 420:Generated_Source\PSoC5/Hall_Timer.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/Hall_Timer.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/Hall_Timer.c **** *
 423:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 424:Generated_Source\PSoC5/Hall_Timer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/Hall_Timer.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/Hall_Timer.c **** *
 427:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 428:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 429:Generated_Source\PSoC5/Hall_Timer.c **** *
 430:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/Hall_Timer.c **** void Hall_Timer_WritePeriod(uint32 period) 
 432:Generated_Source\PSoC5/Hall_Timer.c **** {
 229              		.loc 1 432 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              	.LVL2:
 433:Generated_Source\PSoC5/Hall_Timer.c ****     #if(Hall_Timer_UsingFixedFunction)
 434:Generated_Source\PSoC5/Hall_Timer.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/Hall_Timer.c ****         CY_SET_REG16(Hall_Timer_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/Hall_Timer.c ****     #else
 437:Generated_Source\PSoC5/Hall_Timer.c ****         CY_SET_REG32(Hall_Timer_PERIOD_LSB_PTR, period);
 235              		.loc 1 437 0
 236 0000 014B     		ldr	r3, .L26
 237 0002 1860     		str	r0, [r3]
 238 0004 7047     		bx	lr
 239              	.L27:
 240 0006 00BF     		.align	2
 241              	.L26:
 242 0008 28650040 		.word	1073767720
 243              		.cfi_endproc
 244              	.LFE10:
 245              		.size	Hall_Timer_WritePeriod, .-Hall_Timer_WritePeriod
 246              		.section	.text.Hall_Timer_ReadCapture,"ax",%progbits
 247              		.align	2
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 13


 248              		.global	Hall_Timer_ReadCapture
 249              		.thumb
 250              		.thumb_func
 251              		.type	Hall_Timer_ReadCapture, %function
 252              	Hall_Timer_ReadCapture:
 253              	.LFB11:
 438:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/Hall_Timer.c **** }
 440:Generated_Source\PSoC5/Hall_Timer.c **** 
 441:Generated_Source\PSoC5/Hall_Timer.c **** 
 442:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_ReadCapture
 444:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 445:Generated_Source\PSoC5/Hall_Timer.c **** *
 446:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 447:Generated_Source\PSoC5/Hall_Timer.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/Hall_Timer.c **** *
 449:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 450:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 451:Generated_Source\PSoC5/Hall_Timer.c **** *
 452:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 453:Generated_Source\PSoC5/Hall_Timer.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/Hall_Timer.c **** *
 455:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/Hall_Timer.c **** uint32 Hall_Timer_ReadCapture(void) 
 457:Generated_Source\PSoC5/Hall_Timer.c **** {
 254              		.loc 1 457 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 458:Generated_Source\PSoC5/Hall_Timer.c ****    #if(Hall_Timer_UsingFixedFunction)
 459:Generated_Source\PSoC5/Hall_Timer.c ****        return ((uint32)CY_GET_REG16(Hall_Timer_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/Hall_Timer.c ****    #else
 461:Generated_Source\PSoC5/Hall_Timer.c ****        return (CY_GET_REG32(Hall_Timer_CAPTURE_LSB_PTR));
 259              		.loc 1 461 0
 260 0000 014B     		ldr	r3, .L29
 261 0002 1868     		ldr	r0, [r3]
 462:Generated_Source\PSoC5/Hall_Timer.c ****    #endif /* (Hall_Timer_UsingFixedFunction) */
 463:Generated_Source\PSoC5/Hall_Timer.c **** }
 262              		.loc 1 463 0
 263 0004 7047     		bx	lr
 264              	.L30:
 265 0006 00BF     		.align	2
 266              	.L29:
 267 0008 48650040 		.word	1073767752
 268              		.cfi_endproc
 269              	.LFE11:
 270              		.size	Hall_Timer_ReadCapture, .-Hall_Timer_ReadCapture
 271              		.section	.text.Hall_Timer_WriteCounter,"ax",%progbits
 272              		.align	2
 273              		.global	Hall_Timer_WriteCounter
 274              		.thumb
 275              		.thumb_func
 276              		.type	Hall_Timer_WriteCounter, %function
 277              	Hall_Timer_WriteCounter:
 278              	.LFB12:
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 14


 464:Generated_Source\PSoC5/Hall_Timer.c **** 
 465:Generated_Source\PSoC5/Hall_Timer.c **** 
 466:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_WriteCounter
 468:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 469:Generated_Source\PSoC5/Hall_Timer.c **** *
 470:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 471:Generated_Source\PSoC5/Hall_Timer.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/Hall_Timer.c **** *
 473:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 474:Generated_Source\PSoC5/Hall_Timer.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/Hall_Timer.c **** *
 476:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 477:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 478:Generated_Source\PSoC5/Hall_Timer.c **** *
 479:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/Hall_Timer.c **** void Hall_Timer_WriteCounter(uint32 counter) 
 481:Generated_Source\PSoC5/Hall_Timer.c **** {
 279              		.loc 1 481 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LVL3:
 482:Generated_Source\PSoC5/Hall_Timer.c ****    #if(Hall_Timer_UsingFixedFunction)
 483:Generated_Source\PSoC5/Hall_Timer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/Hall_Timer.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/Hall_Timer.c ****          */
 486:Generated_Source\PSoC5/Hall_Timer.c ****         CY_SET_REG16(Hall_Timer_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/Hall_Timer.c ****         
 488:Generated_Source\PSoC5/Hall_Timer.c ****     #else
 489:Generated_Source\PSoC5/Hall_Timer.c ****         CY_SET_REG32(Hall_Timer_COUNTER_LSB_PTR, counter);
 285              		.loc 1 489 0
 286 0000 014B     		ldr	r3, .L32
 287 0002 1860     		str	r0, [r3]
 288 0004 7047     		bx	lr
 289              	.L33:
 290 0006 00BF     		.align	2
 291              	.L32:
 292 0008 08650040 		.word	1073767688
 293              		.cfi_endproc
 294              	.LFE12:
 295              		.size	Hall_Timer_WriteCounter, .-Hall_Timer_WriteCounter
 296              		.section	.text.Hall_Timer_ReadCounter,"ax",%progbits
 297              		.align	2
 298              		.global	Hall_Timer_ReadCounter
 299              		.thumb
 300              		.thumb_func
 301              		.type	Hall_Timer_ReadCounter, %function
 302              	Hall_Timer_ReadCounter:
 303              	.LFB13:
 490:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/Hall_Timer.c **** }
 492:Generated_Source\PSoC5/Hall_Timer.c **** 
 493:Generated_Source\PSoC5/Hall_Timer.c **** 
 494:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_ReadCounter
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 15


 496:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 497:Generated_Source\PSoC5/Hall_Timer.c **** *
 498:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 499:Generated_Source\PSoC5/Hall_Timer.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/Hall_Timer.c **** *
 501:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 502:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 503:Generated_Source\PSoC5/Hall_Timer.c **** *
 504:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 505:Generated_Source\PSoC5/Hall_Timer.c **** *  Present compare value.
 506:Generated_Source\PSoC5/Hall_Timer.c **** *
 507:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/Hall_Timer.c **** uint32 Hall_Timer_ReadCounter(void) 
 509:Generated_Source\PSoC5/Hall_Timer.c **** {
 304              		.loc 1 509 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 510:Generated_Source\PSoC5/Hall_Timer.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/Hall_Timer.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/Hall_Timer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/Hall_Timer.c ****     #if(Hall_Timer_UsingFixedFunction)
 514:Generated_Source\PSoC5/Hall_Timer.c ****         (void)CY_GET_REG16(Hall_Timer_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/Hall_Timer.c ****     #else
 516:Generated_Source\PSoC5/Hall_Timer.c ****         (void)CY_GET_REG8(Hall_Timer_COUNTER_LSB_PTR_8BIT);
 309              		.loc 1 516 0
 310 0000 024B     		ldr	r3, .L35
 311 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:Generated_Source\PSoC5/Hall_Timer.c ****     #endif/* (Hall_Timer_UsingFixedFunction) */
 518:Generated_Source\PSoC5/Hall_Timer.c **** 
 519:Generated_Source\PSoC5/Hall_Timer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/Hall_Timer.c ****     #if(Hall_Timer_UsingFixedFunction)
 521:Generated_Source\PSoC5/Hall_Timer.c ****         return ((uint32)CY_GET_REG16(Hall_Timer_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/Hall_Timer.c ****     #else
 523:Generated_Source\PSoC5/Hall_Timer.c ****         return (CY_GET_REG32(Hall_Timer_CAPTURE_LSB_PTR));
 312              		.loc 1 523 0
 313 0004 024B     		ldr	r3, .L35+4
 314 0006 1868     		ldr	r0, [r3]
 524:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /* (Hall_Timer_UsingFixedFunction) */
 525:Generated_Source\PSoC5/Hall_Timer.c **** }
 315              		.loc 1 525 0
 316 0008 7047     		bx	lr
 317              	.L36:
 318 000a 00BF     		.align	2
 319              	.L35:
 320 000c 08650040 		.word	1073767688
 321 0010 48650040 		.word	1073767752
 322              		.cfi_endproc
 323              	.LFE13:
 324              		.size	Hall_Timer_ReadCounter, .-Hall_Timer_ReadCounter
 325              		.section	.text.Hall_Timer_SetInterruptCount,"ax",%progbits
 326              		.align	2
 327              		.global	Hall_Timer_SetInterruptCount
 328              		.thumb
 329              		.thumb_func
 330              		.type	Hall_Timer_SetInterruptCount, %function
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 16


 331              	Hall_Timer_SetInterruptCount:
 332              	.LFB14:
 526:Generated_Source\PSoC5/Hall_Timer.c **** 
 527:Generated_Source\PSoC5/Hall_Timer.c **** 
 528:Generated_Source\PSoC5/Hall_Timer.c **** #if(!Hall_Timer_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/Hall_Timer.c **** 
 530:Generated_Source\PSoC5/Hall_Timer.c ****     
 531:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/Hall_Timer.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/Hall_Timer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/Hall_Timer.c ****  ******************************************************************************/
 535:Generated_Source\PSoC5/Hall_Timer.c **** 
 536:Generated_Source\PSoC5/Hall_Timer.c **** 
 537:Generated_Source\PSoC5/Hall_Timer.c **** #if (Hall_Timer_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/Hall_Timer.c **** 
 539:Generated_Source\PSoC5/Hall_Timer.c **** 
 540:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_SetCaptureMode
 542:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 543:Generated_Source\PSoC5/Hall_Timer.c **** *
 544:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 545:Generated_Source\PSoC5/Hall_Timer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/Hall_Timer.c **** *
 547:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 548:Generated_Source\PSoC5/Hall_Timer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/Hall_Timer.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/Hall_Timer.c **** *  #define Hall_Timer__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/Hall_Timer.c **** #define Hall_Timer__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/Hall_Timer.c **** #define Hall_Timer__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/Hall_Timer.c **** #define Hall_Timer__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/Hall_Timer.c **** #define Hall_Timer__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/Hall_Timer.c ****  identifiers
 556:Generated_Source\PSoC5/Hall_Timer.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/Hall_Timer.c **** *  Hall_Timer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/Hall_Timer.c **** *  Hall_Timer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/Hall_Timer.c **** *  Hall_Timer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/Hall_Timer.c **** *  Hall_Timer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/Hall_Timer.c **** *
 562:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 563:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 564:Generated_Source\PSoC5/Hall_Timer.c **** *
 565:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/Hall_Timer.c **** void Hall_Timer_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/Hall_Timer.c **** {
 568:Generated_Source\PSoC5/Hall_Timer.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/Hall_Timer.c ****     captureMode = ((uint8)((uint8)captureMode << Hall_Timer_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/Hall_Timer.c ****     captureMode &= (Hall_Timer_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/Hall_Timer.c **** 
 572:Generated_Source\PSoC5/Hall_Timer.c ****     #if (!Hall_Timer_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/Hall_Timer.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_CONTROL &= ((uint8)(~Hall_Timer_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/Hall_Timer.c **** 
 576:Generated_Source\PSoC5/Hall_Timer.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_CONTROL |= captureMode;
 578:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /* (!Hall_Timer_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/Hall_Timer.c **** }
 580:Generated_Source\PSoC5/Hall_Timer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 17


 581:Generated_Source\PSoC5/Hall_Timer.c **** 
 582:Generated_Source\PSoC5/Hall_Timer.c **** 
 583:Generated_Source\PSoC5/Hall_Timer.c **** #if (Hall_Timer_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/Hall_Timer.c **** 
 585:Generated_Source\PSoC5/Hall_Timer.c **** 
 586:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_SetTriggerMode
 588:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 589:Generated_Source\PSoC5/Hall_Timer.c **** *
 590:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 591:Generated_Source\PSoC5/Hall_Timer.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC5/Hall_Timer.c **** *
 593:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 594:Generated_Source\PSoC5/Hall_Timer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/Hall_Timer.c ****     #define Hall_Timer__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/Hall_Timer.c ****     #define Hall_Timer__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/Hall_Timer.c ****     #define Hall_Timer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/Hall_Timer.c ****     #define Hall_Timer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/Hall_Timer.c ****     #define Hall_Timer__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/Hall_Timer.c **** *
 601:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 602:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 603:Generated_Source\PSoC5/Hall_Timer.c **** *
 604:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/Hall_Timer.c **** void Hall_Timer_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/Hall_Timer.c **** {
 607:Generated_Source\PSoC5/Hall_Timer.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/Hall_Timer.c ****     triggerMode &= Hall_Timer_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/Hall_Timer.c **** 
 610:Generated_Source\PSoC5/Hall_Timer.c ****     #if (!Hall_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed
 611:Generated_Source\PSoC5/Hall_Timer.c ****     
 612:Generated_Source\PSoC5/Hall_Timer.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_CONTROL &= ((uint8)(~Hall_Timer_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/Hall_Timer.c **** 
 615:Generated_Source\PSoC5/Hall_Timer.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_CONTROL |= (triggerMode | Hall_Timer__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/Hall_Timer.c **** }
 619:Generated_Source\PSoC5/Hall_Timer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/Hall_Timer.c **** 
 621:Generated_Source\PSoC5/Hall_Timer.c **** #if (Hall_Timer_EnableTriggerMode)
 622:Generated_Source\PSoC5/Hall_Timer.c **** 
 623:Generated_Source\PSoC5/Hall_Timer.c **** 
 624:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_EnableTrigger
 626:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 627:Generated_Source\PSoC5/Hall_Timer.c **** *
 628:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 629:Generated_Source\PSoC5/Hall_Timer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/Hall_Timer.c **** *
 631:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 632:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 633:Generated_Source\PSoC5/Hall_Timer.c **** *
 634:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 635:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 636:Generated_Source\PSoC5/Hall_Timer.c **** *
 637:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 18


 638:Generated_Source\PSoC5/Hall_Timer.c **** void Hall_Timer_EnableTrigger(void) 
 639:Generated_Source\PSoC5/Hall_Timer.c **** {
 640:Generated_Source\PSoC5/Hall_Timer.c ****     #if (!Hall_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed
 641:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_CONTROL |= Hall_Timer_CTRL_TRIG_EN;
 642:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/Hall_Timer.c **** }
 644:Generated_Source\PSoC5/Hall_Timer.c **** 
 645:Generated_Source\PSoC5/Hall_Timer.c **** 
 646:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_DisableTrigger
 648:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 649:Generated_Source\PSoC5/Hall_Timer.c **** *
 650:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 651:Generated_Source\PSoC5/Hall_Timer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/Hall_Timer.c **** *
 653:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 654:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 655:Generated_Source\PSoC5/Hall_Timer.c **** *
 656:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 657:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 658:Generated_Source\PSoC5/Hall_Timer.c **** *
 659:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/Hall_Timer.c **** void Hall_Timer_DisableTrigger(void) 
 661:Generated_Source\PSoC5/Hall_Timer.c **** {
 662:Generated_Source\PSoC5/Hall_Timer.c ****     #if (!Hall_Timer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is remove
 663:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_CONTROL &= ((uint8)(~Hall_Timer_CTRL_TRIG_EN));
 664:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/Hall_Timer.c **** }
 666:Generated_Source\PSoC5/Hall_Timer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/Hall_Timer.c **** 
 668:Generated_Source\PSoC5/Hall_Timer.c **** #if(Hall_Timer_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/Hall_Timer.c **** 
 670:Generated_Source\PSoC5/Hall_Timer.c **** 
 671:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_SetInterruptCount
 673:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 674:Generated_Source\PSoC5/Hall_Timer.c **** *
 675:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 676:Generated_Source\PSoC5/Hall_Timer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/Hall_Timer.c **** *
 678:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 679:Generated_Source\PSoC5/Hall_Timer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/Hall_Timer.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/Hall_Timer.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/Hall_Timer.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/Hall_Timer.c **** *
 684:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 685:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 686:Generated_Source\PSoC5/Hall_Timer.c **** *
 687:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/Hall_Timer.c **** void Hall_Timer_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/Hall_Timer.c **** {
 333              		.loc 1 689 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337              		@ link register save eliminated.
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 19


 338              	.LVL4:
 690:Generated_Source\PSoC5/Hall_Timer.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/Hall_Timer.c ****     interruptCount &= Hall_Timer_CTRL_INTCNT_MASK;
 339              		.loc 1 691 0
 340 0000 00F00300 		and	r0, r0, #3
 341              	.LVL5:
 692:Generated_Source\PSoC5/Hall_Timer.c **** 
 693:Generated_Source\PSoC5/Hall_Timer.c ****     #if (!Hall_Timer_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/Hall_Timer.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_CONTROL &= ((uint8)(~Hall_Timer_CTRL_INTCNT_MASK));
 342              		.loc 1 695 0
 343 0004 044B     		ldr	r3, .L38
 344 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 345 0008 02F0FC02 		and	r2, r2, #252
 346 000c 1A70     		strb	r2, [r3]
 696:Generated_Source\PSoC5/Hall_Timer.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/Hall_Timer.c ****         Hall_Timer_CONTROL |= interruptCount;
 347              		.loc 1 697 0
 348 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 349 0010 1043     		orrs	r0, r0, r2
 350              	.LVL6:
 351 0012 1870     		strb	r0, [r3]
 352 0014 7047     		bx	lr
 353              	.L39:
 354 0016 00BF     		.align	2
 355              	.L38:
 356 0018 7B650040 		.word	1073767803
 357              		.cfi_endproc
 358              	.LFE14:
 359              		.size	Hall_Timer_SetInterruptCount, .-Hall_Timer_SetInterruptCount
 360              		.section	.text.Hall_Timer_ClearFIFO,"ax",%progbits
 361              		.align	2
 362              		.global	Hall_Timer_ClearFIFO
 363              		.thumb
 364              		.thumb_func
 365              		.type	Hall_Timer_ClearFIFO, %function
 366              	Hall_Timer_ClearFIFO:
 367              	.LFB15:
 698:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /* (!Hall_Timer_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/Hall_Timer.c **** }
 700:Generated_Source\PSoC5/Hall_Timer.c **** #endif /* Hall_Timer_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/Hall_Timer.c **** 
 702:Generated_Source\PSoC5/Hall_Timer.c **** 
 703:Generated_Source\PSoC5/Hall_Timer.c **** #if (Hall_Timer_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/Hall_Timer.c **** 
 705:Generated_Source\PSoC5/Hall_Timer.c **** 
 706:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_SetCaptureCount
 708:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 709:Generated_Source\PSoC5/Hall_Timer.c **** *
 710:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 711:Generated_Source\PSoC5/Hall_Timer.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/Hall_Timer.c **** *
 713:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 714:Generated_Source\PSoC5/Hall_Timer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/Hall_Timer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/Hall_Timer.c **** *                captures.
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 20


 717:Generated_Source\PSoC5/Hall_Timer.c **** *
 718:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 719:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 720:Generated_Source\PSoC5/Hall_Timer.c **** *
 721:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/Hall_Timer.c **** void Hall_Timer_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/Hall_Timer.c **** {
 724:Generated_Source\PSoC5/Hall_Timer.c ****     Hall_Timer_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC5/Hall_Timer.c **** }
 726:Generated_Source\PSoC5/Hall_Timer.c **** 
 727:Generated_Source\PSoC5/Hall_Timer.c **** 
 728:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_ReadCaptureCount
 730:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 731:Generated_Source\PSoC5/Hall_Timer.c **** *
 732:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 733:Generated_Source\PSoC5/Hall_Timer.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/Hall_Timer.c **** *
 735:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 736:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 737:Generated_Source\PSoC5/Hall_Timer.c **** *
 738:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 739:Generated_Source\PSoC5/Hall_Timer.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/Hall_Timer.c **** *
 741:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/Hall_Timer.c **** uint8 Hall_Timer_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/Hall_Timer.c **** {
 744:Generated_Source\PSoC5/Hall_Timer.c ****     return ((uint8)Hall_Timer_CAP_COUNT);
 745:Generated_Source\PSoC5/Hall_Timer.c **** }
 746:Generated_Source\PSoC5/Hall_Timer.c **** #endif /* Hall_Timer_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/Hall_Timer.c **** 
 748:Generated_Source\PSoC5/Hall_Timer.c **** 
 749:Generated_Source\PSoC5/Hall_Timer.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/Hall_Timer.c **** * Function Name: Hall_Timer_ClearFIFO
 751:Generated_Source\PSoC5/Hall_Timer.c **** ********************************************************************************
 752:Generated_Source\PSoC5/Hall_Timer.c **** *
 753:Generated_Source\PSoC5/Hall_Timer.c **** * Summary:
 754:Generated_Source\PSoC5/Hall_Timer.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/Hall_Timer.c **** *
 756:Generated_Source\PSoC5/Hall_Timer.c **** * Parameters:
 757:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 758:Generated_Source\PSoC5/Hall_Timer.c **** *
 759:Generated_Source\PSoC5/Hall_Timer.c **** * Return:
 760:Generated_Source\PSoC5/Hall_Timer.c **** *  void
 761:Generated_Source\PSoC5/Hall_Timer.c **** *
 762:Generated_Source\PSoC5/Hall_Timer.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/Hall_Timer.c **** void Hall_Timer_ClearFIFO(void) 
 764:Generated_Source\PSoC5/Hall_Timer.c **** {
 368              		.loc 1 764 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 08B5     		push	{r3, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 3, -8
 375              		.cfi_offset 14, -4
 765:Generated_Source\PSoC5/Hall_Timer.c ****     while(0u != (Hall_Timer_ReadStatusRegister() & Hall_Timer_STATUS_FIFONEMP))
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 21


 376              		.loc 1 765 0
 377 0002 01E0     		b	.L41
 378              	.L42:
 766:Generated_Source\PSoC5/Hall_Timer.c ****     {
 767:Generated_Source\PSoC5/Hall_Timer.c ****         (void)Hall_Timer_ReadCapture();
 379              		.loc 1 767 0
 380 0004 FFF7FEFF 		bl	Hall_Timer_ReadCapture
 381              	.LVL7:
 382              	.L41:
 765:Generated_Source\PSoC5/Hall_Timer.c ****     while(0u != (Hall_Timer_ReadStatusRegister() & Hall_Timer_STATUS_FIFONEMP))
 383              		.loc 1 765 0
 384 0008 FFF7FEFF 		bl	Hall_Timer_ReadStatusRegister
 385              	.LVL8:
 386 000c 10F0080F 		tst	r0, #8
 387 0010 F8D1     		bne	.L42
 768:Generated_Source\PSoC5/Hall_Timer.c ****     }
 769:Generated_Source\PSoC5/Hall_Timer.c **** }
 388              		.loc 1 769 0
 389 0012 08BD     		pop	{r3, pc}
 390              		.cfi_endproc
 391              	.LFE15:
 392              		.size	Hall_Timer_ClearFIFO, .-Hall_Timer_ClearFIFO
 393              		.section	.text.Hall_Timer_Init,"ax",%progbits
 394              		.align	2
 395              		.global	Hall_Timer_Init
 396              		.thumb
 397              		.thumb_func
 398              		.type	Hall_Timer_Init, %function
 399              	Hall_Timer_Init:
 400              	.LFB0:
  44:Generated_Source\PSoC5/Hall_Timer.c ****     #if(!Hall_Timer_UsingFixedFunction)
 401              		.loc 1 44 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405 0000 08B5     		push	{r3, lr}
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 3, -8
 408              		.cfi_offset 14, -4
 118:Generated_Source\PSoC5/Hall_Timer.c ****     Hall_Timer_WriteCounter(Hall_Timer_INIT_PERIOD);
 409              		.loc 1 118 0
 410 0002 4FF0FF30 		mov	r0, #-1
 411 0006 FFF7FEFF 		bl	Hall_Timer_WritePeriod
 412              	.LVL9:
 119:Generated_Source\PSoC5/Hall_Timer.c **** 
 413              		.loc 1 119 0
 414 000a 4FF0FF30 		mov	r0, #-1
 415 000e FFF7FEFF 		bl	Hall_Timer_WriteCounter
 416              	.LVL10:
 142:Generated_Source\PSoC5/Hall_Timer.c **** 
 417              		.loc 1 142 0
 418 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 419              	.LVL11:
 145:Generated_Source\PSoC5/Hall_Timer.c **** 
 420              		.loc 1 145 0
 421 0016 084A     		ldr	r2, .L46
 422 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 22


 423 001a 43F01003 		orr	r3, r3, #16
 424 001e 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/Hall_Timer.c **** 
 425              		.loc 1 148 0
 426 0020 FFF7FEFF 		bl	CyExitCriticalSection
 427              	.LVL12:
 156:Generated_Source\PSoC5/Hall_Timer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 428              		.loc 1 156 0
 429 0024 0020     		movs	r0, #0
 430 0026 FFF7FEFF 		bl	Hall_Timer_SetInterruptCount
 431              	.LVL13:
 159:Generated_Source\PSoC5/Hall_Timer.c ****     #endif /* Configure additional features of UDB implementation */
 432              		.loc 1 159 0
 433 002a FFF7FEFF 		bl	Hall_Timer_ClearFIFO
 434              	.LVL14:
 162:Generated_Source\PSoC5/Hall_Timer.c **** }
 435              		.loc 1 162 0
 436 002e 0220     		movs	r0, #2
 437 0030 FFF7FEFF 		bl	Hall_Timer_SetInterruptMode
 438              	.LVL15:
 439 0034 08BD     		pop	{r3, pc}
 440              	.L47:
 441 0036 00BF     		.align	2
 442              	.L46:
 443 0038 9B650040 		.word	1073767835
 444              		.cfi_endproc
 445              	.LFE0:
 446              		.size	Hall_Timer_Init, .-Hall_Timer_Init
 447              		.section	.text.Hall_Timer_Start,"ax",%progbits
 448              		.align	2
 449              		.global	Hall_Timer_Start
 450              		.thumb
 451              		.thumb_func
 452              		.type	Hall_Timer_Start, %function
 453              	Hall_Timer_Start:
 454              	.LFB2:
 216:Generated_Source\PSoC5/Hall_Timer.c ****     if(Hall_Timer_initVar == 0u)
 455              		.loc 1 216 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459 0000 08B5     		push	{r3, lr}
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 3, -8
 462              		.cfi_offset 14, -4
 217:Generated_Source\PSoC5/Hall_Timer.c ****     {
 463              		.loc 1 217 0
 464 0002 054B     		ldr	r3, .L51
 465 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 466 0006 23B9     		cbnz	r3, .L49
 219:Generated_Source\PSoC5/Hall_Timer.c **** 
 467              		.loc 1 219 0
 468 0008 FFF7FEFF 		bl	Hall_Timer_Init
 469              	.LVL16:
 221:Generated_Source\PSoC5/Hall_Timer.c ****     }
 470              		.loc 1 221 0
 471 000c 0122     		movs	r2, #1
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 23


 472 000e 024B     		ldr	r3, .L51
 473 0010 1A70     		strb	r2, [r3]
 474              	.L49:
 225:Generated_Source\PSoC5/Hall_Timer.c **** }
 475              		.loc 1 225 0
 476 0012 FFF7FEFF 		bl	Hall_Timer_Enable
 477              	.LVL17:
 478 0016 08BD     		pop	{r3, pc}
 479              	.L52:
 480              		.align	2
 481              	.L51:
 482 0018 00000000 		.word	.LANCHOR0
 483              		.cfi_endproc
 484              	.LFE2:
 485              		.size	Hall_Timer_Start, .-Hall_Timer_Start
 486              		.global	Hall_Timer_initVar
 487              		.bss
 488              		.set	.LANCHOR0,. + 0
 489              		.type	Hall_Timer_initVar, %object
 490              		.size	Hall_Timer_initVar, 1
 491              	Hall_Timer_initVar:
 492 0000 00       		.space	1
 493              		.text
 494              	.Letext0:
 495              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 496              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 497              		.section	.debug_info,"",%progbits
 498              	.Ldebug_info0:
 499 0000 24030000 		.4byte	0x324
 500 0004 0400     		.2byte	0x4
 501 0006 00000000 		.4byte	.Ldebug_abbrev0
 502 000a 04       		.byte	0x4
 503 000b 01       		.uleb128 0x1
 504 000c 81020000 		.4byte	.LASF41
 505 0010 0C       		.byte	0xc
 506 0011 80000000 		.4byte	.LASF42
 507 0015 49020000 		.4byte	.LASF43
 508 0019 00000000 		.4byte	.Ldebug_ranges0+0
 509 001d 00000000 		.4byte	0
 510 0021 00000000 		.4byte	.Ldebug_line0
 511 0025 02       		.uleb128 0x2
 512 0026 01       		.byte	0x1
 513 0027 06       		.byte	0x6
 514 0028 98030000 		.4byte	.LASF0
 515 002c 02       		.uleb128 0x2
 516 002d 01       		.byte	0x1
 517 002e 08       		.byte	0x8
 518 002f 18010000 		.4byte	.LASF1
 519 0033 02       		.uleb128 0x2
 520 0034 02       		.byte	0x2
 521 0035 05       		.byte	0x5
 522 0036 CF010000 		.4byte	.LASF2
 523 003a 02       		.uleb128 0x2
 524 003b 02       		.byte	0x2
 525 003c 07       		.byte	0x7
 526 003d A4030000 		.4byte	.LASF3
 527 0041 02       		.uleb128 0x2
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 24


 528 0042 04       		.byte	0x4
 529 0043 05       		.byte	0x5
 530 0044 61030000 		.4byte	.LASF4
 531 0048 02       		.uleb128 0x2
 532 0049 04       		.byte	0x4
 533 004a 07       		.byte	0x7
 534 004b 63010000 		.4byte	.LASF5
 535 004f 02       		.uleb128 0x2
 536 0050 08       		.byte	0x8
 537 0051 05       		.byte	0x5
 538 0052 18030000 		.4byte	.LASF6
 539 0056 02       		.uleb128 0x2
 540 0057 08       		.byte	0x8
 541 0058 07       		.byte	0x7
 542 0059 01010000 		.4byte	.LASF7
 543 005d 03       		.uleb128 0x3
 544 005e 04       		.byte	0x4
 545 005f 05       		.byte	0x5
 546 0060 696E7400 		.ascii	"int\000"
 547 0064 02       		.uleb128 0x2
 548 0065 04       		.byte	0x4
 549 0066 07       		.byte	0x7
 550 0067 11020000 		.4byte	.LASF8
 551 006b 04       		.uleb128 0x4
 552 006c 75010000 		.4byte	.LASF9
 553 0070 02       		.byte	0x2
 554 0071 E801     		.2byte	0x1e8
 555 0073 2C000000 		.4byte	0x2c
 556 0077 04       		.uleb128 0x4
 557 0078 F3010000 		.4byte	.LASF10
 558 007c 02       		.byte	0x2
 559 007d EA01     		.2byte	0x1ea
 560 007f 48000000 		.4byte	0x48
 561 0083 02       		.uleb128 0x2
 562 0084 04       		.byte	0x4
 563 0085 04       		.byte	0x4
 564 0086 F3000000 		.4byte	.LASF11
 565 008a 02       		.uleb128 0x2
 566 008b 08       		.byte	0x8
 567 008c 04       		.byte	0x4
 568 008d C8010000 		.4byte	.LASF12
 569 0091 02       		.uleb128 0x2
 570 0092 01       		.byte	0x1
 571 0093 08       		.byte	0x8
 572 0094 6A030000 		.4byte	.LASF13
 573 0098 04       		.uleb128 0x4
 574 0099 3E010000 		.4byte	.LASF14
 575 009d 02       		.byte	0x2
 576 009e 9202     		.2byte	0x292
 577 00a0 A4000000 		.4byte	0xa4
 578 00a4 05       		.uleb128 0x5
 579 00a5 6B000000 		.4byte	0x6b
 580 00a9 04       		.uleb128 0x4
 581 00aa 00000000 		.4byte	.LASF15
 582 00ae 02       		.byte	0x2
 583 00af 9402     		.2byte	0x294
 584 00b1 B5000000 		.4byte	0xb5
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 25


 585 00b5 05       		.uleb128 0x5
 586 00b6 77000000 		.4byte	0x77
 587 00ba 02       		.uleb128 0x2
 588 00bb 08       		.byte	0x8
 589 00bc 04       		.byte	0x4
 590 00bd 8C030000 		.4byte	.LASF16
 591 00c1 02       		.uleb128 0x2
 592 00c2 04       		.byte	0x4
 593 00c3 07       		.byte	0x7
 594 00c4 0F030000 		.4byte	.LASF17
 595 00c8 06       		.uleb128 0x6
 596 00c9 6E000000 		.4byte	.LASF18
 597 00cd 01       		.byte	0x1
 598 00ce B4       		.byte	0xb4
 599 00cf 00000000 		.4byte	.LFB1
 600 00d3 10000000 		.4byte	.LFE1-.LFB1
 601 00d7 01       		.uleb128 0x1
 602 00d8 9C       		.byte	0x9c
 603 00d9 06       		.uleb128 0x6
 604 00da 83010000 		.4byte	.LASF19
 605 00de 01       		.byte	0x1
 606 00df F7       		.byte	0xf7
 607 00e0 00000000 		.4byte	.LFB3
 608 00e4 10000000 		.4byte	.LFE3-.LFB3
 609 00e8 01       		.uleb128 0x1
 610 00e9 9C       		.byte	0x9c
 611 00ea 07       		.uleb128 0x7
 612 00eb 34030000 		.4byte	.LASF23
 613 00ef 01       		.byte	0x1
 614 00f0 1701     		.2byte	0x117
 615 00f2 00000000 		.4byte	.LFB4
 616 00f6 0C000000 		.4byte	.LFE4-.LFB4
 617 00fa 01       		.uleb128 0x1
 618 00fb 9C       		.byte	0x9c
 619 00fc 0F010000 		.4byte	0x10f
 620 0100 08       		.uleb128 0x8
 621 0101 26030000 		.4byte	.LASF25
 622 0105 01       		.byte	0x1
 623 0106 1701     		.2byte	0x117
 624 0108 6B000000 		.4byte	0x6b
 625 010c 01       		.uleb128 0x1
 626 010d 50       		.byte	0x50
 627 010e 00       		.byte	0
 628 010f 09       		.uleb128 0x9
 629 0110 06000000 		.4byte	.LASF20
 630 0114 01       		.byte	0x1
 631 0115 2E01     		.2byte	0x12e
 632 0117 00000000 		.4byte	.LFB5
 633 011b 0C000000 		.4byte	.LFE5-.LFB5
 634 011f 01       		.uleb128 0x1
 635 0120 9C       		.byte	0x9c
 636 0121 0A       		.uleb128 0xa
 637 0122 AA010000 		.4byte	.LASF21
 638 0126 01       		.byte	0x1
 639 0127 4D01     		.2byte	0x14d
 640 0129 6B000000 		.4byte	0x6b
 641 012d 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 26


 642 0131 0C000000 		.4byte	.LFE6-.LFB6
 643 0135 01       		.uleb128 0x1
 644 0136 9C       		.byte	0x9c
 645 0137 0A       		.uleb128 0xa
 646 0138 38000000 		.4byte	.LASF22
 647 013c 01       		.byte	0x1
 648 013d 6401     		.2byte	0x164
 649 013f 6B000000 		.4byte	0x6b
 650 0143 00000000 		.4byte	.LFB7
 651 0147 0C000000 		.4byte	.LFE7-.LFB7
 652 014b 01       		.uleb128 0x1
 653 014c 9C       		.byte	0x9c
 654 014d 07       		.uleb128 0x7
 655 014e 43010000 		.4byte	.LASF24
 656 0152 01       		.byte	0x1
 657 0153 7B01     		.2byte	0x17b
 658 0155 00000000 		.4byte	.LFB8
 659 0159 0C000000 		.4byte	.LFE8-.LFB8
 660 015d 01       		.uleb128 0x1
 661 015e 9C       		.byte	0x9c
 662 015f 72010000 		.4byte	0x172
 663 0163 08       		.uleb128 0x8
 664 0164 7B010000 		.4byte	.LASF26
 665 0168 01       		.byte	0x1
 666 0169 7B01     		.2byte	0x17b
 667 016b 6B000000 		.4byte	0x6b
 668 016f 01       		.uleb128 0x1
 669 0170 50       		.byte	0x50
 670 0171 00       		.byte	0
 671 0172 0A       		.uleb128 0xa
 672 0173 B7000000 		.4byte	.LASF27
 673 0177 01       		.byte	0x1
 674 0178 9501     		.2byte	0x195
 675 017a 77000000 		.4byte	0x77
 676 017e 00000000 		.4byte	.LFB9
 677 0182 0C000000 		.4byte	.LFE9-.LFB9
 678 0186 01       		.uleb128 0x1
 679 0187 9C       		.byte	0x9c
 680 0188 07       		.uleb128 0x7
 681 0189 93010000 		.4byte	.LASF28
 682 018d 01       		.byte	0x1
 683 018e AF01     		.2byte	0x1af
 684 0190 00000000 		.4byte	.LFB10
 685 0194 0C000000 		.4byte	.LFE10-.LFB10
 686 0198 01       		.uleb128 0x1
 687 0199 9C       		.byte	0x9c
 688 019a AD010000 		.4byte	0x1ad
 689 019e 08       		.uleb128 0x8
 690 019f 67000000 		.4byte	.LASF29
 691 01a3 01       		.byte	0x1
 692 01a4 AF01     		.2byte	0x1af
 693 01a6 77000000 		.4byte	0x77
 694 01aa 01       		.uleb128 0x1
 695 01ab 50       		.byte	0x50
 696 01ac 00       		.byte	0
 697 01ad 0A       		.uleb128 0xa
 698 01ae 21000000 		.4byte	.LASF30
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 27


 699 01b2 01       		.byte	0x1
 700 01b3 C801     		.2byte	0x1c8
 701 01b5 77000000 		.4byte	0x77
 702 01b9 00000000 		.4byte	.LFB11
 703 01bd 0C000000 		.4byte	.LFE11-.LFB11
 704 01c1 01       		.uleb128 0x1
 705 01c2 9C       		.byte	0x9c
 706 01c3 07       		.uleb128 0x7
 707 01c4 26010000 		.4byte	.LASF31
 708 01c8 01       		.byte	0x1
 709 01c9 E001     		.2byte	0x1e0
 710 01cb 00000000 		.4byte	.LFB12
 711 01cf 0C000000 		.4byte	.LFE12-.LFB12
 712 01d3 01       		.uleb128 0x1
 713 01d4 9C       		.byte	0x9c
 714 01d5 E8010000 		.4byte	0x1e8
 715 01d9 08       		.uleb128 0x8
 716 01da F9000000 		.4byte	.LASF32
 717 01de 01       		.byte	0x1
 718 01df E001     		.2byte	0x1e0
 719 01e1 77000000 		.4byte	0x77
 720 01e5 01       		.uleb128 0x1
 721 01e6 50       		.byte	0x50
 722 01e7 00       		.byte	0
 723 01e8 0A       		.uleb128 0xa
 724 01e9 CD000000 		.4byte	.LASF33
 725 01ed 01       		.byte	0x1
 726 01ee FC01     		.2byte	0x1fc
 727 01f0 77000000 		.4byte	0x77
 728 01f4 00000000 		.4byte	.LFB13
 729 01f8 14000000 		.4byte	.LFE13-.LFB13
 730 01fc 01       		.uleb128 0x1
 731 01fd 9C       		.byte	0x9c
 732 01fe 07       		.uleb128 0x7
 733 01ff 6F030000 		.4byte	.LASF34
 734 0203 01       		.byte	0x1
 735 0204 B002     		.2byte	0x2b0
 736 0206 00000000 		.4byte	.LFB14
 737 020a 1C000000 		.4byte	.LFE14-.LFB14
 738 020e 01       		.uleb128 0x1
 739 020f 9C       		.byte	0x9c
 740 0210 25020000 		.4byte	0x225
 741 0214 0B       		.uleb128 0xb
 742 0215 E4000000 		.4byte	.LASF35
 743 0219 01       		.byte	0x1
 744 021a B002     		.2byte	0x2b0
 745 021c 6B000000 		.4byte	0x6b
 746 0220 00000000 		.4byte	.LLST0
 747 0224 00       		.byte	0
 748 0225 07       		.uleb128 0x7
 749 0226 34020000 		.4byte	.LASF36
 750 022a 01       		.byte	0x1
 751 022b FB02     		.2byte	0x2fb
 752 022d 00000000 		.4byte	.LFB15
 753 0231 14000000 		.4byte	.LFE15-.LFB15
 754 0235 01       		.uleb128 0x1
 755 0236 9C       		.byte	0x9c
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 28


 756 0237 4E020000 		.4byte	0x24e
 757 023b 0C       		.uleb128 0xc
 758 023c 08000000 		.4byte	.LVL7
 759 0240 AD010000 		.4byte	0x1ad
 760 0244 0C       		.uleb128 0xc
 761 0245 0C000000 		.4byte	.LVL8
 762 0249 21010000 		.4byte	0x121
 763 024d 00       		.byte	0
 764 024e 0D       		.uleb128 0xd
 765 024f 57000000 		.4byte	.LASF37
 766 0253 01       		.byte	0x1
 767 0254 2B       		.byte	0x2b
 768 0255 00000000 		.4byte	.LFB0
 769 0259 3C000000 		.4byte	.LFE0-.LFB0
 770 025d 01       		.uleb128 0x1
 771 025e 9C       		.byte	0x9c
 772 025f D8020000 		.4byte	0x2d8
 773 0263 0E       		.uleb128 0xe
 774 0264 D9010000 		.4byte	.LASF44
 775 0268 01       		.byte	0x1
 776 0269 2F       		.byte	0x2f
 777 026a 6B000000 		.4byte	0x6b
 778 026e 1E000000 		.4byte	.LLST1
 779 0272 0F       		.uleb128 0xf
 780 0273 0A000000 		.4byte	.LVL9
 781 0277 88010000 		.4byte	0x188
 782 027b 86020000 		.4byte	0x286
 783 027f 10       		.uleb128 0x10
 784 0280 01       		.uleb128 0x1
 785 0281 50       		.byte	0x50
 786 0282 02       		.uleb128 0x2
 787 0283 09       		.byte	0x9
 788 0284 FF       		.byte	0xff
 789 0285 00       		.byte	0
 790 0286 0F       		.uleb128 0xf
 791 0287 12000000 		.4byte	.LVL10
 792 028b C3010000 		.4byte	0x1c3
 793 028f 9A020000 		.4byte	0x29a
 794 0293 10       		.uleb128 0x10
 795 0294 01       		.uleb128 0x1
 796 0295 50       		.byte	0x50
 797 0296 02       		.uleb128 0x2
 798 0297 09       		.byte	0x9
 799 0298 FF       		.byte	0xff
 800 0299 00       		.byte	0
 801 029a 0C       		.uleb128 0xc
 802 029b 16000000 		.4byte	.LVL11
 803 029f 11030000 		.4byte	0x311
 804 02a3 0C       		.uleb128 0xc
 805 02a4 24000000 		.4byte	.LVL12
 806 02a8 1C030000 		.4byte	0x31c
 807 02ac 0F       		.uleb128 0xf
 808 02ad 2A000000 		.4byte	.LVL13
 809 02b1 FE010000 		.4byte	0x1fe
 810 02b5 BF020000 		.4byte	0x2bf
 811 02b9 10       		.uleb128 0x10
 812 02ba 01       		.uleb128 0x1
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 29


 813 02bb 50       		.byte	0x50
 814 02bc 01       		.uleb128 0x1
 815 02bd 30       		.byte	0x30
 816 02be 00       		.byte	0
 817 02bf 0C       		.uleb128 0xc
 818 02c0 2E000000 		.4byte	.LVL14
 819 02c4 25020000 		.4byte	0x225
 820 02c8 11       		.uleb128 0x11
 821 02c9 34000000 		.4byte	.LVL15
 822 02cd EA000000 		.4byte	0xea
 823 02d1 10       		.uleb128 0x10
 824 02d2 01       		.uleb128 0x1
 825 02d3 50       		.byte	0x50
 826 02d4 01       		.uleb128 0x1
 827 02d5 32       		.byte	0x32
 828 02d6 00       		.byte	0
 829 02d7 00       		.byte	0
 830 02d8 0D       		.uleb128 0xd
 831 02d9 50030000 		.4byte	.LASF38
 832 02dd 01       		.byte	0x1
 833 02de D7       		.byte	0xd7
 834 02df 00000000 		.4byte	.LFB2
 835 02e3 1C000000 		.4byte	.LFE2-.LFB2
 836 02e7 01       		.uleb128 0x1
 837 02e8 9C       		.byte	0x9c
 838 02e9 00030000 		.4byte	0x300
 839 02ed 0C       		.uleb128 0xc
 840 02ee 0C000000 		.4byte	.LVL16
 841 02f2 4E020000 		.4byte	0x24e
 842 02f6 0C       		.uleb128 0xc
 843 02f7 16000000 		.4byte	.LVL17
 844 02fb C8000000 		.4byte	0xc8
 845 02ff 00       		.byte	0
 846 0300 12       		.uleb128 0x12
 847 0301 A4000000 		.4byte	.LASF45
 848 0305 01       		.byte	0x1
 849 0306 1A       		.byte	0x1a
 850 0307 6B000000 		.4byte	0x6b
 851 030b 05       		.uleb128 0x5
 852 030c 03       		.byte	0x3
 853 030d 00000000 		.4byte	Hall_Timer_initVar
 854 0311 13       		.uleb128 0x13
 855 0312 FA010000 		.4byte	.LASF39
 856 0316 FA010000 		.4byte	.LASF39
 857 031a 03       		.byte	0x3
 858 031b 7D       		.byte	0x7d
 859 031c 13       		.uleb128 0x13
 860 031d 1E020000 		.4byte	.LASF40
 861 0321 1E020000 		.4byte	.LASF40
 862 0325 03       		.byte	0x3
 863 0326 7E       		.byte	0x7e
 864 0327 00       		.byte	0
 865              		.section	.debug_abbrev,"",%progbits
 866              	.Ldebug_abbrev0:
 867 0000 01       		.uleb128 0x1
 868 0001 11       		.uleb128 0x11
 869 0002 01       		.byte	0x1
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 30


 870 0003 25       		.uleb128 0x25
 871 0004 0E       		.uleb128 0xe
 872 0005 13       		.uleb128 0x13
 873 0006 0B       		.uleb128 0xb
 874 0007 03       		.uleb128 0x3
 875 0008 0E       		.uleb128 0xe
 876 0009 1B       		.uleb128 0x1b
 877 000a 0E       		.uleb128 0xe
 878 000b 55       		.uleb128 0x55
 879 000c 17       		.uleb128 0x17
 880 000d 11       		.uleb128 0x11
 881 000e 01       		.uleb128 0x1
 882 000f 10       		.uleb128 0x10
 883 0010 17       		.uleb128 0x17
 884 0011 00       		.byte	0
 885 0012 00       		.byte	0
 886 0013 02       		.uleb128 0x2
 887 0014 24       		.uleb128 0x24
 888 0015 00       		.byte	0
 889 0016 0B       		.uleb128 0xb
 890 0017 0B       		.uleb128 0xb
 891 0018 3E       		.uleb128 0x3e
 892 0019 0B       		.uleb128 0xb
 893 001a 03       		.uleb128 0x3
 894 001b 0E       		.uleb128 0xe
 895 001c 00       		.byte	0
 896 001d 00       		.byte	0
 897 001e 03       		.uleb128 0x3
 898 001f 24       		.uleb128 0x24
 899 0020 00       		.byte	0
 900 0021 0B       		.uleb128 0xb
 901 0022 0B       		.uleb128 0xb
 902 0023 3E       		.uleb128 0x3e
 903 0024 0B       		.uleb128 0xb
 904 0025 03       		.uleb128 0x3
 905 0026 08       		.uleb128 0x8
 906 0027 00       		.byte	0
 907 0028 00       		.byte	0
 908 0029 04       		.uleb128 0x4
 909 002a 16       		.uleb128 0x16
 910 002b 00       		.byte	0
 911 002c 03       		.uleb128 0x3
 912 002d 0E       		.uleb128 0xe
 913 002e 3A       		.uleb128 0x3a
 914 002f 0B       		.uleb128 0xb
 915 0030 3B       		.uleb128 0x3b
 916 0031 05       		.uleb128 0x5
 917 0032 49       		.uleb128 0x49
 918 0033 13       		.uleb128 0x13
 919 0034 00       		.byte	0
 920 0035 00       		.byte	0
 921 0036 05       		.uleb128 0x5
 922 0037 35       		.uleb128 0x35
 923 0038 00       		.byte	0
 924 0039 49       		.uleb128 0x49
 925 003a 13       		.uleb128 0x13
 926 003b 00       		.byte	0
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 31


 927 003c 00       		.byte	0
 928 003d 06       		.uleb128 0x6
 929 003e 2E       		.uleb128 0x2e
 930 003f 00       		.byte	0
 931 0040 3F       		.uleb128 0x3f
 932 0041 19       		.uleb128 0x19
 933 0042 03       		.uleb128 0x3
 934 0043 0E       		.uleb128 0xe
 935 0044 3A       		.uleb128 0x3a
 936 0045 0B       		.uleb128 0xb
 937 0046 3B       		.uleb128 0x3b
 938 0047 0B       		.uleb128 0xb
 939 0048 27       		.uleb128 0x27
 940 0049 19       		.uleb128 0x19
 941 004a 11       		.uleb128 0x11
 942 004b 01       		.uleb128 0x1
 943 004c 12       		.uleb128 0x12
 944 004d 06       		.uleb128 0x6
 945 004e 40       		.uleb128 0x40
 946 004f 18       		.uleb128 0x18
 947 0050 9742     		.uleb128 0x2117
 948 0052 19       		.uleb128 0x19
 949 0053 00       		.byte	0
 950 0054 00       		.byte	0
 951 0055 07       		.uleb128 0x7
 952 0056 2E       		.uleb128 0x2e
 953 0057 01       		.byte	0x1
 954 0058 3F       		.uleb128 0x3f
 955 0059 19       		.uleb128 0x19
 956 005a 03       		.uleb128 0x3
 957 005b 0E       		.uleb128 0xe
 958 005c 3A       		.uleb128 0x3a
 959 005d 0B       		.uleb128 0xb
 960 005e 3B       		.uleb128 0x3b
 961 005f 05       		.uleb128 0x5
 962 0060 27       		.uleb128 0x27
 963 0061 19       		.uleb128 0x19
 964 0062 11       		.uleb128 0x11
 965 0063 01       		.uleb128 0x1
 966 0064 12       		.uleb128 0x12
 967 0065 06       		.uleb128 0x6
 968 0066 40       		.uleb128 0x40
 969 0067 18       		.uleb128 0x18
 970 0068 9742     		.uleb128 0x2117
 971 006a 19       		.uleb128 0x19
 972 006b 01       		.uleb128 0x1
 973 006c 13       		.uleb128 0x13
 974 006d 00       		.byte	0
 975 006e 00       		.byte	0
 976 006f 08       		.uleb128 0x8
 977 0070 05       		.uleb128 0x5
 978 0071 00       		.byte	0
 979 0072 03       		.uleb128 0x3
 980 0073 0E       		.uleb128 0xe
 981 0074 3A       		.uleb128 0x3a
 982 0075 0B       		.uleb128 0xb
 983 0076 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 32


 984 0077 05       		.uleb128 0x5
 985 0078 49       		.uleb128 0x49
 986 0079 13       		.uleb128 0x13
 987 007a 02       		.uleb128 0x2
 988 007b 18       		.uleb128 0x18
 989 007c 00       		.byte	0
 990 007d 00       		.byte	0
 991 007e 09       		.uleb128 0x9
 992 007f 2E       		.uleb128 0x2e
 993 0080 00       		.byte	0
 994 0081 3F       		.uleb128 0x3f
 995 0082 19       		.uleb128 0x19
 996 0083 03       		.uleb128 0x3
 997 0084 0E       		.uleb128 0xe
 998 0085 3A       		.uleb128 0x3a
 999 0086 0B       		.uleb128 0xb
 1000 0087 3B       		.uleb128 0x3b
 1001 0088 05       		.uleb128 0x5
 1002 0089 27       		.uleb128 0x27
 1003 008a 19       		.uleb128 0x19
 1004 008b 11       		.uleb128 0x11
 1005 008c 01       		.uleb128 0x1
 1006 008d 12       		.uleb128 0x12
 1007 008e 06       		.uleb128 0x6
 1008 008f 40       		.uleb128 0x40
 1009 0090 18       		.uleb128 0x18
 1010 0091 9742     		.uleb128 0x2117
 1011 0093 19       		.uleb128 0x19
 1012 0094 00       		.byte	0
 1013 0095 00       		.byte	0
 1014 0096 0A       		.uleb128 0xa
 1015 0097 2E       		.uleb128 0x2e
 1016 0098 00       		.byte	0
 1017 0099 3F       		.uleb128 0x3f
 1018 009a 19       		.uleb128 0x19
 1019 009b 03       		.uleb128 0x3
 1020 009c 0E       		.uleb128 0xe
 1021 009d 3A       		.uleb128 0x3a
 1022 009e 0B       		.uleb128 0xb
 1023 009f 3B       		.uleb128 0x3b
 1024 00a0 05       		.uleb128 0x5
 1025 00a1 27       		.uleb128 0x27
 1026 00a2 19       		.uleb128 0x19
 1027 00a3 49       		.uleb128 0x49
 1028 00a4 13       		.uleb128 0x13
 1029 00a5 11       		.uleb128 0x11
 1030 00a6 01       		.uleb128 0x1
 1031 00a7 12       		.uleb128 0x12
 1032 00a8 06       		.uleb128 0x6
 1033 00a9 40       		.uleb128 0x40
 1034 00aa 18       		.uleb128 0x18
 1035 00ab 9742     		.uleb128 0x2117
 1036 00ad 19       		.uleb128 0x19
 1037 00ae 00       		.byte	0
 1038 00af 00       		.byte	0
 1039 00b0 0B       		.uleb128 0xb
 1040 00b1 05       		.uleb128 0x5
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 33


 1041 00b2 00       		.byte	0
 1042 00b3 03       		.uleb128 0x3
 1043 00b4 0E       		.uleb128 0xe
 1044 00b5 3A       		.uleb128 0x3a
 1045 00b6 0B       		.uleb128 0xb
 1046 00b7 3B       		.uleb128 0x3b
 1047 00b8 05       		.uleb128 0x5
 1048 00b9 49       		.uleb128 0x49
 1049 00ba 13       		.uleb128 0x13
 1050 00bb 02       		.uleb128 0x2
 1051 00bc 17       		.uleb128 0x17
 1052 00bd 00       		.byte	0
 1053 00be 00       		.byte	0
 1054 00bf 0C       		.uleb128 0xc
 1055 00c0 898201   		.uleb128 0x4109
 1056 00c3 00       		.byte	0
 1057 00c4 11       		.uleb128 0x11
 1058 00c5 01       		.uleb128 0x1
 1059 00c6 31       		.uleb128 0x31
 1060 00c7 13       		.uleb128 0x13
 1061 00c8 00       		.byte	0
 1062 00c9 00       		.byte	0
 1063 00ca 0D       		.uleb128 0xd
 1064 00cb 2E       		.uleb128 0x2e
 1065 00cc 01       		.byte	0x1
 1066 00cd 3F       		.uleb128 0x3f
 1067 00ce 19       		.uleb128 0x19
 1068 00cf 03       		.uleb128 0x3
 1069 00d0 0E       		.uleb128 0xe
 1070 00d1 3A       		.uleb128 0x3a
 1071 00d2 0B       		.uleb128 0xb
 1072 00d3 3B       		.uleb128 0x3b
 1073 00d4 0B       		.uleb128 0xb
 1074 00d5 27       		.uleb128 0x27
 1075 00d6 19       		.uleb128 0x19
 1076 00d7 11       		.uleb128 0x11
 1077 00d8 01       		.uleb128 0x1
 1078 00d9 12       		.uleb128 0x12
 1079 00da 06       		.uleb128 0x6
 1080 00db 40       		.uleb128 0x40
 1081 00dc 18       		.uleb128 0x18
 1082 00dd 9742     		.uleb128 0x2117
 1083 00df 19       		.uleb128 0x19
 1084 00e0 01       		.uleb128 0x1
 1085 00e1 13       		.uleb128 0x13
 1086 00e2 00       		.byte	0
 1087 00e3 00       		.byte	0
 1088 00e4 0E       		.uleb128 0xe
 1089 00e5 34       		.uleb128 0x34
 1090 00e6 00       		.byte	0
 1091 00e7 03       		.uleb128 0x3
 1092 00e8 0E       		.uleb128 0xe
 1093 00e9 3A       		.uleb128 0x3a
 1094 00ea 0B       		.uleb128 0xb
 1095 00eb 3B       		.uleb128 0x3b
 1096 00ec 0B       		.uleb128 0xb
 1097 00ed 49       		.uleb128 0x49
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 34


 1098 00ee 13       		.uleb128 0x13
 1099 00ef 02       		.uleb128 0x2
 1100 00f0 17       		.uleb128 0x17
 1101 00f1 00       		.byte	0
 1102 00f2 00       		.byte	0
 1103 00f3 0F       		.uleb128 0xf
 1104 00f4 898201   		.uleb128 0x4109
 1105 00f7 01       		.byte	0x1
 1106 00f8 11       		.uleb128 0x11
 1107 00f9 01       		.uleb128 0x1
 1108 00fa 31       		.uleb128 0x31
 1109 00fb 13       		.uleb128 0x13
 1110 00fc 01       		.uleb128 0x1
 1111 00fd 13       		.uleb128 0x13
 1112 00fe 00       		.byte	0
 1113 00ff 00       		.byte	0
 1114 0100 10       		.uleb128 0x10
 1115 0101 8A8201   		.uleb128 0x410a
 1116 0104 00       		.byte	0
 1117 0105 02       		.uleb128 0x2
 1118 0106 18       		.uleb128 0x18
 1119 0107 9142     		.uleb128 0x2111
 1120 0109 18       		.uleb128 0x18
 1121 010a 00       		.byte	0
 1122 010b 00       		.byte	0
 1123 010c 11       		.uleb128 0x11
 1124 010d 898201   		.uleb128 0x4109
 1125 0110 01       		.byte	0x1
 1126 0111 11       		.uleb128 0x11
 1127 0112 01       		.uleb128 0x1
 1128 0113 31       		.uleb128 0x31
 1129 0114 13       		.uleb128 0x13
 1130 0115 00       		.byte	0
 1131 0116 00       		.byte	0
 1132 0117 12       		.uleb128 0x12
 1133 0118 34       		.uleb128 0x34
 1134 0119 00       		.byte	0
 1135 011a 03       		.uleb128 0x3
 1136 011b 0E       		.uleb128 0xe
 1137 011c 3A       		.uleb128 0x3a
 1138 011d 0B       		.uleb128 0xb
 1139 011e 3B       		.uleb128 0x3b
 1140 011f 0B       		.uleb128 0xb
 1141 0120 49       		.uleb128 0x49
 1142 0121 13       		.uleb128 0x13
 1143 0122 3F       		.uleb128 0x3f
 1144 0123 19       		.uleb128 0x19
 1145 0124 02       		.uleb128 0x2
 1146 0125 18       		.uleb128 0x18
 1147 0126 00       		.byte	0
 1148 0127 00       		.byte	0
 1149 0128 13       		.uleb128 0x13
 1150 0129 2E       		.uleb128 0x2e
 1151 012a 00       		.byte	0
 1152 012b 3F       		.uleb128 0x3f
 1153 012c 19       		.uleb128 0x19
 1154 012d 3C       		.uleb128 0x3c
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 35


 1155 012e 19       		.uleb128 0x19
 1156 012f 6E       		.uleb128 0x6e
 1157 0130 0E       		.uleb128 0xe
 1158 0131 03       		.uleb128 0x3
 1159 0132 0E       		.uleb128 0xe
 1160 0133 3A       		.uleb128 0x3a
 1161 0134 0B       		.uleb128 0xb
 1162 0135 3B       		.uleb128 0x3b
 1163 0136 0B       		.uleb128 0xb
 1164 0137 00       		.byte	0
 1165 0138 00       		.byte	0
 1166 0139 00       		.byte	0
 1167              		.section	.debug_loc,"",%progbits
 1168              	.Ldebug_loc0:
 1169              	.LLST0:
 1170 0000 00000000 		.4byte	.LVL4
 1171 0004 04000000 		.4byte	.LVL5
 1172 0008 0100     		.2byte	0x1
 1173 000a 50       		.byte	0x50
 1174 000b 04000000 		.4byte	.LVL5
 1175 000f 12000000 		.4byte	.LVL6
 1176 0013 0100     		.2byte	0x1
 1177 0015 50       		.byte	0x50
 1178 0016 00000000 		.4byte	0
 1179 001a 00000000 		.4byte	0
 1180              	.LLST1:
 1181 001e 16000000 		.4byte	.LVL11
 1182 0022 23000000 		.4byte	.LVL12-1
 1183 0026 0100     		.2byte	0x1
 1184 0028 50       		.byte	0x50
 1185 0029 00000000 		.4byte	0
 1186 002d 00000000 		.4byte	0
 1187              		.section	.debug_aranges,"",%progbits
 1188 0000 94000000 		.4byte	0x94
 1189 0004 0200     		.2byte	0x2
 1190 0006 00000000 		.4byte	.Ldebug_info0
 1191 000a 04       		.byte	0x4
 1192 000b 00       		.byte	0
 1193 000c 0000     		.2byte	0
 1194 000e 0000     		.2byte	0
 1195 0010 00000000 		.4byte	.LFB1
 1196 0014 10000000 		.4byte	.LFE1-.LFB1
 1197 0018 00000000 		.4byte	.LFB3
 1198 001c 10000000 		.4byte	.LFE3-.LFB3
 1199 0020 00000000 		.4byte	.LFB4
 1200 0024 0C000000 		.4byte	.LFE4-.LFB4
 1201 0028 00000000 		.4byte	.LFB5
 1202 002c 0C000000 		.4byte	.LFE5-.LFB5
 1203 0030 00000000 		.4byte	.LFB6
 1204 0034 0C000000 		.4byte	.LFE6-.LFB6
 1205 0038 00000000 		.4byte	.LFB7
 1206 003c 0C000000 		.4byte	.LFE7-.LFB7
 1207 0040 00000000 		.4byte	.LFB8
 1208 0044 0C000000 		.4byte	.LFE8-.LFB8
 1209 0048 00000000 		.4byte	.LFB9
 1210 004c 0C000000 		.4byte	.LFE9-.LFB9
 1211 0050 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 36


 1212 0054 0C000000 		.4byte	.LFE10-.LFB10
 1213 0058 00000000 		.4byte	.LFB11
 1214 005c 0C000000 		.4byte	.LFE11-.LFB11
 1215 0060 00000000 		.4byte	.LFB12
 1216 0064 0C000000 		.4byte	.LFE12-.LFB12
 1217 0068 00000000 		.4byte	.LFB13
 1218 006c 14000000 		.4byte	.LFE13-.LFB13
 1219 0070 00000000 		.4byte	.LFB14
 1220 0074 1C000000 		.4byte	.LFE14-.LFB14
 1221 0078 00000000 		.4byte	.LFB15
 1222 007c 14000000 		.4byte	.LFE15-.LFB15
 1223 0080 00000000 		.4byte	.LFB0
 1224 0084 3C000000 		.4byte	.LFE0-.LFB0
 1225 0088 00000000 		.4byte	.LFB2
 1226 008c 1C000000 		.4byte	.LFE2-.LFB2
 1227 0090 00000000 		.4byte	0
 1228 0094 00000000 		.4byte	0
 1229              		.section	.debug_ranges,"",%progbits
 1230              	.Ldebug_ranges0:
 1231 0000 00000000 		.4byte	.LFB1
 1232 0004 10000000 		.4byte	.LFE1
 1233 0008 00000000 		.4byte	.LFB3
 1234 000c 10000000 		.4byte	.LFE3
 1235 0010 00000000 		.4byte	.LFB4
 1236 0014 0C000000 		.4byte	.LFE4
 1237 0018 00000000 		.4byte	.LFB5
 1238 001c 0C000000 		.4byte	.LFE5
 1239 0020 00000000 		.4byte	.LFB6
 1240 0024 0C000000 		.4byte	.LFE6
 1241 0028 00000000 		.4byte	.LFB7
 1242 002c 0C000000 		.4byte	.LFE7
 1243 0030 00000000 		.4byte	.LFB8
 1244 0034 0C000000 		.4byte	.LFE8
 1245 0038 00000000 		.4byte	.LFB9
 1246 003c 0C000000 		.4byte	.LFE9
 1247 0040 00000000 		.4byte	.LFB10
 1248 0044 0C000000 		.4byte	.LFE10
 1249 0048 00000000 		.4byte	.LFB11
 1250 004c 0C000000 		.4byte	.LFE11
 1251 0050 00000000 		.4byte	.LFB12
 1252 0054 0C000000 		.4byte	.LFE12
 1253 0058 00000000 		.4byte	.LFB13
 1254 005c 14000000 		.4byte	.LFE13
 1255 0060 00000000 		.4byte	.LFB14
 1256 0064 1C000000 		.4byte	.LFE14
 1257 0068 00000000 		.4byte	.LFB15
 1258 006c 14000000 		.4byte	.LFE15
 1259 0070 00000000 		.4byte	.LFB0
 1260 0074 3C000000 		.4byte	.LFE0
 1261 0078 00000000 		.4byte	.LFB2
 1262 007c 1C000000 		.4byte	.LFE2
 1263 0080 00000000 		.4byte	0
 1264 0084 00000000 		.4byte	0
 1265              		.section	.debug_line,"",%progbits
 1266              	.Ldebug_line0:
 1267 0000 83010000 		.section	.debug_str,"MS",%progbits,1
 1267      02005200 
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 37


 1267      00000201 
 1267      FB0E0D00 
 1267      01010101 
 1268              	.LASF15:
 1269 0000 72656733 		.ascii	"reg32\000"
 1269      3200
 1270              	.LASF20:
 1271 0006 48616C6C 		.ascii	"Hall_Timer_SoftwareCapture\000"
 1271      5F54696D 
 1271      65725F53 
 1271      6F667477 
 1271      61726543 
 1272              	.LASF30:
 1273 0021 48616C6C 		.ascii	"Hall_Timer_ReadCapture\000"
 1273      5F54696D 
 1273      65725F52 
 1273      65616443 
 1273      61707475 
 1274              	.LASF22:
 1275 0038 48616C6C 		.ascii	"Hall_Timer_ReadControlRegister\000"
 1275      5F54696D 
 1275      65725F52 
 1275      65616443 
 1275      6F6E7472 
 1276              	.LASF37:
 1277 0057 48616C6C 		.ascii	"Hall_Timer_Init\000"
 1277      5F54696D 
 1277      65725F49 
 1277      6E697400 
 1278              	.LASF29:
 1279 0067 70657269 		.ascii	"period\000"
 1279      6F6400
 1280              	.LASF18:
 1281 006e 48616C6C 		.ascii	"Hall_Timer_Enable\000"
 1281      5F54696D 
 1281      65725F45 
 1281      6E61626C 
 1281      6500
 1282              	.LASF42:
 1283 0080 47656E65 		.ascii	"Generated_Source\\PSoC5\\Hall_Timer.c\000"
 1283      72617465 
 1283      645F536F 
 1283      75726365 
 1283      5C50536F 
 1284              	.LASF45:
 1285 00a4 48616C6C 		.ascii	"Hall_Timer_initVar\000"
 1285      5F54696D 
 1285      65725F69 
 1285      6E697456 
 1285      617200
 1286              	.LASF27:
 1287 00b7 48616C6C 		.ascii	"Hall_Timer_ReadPeriod\000"
 1287      5F54696D 
 1287      65725F52 
 1287      65616450 
 1287      6572696F 
 1288              	.LASF33:
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 38


 1289 00cd 48616C6C 		.ascii	"Hall_Timer_ReadCounter\000"
 1289      5F54696D 
 1289      65725F52 
 1289      65616443 
 1289      6F756E74 
 1290              	.LASF35:
 1291 00e4 696E7465 		.ascii	"interruptCount\000"
 1291      72727570 
 1291      74436F75 
 1291      6E7400
 1292              	.LASF11:
 1293 00f3 666C6F61 		.ascii	"float\000"
 1293      7400
 1294              	.LASF32:
 1295 00f9 636F756E 		.ascii	"counter\000"
 1295      74657200 
 1296              	.LASF7:
 1297 0101 6C6F6E67 		.ascii	"long long unsigned int\000"
 1297      206C6F6E 
 1297      6720756E 
 1297      7369676E 
 1297      65642069 
 1298              	.LASF1:
 1299 0118 756E7369 		.ascii	"unsigned char\000"
 1299      676E6564 
 1299      20636861 
 1299      7200
 1300              	.LASF31:
 1301 0126 48616C6C 		.ascii	"Hall_Timer_WriteCounter\000"
 1301      5F54696D 
 1301      65725F57 
 1301      72697465 
 1301      436F756E 
 1302              	.LASF14:
 1303 013e 72656738 		.ascii	"reg8\000"
 1303      00
 1304              	.LASF24:
 1305 0143 48616C6C 		.ascii	"Hall_Timer_WriteControlRegister\000"
 1305      5F54696D 
 1305      65725F57 
 1305      72697465 
 1305      436F6E74 
 1306              	.LASF5:
 1307 0163 6C6F6E67 		.ascii	"long unsigned int\000"
 1307      20756E73 
 1307      69676E65 
 1307      6420696E 
 1307      7400
 1308              	.LASF9:
 1309 0175 75696E74 		.ascii	"uint8\000"
 1309      3800
 1310              	.LASF26:
 1311 017b 636F6E74 		.ascii	"control\000"
 1311      726F6C00 
 1312              	.LASF19:
 1313 0183 48616C6C 		.ascii	"Hall_Timer_Stop\000"
 1313      5F54696D 
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 39


 1313      65725F53 
 1313      746F7000 
 1314              	.LASF28:
 1315 0193 48616C6C 		.ascii	"Hall_Timer_WritePeriod\000"
 1315      5F54696D 
 1315      65725F57 
 1315      72697465 
 1315      50657269 
 1316              	.LASF21:
 1317 01aa 48616C6C 		.ascii	"Hall_Timer_ReadStatusRegister\000"
 1317      5F54696D 
 1317      65725F52 
 1317      65616453 
 1317      74617475 
 1318              	.LASF12:
 1319 01c8 646F7562 		.ascii	"double\000"
 1319      6C6500
 1320              	.LASF2:
 1321 01cf 73686F72 		.ascii	"short int\000"
 1321      7420696E 
 1321      7400
 1322              	.LASF44:
 1323 01d9 48616C6C 		.ascii	"Hall_Timer_interruptState\000"
 1323      5F54696D 
 1323      65725F69 
 1323      6E746572 
 1323      72757074 
 1324              	.LASF10:
 1325 01f3 75696E74 		.ascii	"uint32\000"
 1325      333200
 1326              	.LASF39:
 1327 01fa 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1327      74657243 
 1327      72697469 
 1327      63616C53 
 1327      65637469 
 1328              	.LASF8:
 1329 0211 756E7369 		.ascii	"unsigned int\000"
 1329      676E6564 
 1329      20696E74 
 1329      00
 1330              	.LASF40:
 1331 021e 43794578 		.ascii	"CyExitCriticalSection\000"
 1331      69744372 
 1331      69746963 
 1331      616C5365 
 1331      6374696F 
 1332              	.LASF36:
 1333 0234 48616C6C 		.ascii	"Hall_Timer_ClearFIFO\000"
 1333      5F54696D 
 1333      65725F43 
 1333      6C656172 
 1333      4649464F 
 1334              	.LASF43:
 1335 0249 433A5C55 		.ascii	"C:\\Users\\ianh\\Documents\\Car Lab\\Navigation\\De"
 1335      73657273 
 1335      5C69616E 
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 40


 1335      685C446F 
 1335      63756D65 
 1336 0276 7369676E 		.ascii	"sign.cydsn\000"
 1336      2E637964 
 1336      736E00
 1337              	.LASF41:
 1338 0281 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1338      43313120 
 1338      352E342E 
 1338      31203230 
 1338      31363036 
 1339 02b4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1339      20726576 
 1339      6973696F 
 1339      6E203233 
 1339      37373135 
 1340 02e7 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1340      66756E63 
 1340      74696F6E 
 1340      2D736563 
 1340      74696F6E 
 1341              	.LASF17:
 1342 030f 73697A65 		.ascii	"sizetype\000"
 1342      74797065 
 1342      00
 1343              	.LASF6:
 1344 0318 6C6F6E67 		.ascii	"long long int\000"
 1344      206C6F6E 
 1344      6720696E 
 1344      7400
 1345              	.LASF25:
 1346 0326 696E7465 		.ascii	"interruptMode\000"
 1346      72727570 
 1346      744D6F64 
 1346      6500
 1347              	.LASF23:
 1348 0334 48616C6C 		.ascii	"Hall_Timer_SetInterruptMode\000"
 1348      5F54696D 
 1348      65725F53 
 1348      6574496E 
 1348      74657272 
 1349              	.LASF38:
 1350 0350 48616C6C 		.ascii	"Hall_Timer_Start\000"
 1350      5F54696D 
 1350      65725F53 
 1350      74617274 
 1350      00
 1351              	.LASF4:
 1352 0361 6C6F6E67 		.ascii	"long int\000"
 1352      20696E74 
 1352      00
 1353              	.LASF13:
 1354 036a 63686172 		.ascii	"char\000"
 1354      00
 1355              	.LASF34:
 1356 036f 48616C6C 		.ascii	"Hall_Timer_SetInterruptCount\000"
 1356      5F54696D 
ARM GAS  C:\Users\ianh\AppData\Local\Temp\ccnc6Z9P.s 			page 41


 1356      65725F53 
 1356      6574496E 
 1356      74657272 
 1357              	.LASF16:
 1358 038c 6C6F6E67 		.ascii	"long double\000"
 1358      20646F75 
 1358      626C6500 
 1359              	.LASF0:
 1360 0398 7369676E 		.ascii	"signed char\000"
 1360      65642063 
 1360      68617200 
 1361              	.LASF3:
 1362 03a4 73686F72 		.ascii	"short unsigned int\000"
 1362      7420756E 
 1362      7369676E 
 1362      65642069 
 1362      6E7400
 1363              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
