ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.frame_int,"ax",%progbits
  20              		.align	2
  21              		.global	frame_int
  22              		.thumb
  23              		.thumb_func
  24              		.type	frame_int, %function
  25              	frame_int:
  26              	.LFB64:
  27              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** #include "project.h"
  13:main.c        **** #include "lcd_functions.h"
  14:main.c        **** #include "lp_filter.h"
  15:main.c        **** #include <stdio.h>
  16:main.c        **** 
  17:main.c        **** volatile int numFrames = 0;
  18:main.c        **** 
  19:main.c        **** // Low-pass filter of darkness detector (video)
  20:main.c        **** volatile lpFilter darkFilter;
  21:main.c        **** 
  22:main.c        **** // Low-pass filter of hall effect sensor speed (mrpm)
  23:main.c        **** volatile lpFilter hallFilter;
  24:main.c        **** 
  25:main.c        **** // Last Hall effect sensor time
  26:main.c        **** uint32 lastHallTime = 0-1;
  27:main.c        **** 
  28:main.c        **** // Average mprm of the DC motor
  29:main.c        **** volatile double avgRpm;
  30:main.c        **** 
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 2


  31:main.c        **** // The number of milliseconds before the video detects a dark pixel
  32:main.c        **** volatile double darkTime;
  33:main.c        **** 
  34:main.c        **** // A timeout (if 0.2 seconds pass before a Hall update, clear the rpm)
  35:main.c        **** uint32 timeOutCounter = 0;
  36:main.c        **** 
  37:main.c        **** // Camera frame interrupt
  38:main.c        **** CY_ISR(frame_int) {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  39:main.c        ****     ++numFrames;
  33              		.loc 1 39 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 0133     		adds	r3, r3, #1
  37 0006 1360     		str	r3, [r2]
  38 0008 7047     		bx	lr
  39              	.L3:
  40 000a 00BF     		.align	2
  41              	.L2:
  42 000c 00000000 		.word	.LANCHOR0
  43              		.cfi_endproc
  44              	.LFE64:
  45              		.size	frame_int, .-frame_int
  46              		.section	.text.target_int,"ax",%progbits
  47              		.align	2
  48              		.global	target_int
  49              		.thumb
  50              		.thumb_func
  51              		.type	target_int, %function
  52              	target_int:
  53              	.LFB65:
  40:main.c        **** }
  41:main.c        **** 
  42:main.c        **** // Target interrupt
  43:main.c        **** CY_ISR(target_int) {
  54              		.loc 1 43 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58 0000 08B5     		push	{r3, lr}
  59              		.cfi_def_cfa_offset 8
  60              		.cfi_offset 3, -8
  61              		.cfi_offset 14, -4
  44:main.c        ****     Dark_Timer_ReadStatusRegister();
  62              		.loc 1 44 0
  63 0002 FFF7FEFF 		bl	Dark_Timer_ReadStatusRegister
  64              	.LVL0:
  65 0006 08BD     		pop	{r3, pc}
  66              		.cfi_endproc
  67              	.LFE65:
  68              		.size	target_int, .-target_int
  69              		.global	__aeabi_uldivmod
  70              		.global	__aeabi_ul2d
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 3


  71              		.global	__aeabi_ddiv
  72              		.section	.text.hall_int,"ax",%progbits
  73              		.align	2
  74              		.global	hall_int
  75              		.thumb
  76              		.thumb_func
  77              		.type	hall_int, %function
  78              	hall_int:
  79              	.LFB66:
  45:main.c        **** }
  46:main.c        **** 
  47:main.c        **** // Hall sensor interrupt
  48:main.c        **** CY_ISR(hall_int) {
  80              		.loc 1 48 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84 0000 10B5     		push	{r4, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 4, -8
  87              		.cfi_offset 14, -4
  49:main.c        ****     
  50:main.c        ****     // Clear the LCD
  51:main.c        ****     clearLCD();
  88              		.loc 1 51 0
  89 0002 FFF7FEFF 		bl	clearLCD
  90              	.LVL1:
  52:main.c        ****     
  53:main.c        ****     // Keep track of the time since the last Hall Effect Sensor pulse
  54:main.c        ****     uint32 hallTime = Hall_Timer_ReadCapture();
  91              		.loc 1 54 0
  92 0006 FFF7FEFF 		bl	Hall_Timer_ReadCapture
  93              	.LVL2:
  55:main.c        ****     uint32 diffTime = lastHallTime - hallTime;
  94              		.loc 1 55 0
  95 000a 114B     		ldr	r3, .L8+8
  96 000c 1968     		ldr	r1, [r3]
  97              	.LVL3:
  56:main.c        ****     lastHallTime = hallTime;
  98              		.loc 1 56 0
  99 000e 1860     		str	r0, [r3]
  57:main.c        ****     filterPush(&hallFilter, diffTime);
 100              		.loc 1 57 0
 101 0010 104C     		ldr	r4, .L8+12
 102 0012 091A     		subs	r1, r1, r0
 103              	.LVL4:
 104 0014 2046     		mov	r0, r4
 105              	.LVL5:
 106 0016 FFF7FEFF 		bl	filterPush
 107              	.LVL6:
  58:main.c        ****     
  59:main.c        ****     // Average hall effect mrpm
  60:main.c        ****     avgRpm = (double)((uint64) 12000000000 / (uint64) hallFilter.avg) / 1000.0;
 108              		.loc 1 60 0
 109 001a D4F80C22 		ldr	r2, [r4, #524]
 110 001e 0024     		movs	r4, #0
 111 0020 2346     		mov	r3, r4
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 4


 112 0022 09A1     		adr	r1, .L8
 113 0024 D1E90001 		ldrd	r0, [r1]
 114 0028 FFF7FEFF 		bl	__aeabi_uldivmod
 115              	.LVL7:
 116 002c FFF7FEFF 		bl	__aeabi_ul2d
 117              	.LVL8:
 118 0030 0022     		movs	r2, #0
 119 0032 094B     		ldr	r3, .L8+16
 120 0034 FFF7FEFF 		bl	__aeabi_ddiv
 121              	.LVL9:
 122 0038 084B     		ldr	r3, .L8+20
 123 003a C3E90001 		strd	r0, [r3]
  61:main.c        ****     
  62:main.c        ****     // Print the time
  63:main.c        ****     //char buf[128];
  64:main.c        ****     //sprintf(buf, "%lu\r\n", avgMrpm);
  65:main.c        ****     //XBee_PutString(buf);
  66:main.c        ****     
  67:main.c        ****     // Un-capture the hall timer
  68:main.c        ****     Hall_Timer_ReadStatusRegister();
 124              		.loc 1 68 0
 125 003e FFF7FEFF 		bl	Hall_Timer_ReadStatusRegister
 126              	.LVL10:
  69:main.c        ****     
  70:main.c        ****     // Clear the RPM
  71:main.c        ****     timeOutCounter = 0;
 127              		.loc 1 71 0
 128 0042 074B     		ldr	r3, .L8+24
 129 0044 5C60     		str	r4, [r3, #4]
 130 0046 10BD     		pop	{r4, pc}
 131              	.L9:
 132              		.align	3
 133              	.L8:
 134 0048 007841CB 		.word	-884901888
 135 004c 02000000 		.word	2
 136 0050 00000000 		.word	.LANCHOR1
 137 0054 00000000 		.word	hallFilter
 138 0058 00408F40 		.word	1083129856
 139 005c 00000000 		.word	avgRpm
 140 0060 00000000 		.word	.LANCHOR0
 141              		.cfi_endproc
 142              	.LFE66:
 143              		.size	hall_int, .-hall_int
 144              		.global	__aeabi_ui2d
 145              		.section	.text.dark_int,"ax",%progbits
 146              		.align	2
 147              		.global	dark_int
 148              		.thumb
 149              		.thumb_func
 150              		.type	dark_int, %function
 151              	dark_int:
 152              	.LFB67:
  72:main.c        **** }
  73:main.c        **** 
  74:main.c        **** // Dark (falling edge of comparator) interrupt
  75:main.c        **** CY_ISR(dark_int) {
 153              		.loc 1 75 0
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 5


 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157 0000 10B5     		push	{r4, lr}
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 4, -8
 160              		.cfi_offset 14, -4
  76:main.c        ****     
  77:main.c        ****     // Get the elapsed time, and if applicable, send it to the lp filter
  78:main.c        ****     uint32 timeElapsed = 0-1-Dark_Timer_ReadCapture();
 161              		.loc 1 78 0
 162 0002 FFF7FEFF 		bl	Dark_Timer_ReadCapture
 163              	.LVL11:
 164 0006 C143     		mvns	r1, r0
 165              	.LVL12:
  79:main.c        ****     if (timeElapsed > 630 || timeElapsed < 70) {
 166              		.loc 1 79 0
 167 0008 A1F14603 		sub	r3, r1, #70
 168 000c B3F50C7F 		cmp	r3, #560
 169 0010 0AD8     		bhi	.L10
  80:main.c        ****         return;
  81:main.c        ****     }
  82:main.c        ****     filterPush(&darkFilter, timeElapsed);
 170              		.loc 1 82 0
 171 0012 064C     		ldr	r4, .L13
 172 0014 2046     		mov	r0, r4
 173 0016 FFF7FEFF 		bl	filterPush
 174              	.LVL13:
  83:main.c        ****     
  84:main.c        ****     // Center (median) time
  85:main.c        ****     darkTime = darkFilter.median;
 175              		.loc 1 85 0
 176 001a D4F81002 		ldr	r0, [r4, #528]
 177 001e FFF7FEFF 		bl	__aeabi_ui2d
 178              	.LVL14:
 179 0022 034B     		ldr	r3, .L13+4
 180 0024 C3E90001 		strd	r0, [r3]
 181              	.L10:
 182 0028 10BD     		pop	{r4, pc}
 183              	.L14:
 184 002a 00BF     		.align	2
 185              	.L13:
 186 002c 00000000 		.word	darkFilter
 187 0030 00000000 		.word	darkTime
 188              		.cfi_endproc
 189              	.LFE67:
 190              		.size	dark_int, .-dark_int
 191              		.global	__aeabi_dsub
 192              		.global	__aeabi_dadd
 193              		.global	__aeabi_dmul
 194              		.global	__aeabi_dcmpgt
 195              		.global	__aeabi_dcmplt
 196              		.global	__aeabi_d2uiz
 197              		.global	__aeabi_d2iz
 198              		.section	.text.pid_int,"ax",%progbits
 199              		.align	2
 200              		.global	pid_int
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 6


 201              		.thumb
 202              		.thumb_func
 203              		.type	pid_int, %function
 204              	pid_int:
 205              	.LFB68:
  86:main.c        **** 
  87:main.c        ****     // Write the center elapsed time to the XBee
  88:main.c        ****     //char buf[128];
  89:main.c        ****     //sprintf(buf, "%ld\r\n", (int32)darkTime);
  90:main.c        ****     
  91:main.c        ****     /*
  92:main.c        ****     // Servo PWM Input
  93:main.c        ****     int servoPWM = darkTime * 2 + 824;
  94:main.c        ****     
  95:main.c        ****     // Servo Limits
  96:main.c        ****     if (servoPWM > 1900) {
  97:main.c        ****         servoPWM = 1900;
  98:main.c        ****     } else if (servoPWM < 1100) {
  99:main.c        ****         servoPWM = 1100;
 100:main.c        ****     }
 101:main.c        ****     */
 102:main.c        ****     
 103:main.c        ****     // Write the value to the screen
 104:main.c        ****     //XBee_PutString(buf);
 105:main.c        **** }
 106:main.c        **** 
 107:main.c        **** // PID (speed) last
 108:main.c        **** double lastErr_speed = 0.0;
 109:main.c        **** 
 110:main.c        **** // PID (speed) sum
 111:main.c        **** double sumErr_speed = 0.0;
 112:main.c        **** 
 113:main.c        **** // Goal (speed) rpm
 114:main.c        **** double goalRpm = 410.0;
 115:main.c        **** 
 116:main.c        **** // PID constants (speed)
 117:main.c        **** double kp_speed = 2.00;
 118:main.c        **** double ki_speed = 2.00;// 0.30;
 119:main.c        **** double kd_speed = 0.00;
 120:main.c        **** 
 121:main.c        **** // PID (steering) last
 122:main.c        **** double lastErr_steer = 0.0;
 123:main.c        **** 
 124:main.c        **** // PID (steering) sum
 125:main.c        **** double sumErr_steer = 0.0;
 126:main.c        **** 
 127:main.c        **** // Goal (speed) rpm
 128:main.c        **** double goalDarkTime = 380.0;
 129:main.c        **** 
 130:main.c        **** // PID constants (steering)
 131:main.c        **** double kp_steer = 1.15; //1.0
 132:main.c        **** double ki_steer = 0.0;  // 0.8;
 133:main.c        **** double kd_steer = 0.0; // 02; // 0.0;
 134:main.c        **** 
 135:main.c        **** // PID period (sec)
 136:main.c        **** double pid_period = 0.020;
 137:main.c        **** 
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 7


 138:main.c        **** // PID ISR (every 20 msec)
 139:main.c        **** CY_ISR(pid_int) {
 206              		.loc 1 139 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 144
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 211              		.cfi_def_cfa_offset 36
 212              		.cfi_offset 4, -36
 213              		.cfi_offset 5, -32
 214              		.cfi_offset 6, -28
 215              		.cfi_offset 7, -24
 216              		.cfi_offset 8, -20
 217              		.cfi_offset 9, -16
 218              		.cfi_offset 10, -12
 219              		.cfi_offset 11, -8
 220              		.cfi_offset 14, -4
 221 0004 A7B0     		sub	sp, sp, #156
 222              		.cfi_def_cfa_offset 192
 140:main.c        ****     
 141:main.c        ****     // Time out counter increment
 142:main.c        ****     timeOutCounter++;
 223              		.loc 1 142 0
 224 0006 9E4A     		ldr	r2, .L29+32
 225 0008 5368     		ldr	r3, [r2, #4]
 226 000a 0133     		adds	r3, r3, #1
 227 000c 5360     		str	r3, [r2, #4]
 143:main.c        ****     if (timeOutCounter >= 10) {
 228              		.loc 1 143 0
 229 000e 092B     		cmp	r3, #9
 230 0010 04D9     		bls	.L16
 144:main.c        ****         avgRpm = 0;
 231              		.loc 1 144 0
 232 0012 0020     		movs	r0, #0
 233 0014 0021     		movs	r1, #0
 234 0016 9B4B     		ldr	r3, .L29+36
 235 0018 C3E90001 		strd	r0, [r3]
 236              	.L16:
 145:main.c        ****     }
 146:main.c        ****     
 147:main.c        ****     // Calculate the current speed error
 148:main.c        ****     double currErr_speed = goalRpm - avgRpm;
 237              		.loc 1 148 0
 238 001c 9A4C     		ldr	r4, .L29+40
 239 001e D4E90267 		ldrd	r6, [r4, #8]
 240 0022 984B     		ldr	r3, .L29+36
 241 0024 D3E90023 		ldrd	r2, [r3]
 242 0028 3046     		mov	r0, r6
 243 002a 3946     		mov	r1, r7
 244 002c FFF7FEFF 		bl	__aeabi_dsub
 245              	.LVL15:
 246 0030 8246     		mov	r10, r0
 247 0032 8B46     		mov	fp, r1
 248              	.LVL16:
 149:main.c        ****     
 150:main.c        ****     // Integral calculation (and windup protection)
 151:main.c        ****     sumErr_speed += currErr_speed;
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 8


 249              		.loc 1 151 0
 250 0034 924D     		ldr	r5, .L29+32
 251 0036 D5E90223 		ldrd	r2, [r5, #8]
 252 003a FFF7FEFF 		bl	__aeabi_dadd
 253              	.LVL17:
 254 003e C5E90201 		strd	r0, [r5, #8]
 152:main.c        ****     double integralTerm_speed = (ki_speed * sumErr_speed * pid_period);
 255              		.loc 1 152 0
 256 0042 D4E90423 		ldrd	r2, [r4, #16]
 257 0046 FFF7FEFF 		bl	__aeabi_dmul
 258              	.LVL18:
 259 004a D4E90689 		ldrd	r8, [r4, #24]
 260 004e 4246     		mov	r2, r8
 261 0050 4B46     		mov	r3, r9
 262 0052 FFF7FEFF 		bl	__aeabi_dmul
 263              	.LVL19:
 264 0056 0446     		mov	r4, r0
 265 0058 0D46     		mov	r5, r1
 266 005a CDE90245 		strd	r4, [sp, #8]
 267              	.LVL20:
 153:main.c        ****     if (integralTerm_speed > 1024) {
 268              		.loc 1 153 0
 269 005e 0022     		movs	r2, #0
 270 0060 8A4B     		ldr	r3, .L29+44
 271 0062 FFF7FEFF 		bl	__aeabi_dcmpgt
 272              	.LVL21:
 273 0066 38B9     		cbnz	r0, .L21
 154:main.c        ****         integralTerm_speed = 1024;
 155:main.c        ****     } else if (integralTerm_speed < -1024) {
 274              		.loc 1 155 0
 275 0068 0022     		movs	r2, #0
 276 006a 894B     		ldr	r3, .L29+48
 277 006c 2046     		mov	r0, r4
 278 006e 2946     		mov	r1, r5
 279 0070 FFF7FEFF 		bl	__aeabi_dcmplt
 280              	.LVL22:
 281 0074 28B9     		cbnz	r0, .L22
 282 0076 08E0     		b	.L17
 283              	.L21:
 154:main.c        ****         integralTerm_speed = 1024;
 284              		.loc 1 154 0
 285 0078 0023     		movs	r3, #0
 286 007a 844C     		ldr	r4, .L29+44
 287              	.LVL23:
 288 007c CDE90234 		strd	r3, [sp, #8]
 289              	.LVL24:
 290 0080 03E0     		b	.L17
 291              	.LVL25:
 292              	.L22:
 156:main.c        ****         integralTerm_speed = -1024;
 293              		.loc 1 156 0
 294 0082 0023     		movs	r3, #0
 295 0084 824C     		ldr	r4, .L29+48
 296              	.LVL26:
 297 0086 CDE90234 		strd	r3, [sp, #8]
 298              	.LVL27:
 299              	.L17:
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 9


 157:main.c        ****     }
 158:main.c        ****     
 159:main.c        ****     // Integral reset when the error direction changes
 160:main.c        ****     //if (currErr_speed * lastErr_speed < 0) {
 161:main.c        ****     //    sumErr_speed = 0;
 162:main.c        ****     //}
 163:main.c        ****     
 164:main.c        ****     // Proportional calculation
 165:main.c        ****     double proportionalTerm_speed = (kp_speed * currErr_speed);
 300              		.loc 1 165 0
 301 008a 7F4B     		ldr	r3, .L29+40
 302 008c D3E90823 		ldrd	r2, [r3, #32]
 303 0090 5046     		mov	r0, r10
 304 0092 5946     		mov	r1, fp
 305 0094 FFF7FEFF 		bl	__aeabi_dmul
 306              	.LVL28:
 307 0098 CDE90401 		strd	r0, [sp, #16]
 308              	.LVL29:
 166:main.c        ****     
 167:main.c        ****     // Derivative calculation
 168:main.c        ****     double derivativeTerm_speed = (kd_speed * (currErr_speed - lastErr_speed) / pid_period);
 309              		.loc 1 168 0
 310 009c 784C     		ldr	r4, .L29+32
 311 009e D4E90423 		ldrd	r2, [r4, #16]
 312 00a2 5046     		mov	r0, r10
 313              	.LVL30:
 314 00a4 5946     		mov	r1, fp
 315 00a6 FFF7FEFF 		bl	__aeabi_dsub
 316              	.LVL31:
 317 00aa D4E90623 		ldrd	r2, [r4, #24]
 318 00ae FFF7FEFF 		bl	__aeabi_dmul
 319              	.LVL32:
 320 00b2 4246     		mov	r2, r8
 321 00b4 4B46     		mov	r3, r9
 322 00b6 FFF7FEFF 		bl	__aeabi_ddiv
 323              	.LVL33:
 324 00ba 8046     		mov	r8, r0
 325 00bc 8946     		mov	r9, r1
 326              	.LVL34:
 169:main.c        ****     
 170:main.c        ****     // PID sum
 171:main.c        ****     double pidOutput_speed = (uint32)(1.8 * goalRpm + proportionalTerm_speed + integralTerm_speed +
 327              		.loc 1 171 0
 328 00be 68A3     		adr	r3, .L29
 329 00c0 D3E90023 		ldrd	r2, [r3]
 330 00c4 3046     		mov	r0, r6
 331 00c6 3946     		mov	r1, r7
 332 00c8 FFF7FEFF 		bl	__aeabi_dmul
 333              	.LVL35:
 334 00cc 0246     		mov	r2, r0
 335 00ce 0B46     		mov	r3, r1
 336 00d0 DDE90401 		ldrd	r0, [sp, #16]
 337 00d4 FFF7FEFF 		bl	__aeabi_dadd
 338              	.LVL36:
 339 00d8 0246     		mov	r2, r0
 340 00da 0B46     		mov	r3, r1
 341 00dc DDE90201 		ldrd	r0, [sp, #8]
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 10


 342 00e0 FFF7FEFF 		bl	__aeabi_dadd
 343              	.LVL37:
 344 00e4 0246     		mov	r2, r0
 345 00e6 0B46     		mov	r3, r1
 346 00e8 4046     		mov	r0, r8
 347 00ea 4946     		mov	r1, r9
 348 00ec FFF7FEFF 		bl	__aeabi_dadd
 349              	.LVL38:
 350 00f0 FFF7FEFF 		bl	__aeabi_d2uiz
 351              	.LVL39:
 352 00f4 FFF7FEFF 		bl	__aeabi_ui2d
 353              	.LVL40:
 354 00f8 0646     		mov	r6, r0
 355 00fa 0F46     		mov	r7, r1
 356              	.LVL41:
 172:main.c        ****     
 173:main.c        ****     // Store the previous error
 174:main.c        ****     lastErr_speed = currErr_speed;
 357              		.loc 1 174 0
 358 00fc C4E904AB 		strd	r10, [r4, #16]
 175:main.c        ****     
 176:main.c        ****     // Bound the PID output
 177:main.c        ****     if (pidOutput_speed < 0) {
 178:main.c        ****         pidOutput_speed = 0;
 179:main.c        ****     } else if (pidOutput_speed > 4095) {
 359              		.loc 1 179 0
 360 0100 59A3     		adr	r3, .L29+8
 361 0102 D3E90023 		ldrd	r2, [r3]
 362 0106 FFF7FEFF 		bl	__aeabi_dcmpgt
 363              	.LVL42:
 364 010a 10B1     		cbz	r0, .L18
 180:main.c        ****         pidOutput_speed = 4095;
 365              		.loc 1 180 0
 366 010c 56A7     		adr	r7, .L29+8
 367 010e D7E90067 		ldrd	r6, [r7]
 368              	.LVL43:
 369              	.L18:
 181:main.c        ****     }
 182:main.c        ****     
 183:main.c        ****     // Update the speed as a result of the PID
 184:main.c        ****     Throttle_PWM_WriteCompare((uint16)pidOutput_speed);
 370              		.loc 1 184 0
 371 0112 3046     		mov	r0, r6
 372 0114 3946     		mov	r1, r7
 373 0116 FFF7FEFF 		bl	__aeabi_d2uiz
 374              	.LVL44:
 375 011a 80B2     		uxth	r0, r0
 376 011c FFF7FEFF 		bl	Throttle_PWM_WriteCompare
 377              	.LVL45:
 185:main.c        ****     
 186:main.c        ****     // Print to show the ISR has been triggered and the PID has been calculated
 187:main.c        ****     //char buf[128];
 188:main.c        ****     //sprintf(buf, "%10ld %10u %10ld\r\n", (int32)avgRpm, (uint16)pidOutput_speed, (int32)integralT
 189:main.c        ****     //XBee_PutString(buf);
 190:main.c        ****     
 191:main.c        ****     // Calculate the current steering error
 192:main.c        ****     double currErr_steer = (darkTime - goalDarkTime);
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 11


 378              		.loc 1 192 0
 379 0120 594F     		ldr	r7, .L29+40
 380 0122 D7E90A23 		ldrd	r2, [r7, #40]
 381 0126 5B49     		ldr	r1, .L29+52
 382 0128 D1E90001 		ldrd	r0, [r1]
 383 012c FFF7FEFF 		bl	__aeabi_dsub
 384              	.LVL46:
 385 0130 0446     		mov	r4, r0
 386 0132 0D46     		mov	r5, r1
 387              	.LVL47:
 193:main.c        ****     
 194:main.c        ****     // Integral calculation (and windup protection)
 195:main.c        ****     sumErr_steer += currErr_steer;
 388              		.loc 1 195 0
 389 0134 524E     		ldr	r6, .L29+32
 390              	.LVL48:
 391 0136 D6E90823 		ldrd	r2, [r6, #32]
 392 013a FFF7FEFF 		bl	__aeabi_dadd
 393              	.LVL49:
 394 013e C6E90801 		strd	r0, [r6, #32]
 196:main.c        ****     double integralTerm_steer = (ki_steer * sumErr_steer * pid_period);
 395              		.loc 1 196 0
 396 0142 D6E90A23 		ldrd	r2, [r6, #40]
 397 0146 FFF7FEFF 		bl	__aeabi_dmul
 398              	.LVL50:
 399 014a D7E90689 		ldrd	r8, [r7, #24]
 400              	.LVL51:
 401 014e 4246     		mov	r2, r8
 402 0150 4B46     		mov	r3, r9
 403 0152 FFF7FEFF 		bl	__aeabi_dmul
 404              	.LVL52:
 405 0156 8246     		mov	r10, r0
 406              	.LVL53:
 407 0158 8B46     		mov	fp, r1
 408              	.LVL54:
 197:main.c        ****     if (integralTerm_steer > 500) {
 409              		.loc 1 197 0
 410 015a 0022     		movs	r2, #0
 411 015c 4E4B     		ldr	r3, .L29+56
 412 015e FFF7FEFF 		bl	__aeabi_dcmpgt
 413              	.LVL55:
 414 0162 40B9     		cbnz	r0, .L24
 198:main.c        ****         integralTerm_steer = 500;
 199:main.c        ****     } else if (integralTerm_steer < -500) {
 415              		.loc 1 199 0
 416 0164 42A3     		adr	r3, .L29+16
 417 0166 D3E90023 		ldrd	r2, [r3]
 418 016a 5046     		mov	r0, r10
 419 016c 5946     		mov	r1, fp
 420 016e FFF7FEFF 		bl	__aeabi_dcmplt
 421              	.LVL56:
 422 0172 28B9     		cbnz	r0, .L25
 423 0174 08E0     		b	.L19
 424              	.L24:
 198:main.c        ****         integralTerm_steer = 500;
 425              		.loc 1 198 0
 426 0176 4FF0000A 		mov	r10, #0
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 12


 427              	.LVL57:
 428 017a DFF81CB1 		ldr	fp, .L29+56
 429 017e 03E0     		b	.L19
 430              	.LVL58:
 431              	.L25:
 200:main.c        ****         integralTerm_steer = -500;
 432              		.loc 1 200 0
 433 0180 0FF2EC0B 		adr	fp, .L29+16
 434 0184 DBE900AB 		ldrd	r10, [fp]
 435              	.LVL59:
 436              	.L19:
 201:main.c        ****     }
 202:main.c        ****     
 203:main.c        ****     // Integral reset when the error direction changes
 204:main.c        ****     // if (currErr_steer * lastErr_steer < 0) {
 205:main.c        ****     //     sumErr_steer = 0;
 206:main.c        ****     // }
 207:main.c        ****     
 208:main.c        ****     // Proportional calculation
 209:main.c        ****     double proportionalTerm_steer = (kp_steer * currErr_steer);
 437              		.loc 1 209 0
 438 0188 3F4B     		ldr	r3, .L29+40
 439 018a D3E90C23 		ldrd	r2, [r3, #48]
 440 018e 2046     		mov	r0, r4
 441 0190 2946     		mov	r1, r5
 442 0192 FFF7FEFF 		bl	__aeabi_dmul
 443              	.LVL60:
 444 0196 CDE90201 		strd	r0, [sp, #8]
 445              	.LVL61:
 210:main.c        ****     
 211:main.c        ****     double cubicProportional_steer = 0.0; //(kp_steer * 4e-5 * currErr_steer * currErr_steer * curr
 212:main.c        ****     
 213:main.c        ****     // Derivative calculation
 214:main.c        ****     double derivativeTerm_steer = (kd_steer * (currErr_steer - lastErr_steer) / pid_period);
 446              		.loc 1 214 0
 447 019a 394E     		ldr	r6, .L29+32
 448 019c D6E90C23 		ldrd	r2, [r6, #48]
 449 01a0 2046     		mov	r0, r4
 450              	.LVL62:
 451 01a2 2946     		mov	r1, r5
 452 01a4 FFF7FEFF 		bl	__aeabi_dsub
 453              	.LVL63:
 454 01a8 D6E90E23 		ldrd	r2, [r6, #56]
 455 01ac FFF7FEFF 		bl	__aeabi_dmul
 456              	.LVL64:
 457 01b0 4246     		mov	r2, r8
 458 01b2 4B46     		mov	r3, r9
 459 01b4 FFF7FEFF 		bl	__aeabi_ddiv
 460              	.LVL65:
 461 01b8 8046     		mov	r8, r0
 462 01ba 8946     		mov	r9, r1
 463              	.LVL66:
 215:main.c        ****     
 216:main.c        ****     // PID sum
 217:main.c        ****     double pidOutput_steer = (uint32)(1500 + proportionalTerm_steer + cubicProportional_steer + int
 464              		.loc 1 217 0
 465 01bc 2EA3     		adr	r3, .L29+24
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 13


 466 01be D3E90023 		ldrd	r2, [r3]
 467 01c2 DDE90201 		ldrd	r0, [sp, #8]
 468 01c6 FFF7FEFF 		bl	__aeabi_dadd
 469              	.LVL67:
 470 01ca 0022     		movs	r2, #0
 471 01cc 0023     		movs	r3, #0
 472 01ce FFF7FEFF 		bl	__aeabi_dadd
 473              	.LVL68:
 474 01d2 0246     		mov	r2, r0
 475 01d4 0B46     		mov	r3, r1
 476 01d6 5046     		mov	r0, r10
 477 01d8 5946     		mov	r1, fp
 478 01da FFF7FEFF 		bl	__aeabi_dadd
 479              	.LVL69:
 480 01de 0246     		mov	r2, r0
 481 01e0 0B46     		mov	r3, r1
 482 01e2 4046     		mov	r0, r8
 483 01e4 4946     		mov	r1, r9
 484 01e6 FFF7FEFF 		bl	__aeabi_dadd
 485              	.LVL70:
 486 01ea FFF7FEFF 		bl	__aeabi_d2uiz
 487              	.LVL71:
 488 01ee FFF7FEFF 		bl	__aeabi_ui2d
 489              	.LVL72:
 490 01f2 8046     		mov	r8, r0
 491              	.LVL73:
 492 01f4 8946     		mov	r9, r1
 493              	.LVL74:
 218:main.c        ****     
 219:main.c        ****     // Store the previous error
 220:main.c        ****     lastErr_steer = currErr_steer;
 494              		.loc 1 220 0
 495 01f6 C6E90C45 		strd	r4, [r6, #48]
 221:main.c        ****     
 222:main.c        ****     // Bound the PID output
 223:main.c        ****     if (pidOutput_steer < 1000) {
 496              		.loc 1 223 0
 497 01fa 0022     		movs	r2, #0
 498 01fc 274B     		ldr	r3, .L29+60
 499 01fe FFF7FEFF 		bl	__aeabi_dcmplt
 500              	.LVL75:
 501 0202 38B9     		cbnz	r0, .L26
 224:main.c        ****         pidOutput_steer = 1000;
 225:main.c        ****     } else if (pidOutput_steer > 2000) {
 502              		.loc 1 225 0
 503 0204 0022     		movs	r2, #0
 504 0206 264B     		ldr	r3, .L29+64
 505 0208 4046     		mov	r0, r8
 506 020a 4946     		mov	r1, r9
 507 020c FFF7FEFF 		bl	__aeabi_dcmpgt
 508              	.LVL76:
 509 0210 28B9     		cbnz	r0, .L27
 510 0212 08E0     		b	.L20
 511              	.L26:
 224:main.c        ****         pidOutput_steer = 1000;
 512              		.loc 1 224 0
 513 0214 4FF00008 		mov	r8, #0
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 14


 514              	.LVL77:
 515 0218 DFF88090 		ldr	r9, .L29+60
 516 021c 03E0     		b	.L20
 517              	.LVL78:
 518              	.L27:
 226:main.c        ****         pidOutput_steer = 2000;
 519              		.loc 1 226 0
 520 021e 4FF00008 		mov	r8, #0
 521              	.LVL79:
 522 0222 DFF87C90 		ldr	r9, .L29+64
 523              	.L20:
 524              	.LVL80:
 227:main.c        ****     }
 228:main.c        ****     
 229:main.c        ****     char buf[128];
 230:main.c        ****     sprintf(buf, "err = %5ld ; cube = %5ld ; output = %4ld\r\n", (int32)currErr_steer, (int32)cubic
 525              		.loc 1 230 0
 526 0226 2046     		mov	r0, r4
 527 0228 2946     		mov	r1, r5
 528 022a FFF7FEFF 		bl	__aeabi_d2iz
 529              	.LVL81:
 530 022e 0446     		mov	r4, r0
 531              	.LVL82:
 532 0230 4046     		mov	r0, r8
 533 0232 4946     		mov	r1, r9
 534 0234 FFF7FEFF 		bl	__aeabi_d2iz
 535              	.LVL83:
 536 0238 0090     		str	r0, [sp]
 537 023a 0023     		movs	r3, #0
 538 023c 2246     		mov	r2, r4
 539 023e 1949     		ldr	r1, .L29+68
 540 0240 06A8     		add	r0, sp, #24
 541 0242 FFF7FEFF 		bl	sprintf
 542              	.LVL84:
 231:main.c        ****     XBee_PutString(buf);
 543              		.loc 1 231 0
 544 0246 06A8     		add	r0, sp, #24
 545 0248 FFF7FEFF 		bl	XBee_PutString
 546              	.LVL85:
 232:main.c        ****     
 233:main.c        ****     // Update the steering as a result of the PID
 234:main.c        ****     Servo_PWM_WriteCompare(pidOutput_steer);
 547              		.loc 1 234 0
 548 024c 4046     		mov	r0, r8
 549 024e 4946     		mov	r1, r9
 550 0250 FFF7FEFF 		bl	__aeabi_d2uiz
 551              	.LVL86:
 552 0254 80B2     		uxth	r0, r0
 553 0256 FFF7FEFF 		bl	Servo_PWM_WriteCompare
 554              	.LVL87:
 235:main.c        **** }
 555              		.loc 1 235 0
 556 025a 27B0     		add	sp, sp, #156
 557              		.cfi_def_cfa_offset 36
 558              		@ sp needed
 559 025c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 560              	.LVL88:
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 15


 561              	.L30:
 562              		.align	3
 563              	.L29:
 564 0260 CDCCCCCC 		.word	-858993459
 565 0264 CCCCFC3F 		.word	1073532108
 566 0268 00000000 		.word	0
 567 026c 00FEAF40 		.word	1085275648
 568 0270 00000000 		.word	0
 569 0274 00407FC0 		.word	-1065402368
 570 0278 00000000 		.word	0
 571 027c 00709740 		.word	1083666432
 572 0280 00000000 		.word	.LANCHOR0
 573 0284 00000000 		.word	avgRpm
 574 0288 00000000 		.word	.LANCHOR1
 575 028c 00009040 		.word	1083179008
 576 0290 000090C0 		.word	-1064304640
 577 0294 00000000 		.word	darkTime
 578 0298 00407F40 		.word	1082081280
 579 029c 00408F40 		.word	1083129856
 580 02a0 00409F40 		.word	1084178432
 581 02a4 00000000 		.word	.LC0
 582              		.cfi_endproc
 583              	.LFE68:
 584              		.size	pid_int, .-pid_int
 585              		.section	.text.main,"ax",%progbits
 586              		.align	2
 587              		.global	main
 588              		.thumb
 589              		.thumb_func
 590              		.type	main, %function
 591              	main:
 592              	.LFB69:
 236:main.c        **** 
 237:main.c        **** int main(void)
 238:main.c        **** {
 593              		.loc 1 238 0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597 0000 08B5     		push	{r3, lr}
 598              		.cfi_def_cfa_offset 8
 599              		.cfi_offset 3, -8
 600              		.cfi_offset 14, -4
 239:main.c        ****     // Servo PWM
 240:main.c        ****     Servo_PWM_Start();
 601              		.loc 1 240 0
 602 0002 FFF7FEFF 		bl	Servo_PWM_Start
 603              	.LVL89:
 604              	.LBB2:
 241:main.c        ****     
 242:main.c        ****     int j = 112;
 243:main.c        ****     for (int i=0; i<1234567; i++) {
 605              		.loc 1 243 0
 606 0006 0022     		movs	r2, #0
 607              	.LBE2:
 242:main.c        ****     for (int i=0; i<1234567; i++) {
 608              		.loc 1 242 0
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 16


 609 0008 7023     		movs	r3, #112
 610              	.LBB3:
 611              		.loc 1 243 0
 612 000a 08E0     		b	.L32
 613              	.LVL90:
 614              	.L35:
 244:main.c        ****         if (j & 1) j = 3 * j + 1;
 615              		.loc 1 244 0
 616 000c 13F0010F 		tst	r3, #1
 617 0010 03D0     		beq	.L33
 618              		.loc 1 244 0 is_stmt 0 discriminator 1
 619 0012 03EB4303 		add	r3, r3, r3, lsl #1
 620              	.LVL91:
 621 0016 0133     		adds	r3, r3, #1
 622              	.LVL92:
 623 0018 00E0     		b	.L34
 624              	.L33:
 245:main.c        ****         else j >>= 1;
 625              		.loc 1 245 0 is_stmt 1
 626 001a 5B10     		asrs	r3, r3, #1
 627              	.LVL93:
 628              	.L34:
 243:main.c        ****         if (j & 1) j = 3 * j + 1;
 629              		.loc 1 243 0 discriminator 2
 630 001c 0132     		adds	r2, r2, #1
 631              	.LVL94:
 632              	.L32:
 243:main.c        ****         if (j & 1) j = 3 * j + 1;
 633              		.loc 1 243 0 is_stmt 0 discriminator 1
 634 001e 1C49     		ldr	r1, .L38
 635 0020 8A42     		cmp	r2, r1
 636 0022 F3DD     		ble	.L35
 637              	.LBE3:
 246:main.c        ****     }
 247:main.c        ****     
 248:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 638              		.loc 1 248 0 is_stmt 1
 639              		.syntax unified
 640              	@ 248 "main.c" 1
 641 0024 62B6     		CPSIE   i
 642              	@ 0 "" 2
 249:main.c        **** 
 250:main.c        ****     // Start the LCD
 251:main.c        ****     initLCD();
 643              		.loc 1 251 0
 644              		.thumb
 645              		.syntax unified
 646 0026 FFF7FEFF 		bl	initLCD
 647              	.LVL95:
 252:main.c        ****     
 253:main.c        ****     XBee_Start();
 648              		.loc 1 253 0
 649 002a FFF7FEFF 		bl	XBee_Start
 650              	.LVL96:
 254:main.c        ****     XBee_PutString("\r\nStart!\r\n");
 651              		.loc 1 254 0
 652 002e 1948     		ldr	r0, .L38+4
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 17


 653 0030 FFF7FEFF 		bl	XBee_PutString
 654              	.LVL97:
 255:main.c        ****     
 256:main.c        ****     // Frame interrupt
 257:main.c        ****     Frame_Interrupt_Start();
 655              		.loc 1 257 0
 656 0034 FFF7FEFF 		bl	Frame_Interrupt_Start
 657              	.LVL98:
 258:main.c        ****     Frame_Interrupt_SetVector(frame_int);
 658              		.loc 1 258 0
 659 0038 1748     		ldr	r0, .L38+8
 660 003a FFF7FEFF 		bl	Frame_Interrupt_SetVector
 661              	.LVL99:
 259:main.c        ****     
 260:main.c        ****     // Dark interrupt
 261:main.c        ****     Analog_CMP_Start();
 662              		.loc 1 261 0
 663 003e FFF7FEFF 		bl	Analog_CMP_Start
 664              	.LVL100:
 262:main.c        ****     Reference_Start();
 665              		.loc 1 262 0
 666 0042 FFF7FEFF 		bl	Reference_Start
 667              	.LVL101:
 263:main.c        ****     Dark_Timer_Start();
 668              		.loc 1 263 0
 669 0046 FFF7FEFF 		bl	Dark_Timer_Start
 670              	.LVL102:
 264:main.c        ****     Dark_Interrupt_Start();
 671              		.loc 1 264 0
 672 004a FFF7FEFF 		bl	Dark_Interrupt_Start
 673              	.LVL103:
 265:main.c        ****     Dark_Interrupt_SetVector(dark_int);
 674              		.loc 1 265 0
 675 004e 1348     		ldr	r0, .L38+12
 676 0050 FFF7FEFF 		bl	Dark_Interrupt_SetVector
 677              	.LVL104:
 266:main.c        ****     filterResize(&darkFilter, 3);
 678              		.loc 1 266 0
 679 0054 0321     		movs	r1, #3
 680 0056 1248     		ldr	r0, .L38+16
 681 0058 FFF7FEFF 		bl	filterResize
 682              	.LVL105:
 267:main.c        ****     
 268:main.c        ****     // Hall sensor interrupt
 269:main.c        ****     Hall_Interrupt_Start();
 683              		.loc 1 269 0
 684 005c FFF7FEFF 		bl	Hall_Interrupt_Start
 685              	.LVL106:
 270:main.c        ****     Hall_Timer_Start();
 686              		.loc 1 270 0
 687 0060 FFF7FEFF 		bl	Hall_Timer_Start
 688              	.LVL107:
 271:main.c        ****     Hall_Interrupt_SetVector(hall_int);
 689              		.loc 1 271 0
 690 0064 0F48     		ldr	r0, .L38+20
 691 0066 FFF7FEFF 		bl	Hall_Interrupt_SetVector
 692              	.LVL108:
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 18


 272:main.c        ****     filterResize(&hallFilter, 5);
 693              		.loc 1 272 0
 694 006a 0521     		movs	r1, #5
 695 006c 0E48     		ldr	r0, .L38+24
 696 006e FFF7FEFF 		bl	filterResize
 697              	.LVL109:
 273:main.c        ****     
 274:main.c        ****     // Target row interrupt
 275:main.c        ****     Target_Interrupt_Start();
 698              		.loc 1 275 0
 699 0072 FFF7FEFF 		bl	Target_Interrupt_Start
 700              	.LVL110:
 276:main.c        ****     Target_Interrupt_SetVector(target_int);
 701              		.loc 1 276 0
 702 0076 0D48     		ldr	r0, .L38+28
 703 0078 FFF7FEFF 		bl	Target_Interrupt_SetVector
 704              	.LVL111:
 277:main.c        ****     
 278:main.c        ****     // Throttle PWM
 279:main.c        ****     Throttle_PWM_Start();
 705              		.loc 1 279 0
 706 007c FFF7FEFF 		bl	Throttle_PWM_Start
 707              	.LVL112:
 280:main.c        ****     
 281:main.c        ****     // PID ISR
 282:main.c        ****     PID_Timer_Start();
 708              		.loc 1 282 0
 709 0080 FFF7FEFF 		bl	PID_Timer_Start
 710              	.LVL113:
 283:main.c        ****     PID_Interrupt_Start();
 711              		.loc 1 283 0
 712 0084 FFF7FEFF 		bl	PID_Interrupt_Start
 713              	.LVL114:
 284:main.c        ****     PID_Interrupt_SetVector(pid_int);
 714              		.loc 1 284 0
 715 0088 0948     		ldr	r0, .L38+32
 716 008a FFF7FEFF 		bl	PID_Interrupt_SetVector
 717              	.LVL115:
 718              	.L36:
 719 008e FEE7     		b	.L36
 720              	.L39:
 721              		.align	2
 722              	.L38:
 723 0090 86D61200 		.word	1234566
 724 0094 2C000000 		.word	.LC1
 725 0098 00000000 		.word	frame_int
 726 009c 00000000 		.word	dark_int
 727 00a0 00000000 		.word	darkFilter
 728 00a4 00000000 		.word	hall_int
 729 00a8 00000000 		.word	hallFilter
 730 00ac 00000000 		.word	target_int
 731 00b0 00000000 		.word	pid_int
 732              		.cfi_endproc
 733              	.LFE69:
 734              		.size	main, .-main
 735              		.global	pid_period
 736              		.global	kd_steer
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 19


 737              		.global	ki_steer
 738              		.global	kp_steer
 739              		.global	goalDarkTime
 740              		.global	sumErr_steer
 741              		.global	lastErr_steer
 742              		.global	kd_speed
 743              		.global	ki_speed
 744              		.global	kp_speed
 745              		.global	goalRpm
 746              		.global	sumErr_speed
 747              		.global	lastErr_speed
 748              		.global	timeOutCounter
 749              		.comm	darkTime,8,8
 750              		.comm	avgRpm,8,8
 751              		.global	lastHallTime
 752              		.comm	hallFilter,532,4
 753              		.comm	darkFilter,532,4
 754              		.global	numFrames
 755              		.data
 756              		.align	3
 757              		.set	.LANCHOR1,. + 0
 758              		.type	lastHallTime, %object
 759              		.size	lastHallTime, 4
 760              	lastHallTime:
 761 0000 FFFFFFFF 		.word	-1
 762 0004 00000000 		.space	4
 763              		.type	goalRpm, %object
 764              		.size	goalRpm, 8
 765              	goalRpm:
 766 0008 00000000 		.word	0
 767 000c 00A07940 		.word	1081712640
 768              		.type	ki_speed, %object
 769              		.size	ki_speed, 8
 770              	ki_speed:
 771 0010 00000000 		.word	0
 772 0014 00000040 		.word	1073741824
 773              		.type	pid_period, %object
 774              		.size	pid_period, 8
 775              	pid_period:
 776 0018 7B14AE47 		.word	1202590843
 777 001c E17A943F 		.word	1066695393
 778              		.type	kp_speed, %object
 779              		.size	kp_speed, 8
 780              	kp_speed:
 781 0020 00000000 		.word	0
 782 0024 00000040 		.word	1073741824
 783              		.type	goalDarkTime, %object
 784              		.size	goalDarkTime, 8
 785              	goalDarkTime:
 786 0028 00000000 		.word	0
 787 002c 00C07740 		.word	1081589760
 788              		.type	kp_steer, %object
 789              		.size	kp_steer, 8
 790              	kp_steer:
 791 0030 66666666 		.word	1717986918
 792 0034 6666F23F 		.word	1072850534
 793              		.section	.rodata.str1.4,"aMS",%progbits,1
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 20


 794              		.align	2
 795              	.LC0:
 796 0000 65727220 		.ascii	"err = %5ld ; cube = %5ld ; output = %4ld\015\012\000"
 796      3D202535 
 796      6C64203B 
 796      20637562 
 796      65203D20 
 797 002b 00       		.space	1
 798              	.LC1:
 799 002c 0D0A5374 		.ascii	"\015\012Start!\015\012\000"
 799      61727421 
 799      0D0A00
 800              		.bss
 801              		.align	3
 802              		.set	.LANCHOR0,. + 0
 803              		.type	numFrames, %object
 804              		.size	numFrames, 4
 805              	numFrames:
 806 0000 00000000 		.space	4
 807              		.type	timeOutCounter, %object
 808              		.size	timeOutCounter, 4
 809              	timeOutCounter:
 810 0004 00000000 		.space	4
 811              		.type	sumErr_speed, %object
 812              		.size	sumErr_speed, 8
 813              	sumErr_speed:
 814 0008 00000000 		.space	8
 814      00000000 
 815              		.type	lastErr_speed, %object
 816              		.size	lastErr_speed, 8
 817              	lastErr_speed:
 818 0010 00000000 		.space	8
 818      00000000 
 819              		.type	kd_speed, %object
 820              		.size	kd_speed, 8
 821              	kd_speed:
 822 0018 00000000 		.space	8
 822      00000000 
 823              		.type	sumErr_steer, %object
 824              		.size	sumErr_steer, 8
 825              	sumErr_steer:
 826 0020 00000000 		.space	8
 826      00000000 
 827              		.type	ki_steer, %object
 828              		.size	ki_steer, 8
 829              	ki_steer:
 830 0028 00000000 		.space	8
 830      00000000 
 831              		.type	lastErr_steer, %object
 832              		.size	lastErr_steer, 8
 833              	lastErr_steer:
 834 0030 00000000 		.space	8
 834      00000000 
 835              		.type	kd_steer, %object
 836              		.size	kd_steer, 8
 837              	kd_steer:
 838 0038 00000000 		.space	8
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 21


 838      00000000 
 839              		.text
 840              	.Letext0:
 841              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 842              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 843              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 844              		.file 5 "lp_filter.h"
 845              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 846              		.file 7 "Generated_Source\\PSoC5/Dark_Timer.h"
 847              		.file 8 "lcd_functions.h"
 848              		.file 9 "Generated_Source\\PSoC5/Hall_Timer.h"
 849              		.file 10 "Generated_Source\\PSoC5/Throttle_PWM.h"
 850              		.file 11 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 851              		.file 12 "Generated_Source\\PSoC5/XBee.h"
 852              		.file 13 "Generated_Source\\PSoC5/Servo_PWM.h"
 853              		.file 14 "Generated_Source\\PSoC5/Frame_Interrupt.h"
 854              		.file 15 "Generated_Source\\PSoC5/Analog_CMP.h"
 855              		.file 16 "Generated_Source\\PSoC5/Reference.h"
 856              		.file 17 "Generated_Source\\PSoC5/Dark_Interrupt.h"
 857              		.file 18 "Generated_Source\\PSoC5/Hall_Interrupt.h"
 858              		.file 19 "Generated_Source\\PSoC5/Target_Interrupt.h"
 859              		.file 20 "Generated_Source\\PSoC5/PID_Timer.h"
 860              		.file 21 "Generated_Source\\PSoC5/PID_Interrupt.h"
 861              		.section	.debug_info,"",%progbits
 862              	.Ldebug_info0:
 863 0000 85070000 		.4byte	0x785
 864 0004 0400     		.2byte	0x4
 865 0006 00000000 		.4byte	.Ldebug_abbrev0
 866 000a 04       		.byte	0x4
 867 000b 01       		.uleb128 0x1
 868 000c 3C050000 		.4byte	.LASF92
 869 0010 0C       		.byte	0xc
 870 0011 1A040000 		.4byte	.LASF93
 871 0015 CD000000 		.4byte	.LASF94
 872 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 873 001d 00000000 		.4byte	0
 874 0021 00000000 		.4byte	.Ldebug_line0
 875 0025 02       		.uleb128 0x2
 876 0026 01       		.byte	0x1
 877 0027 06       		.byte	0x6
 878 0028 78020000 		.4byte	.LASF0
 879 002c 02       		.uleb128 0x2
 880 002d 01       		.byte	0x1
 881 002e 08       		.byte	0x8
 882 002f 53020000 		.4byte	.LASF1
 883 0033 02       		.uleb128 0x2
 884 0034 02       		.byte	0x2
 885 0035 05       		.byte	0x5
 886 0036 65000000 		.4byte	.LASF2
 887 003a 02       		.uleb128 0x2
 888 003b 02       		.byte	0x2
 889 003c 07       		.byte	0x7
 890 003d 33030000 		.4byte	.LASF3
 891 0041 03       		.uleb128 0x3
 892 0042 74040000 		.4byte	.LASF9
 893 0046 02       		.byte	0x2
 894 0047 3F       		.byte	0x3f
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 22


 895 0048 4C000000 		.4byte	0x4c
 896 004c 02       		.uleb128 0x2
 897 004d 04       		.byte	0x4
 898 004e 05       		.byte	0x5
 899 004f 85030000 		.4byte	.LASF4
 900 0053 02       		.uleb128 0x2
 901 0054 04       		.byte	0x4
 902 0055 07       		.byte	0x7
 903 0056 21040000 		.4byte	.LASF5
 904 005a 02       		.uleb128 0x2
 905 005b 08       		.byte	0x8
 906 005c 05       		.byte	0x5
 907 005d 8D010000 		.4byte	.LASF6
 908 0061 02       		.uleb128 0x2
 909 0062 08       		.byte	0x8
 910 0063 07       		.byte	0x7
 911 0064 8F020000 		.4byte	.LASF7
 912 0068 04       		.uleb128 0x4
 913 0069 04       		.byte	0x4
 914 006a 05       		.byte	0x5
 915 006b 696E7400 		.ascii	"int\000"
 916 006f 02       		.uleb128 0x2
 917 0070 04       		.byte	0x4
 918 0071 07       		.byte	0x7
 919 0072 D2020000 		.4byte	.LASF8
 920 0076 03       		.uleb128 0x3
 921 0077 AA030000 		.4byte	.LASF10
 922 007b 03       		.byte	0x3
 923 007c 2C       		.byte	0x2c
 924 007d 41000000 		.4byte	0x41
 925 0081 05       		.uleb128 0x5
 926 0082 25010000 		.4byte	.LASF11
 927 0086 04       		.byte	0x4
 928 0087 E901     		.2byte	0x1e9
 929 0089 3A000000 		.4byte	0x3a
 930 008d 05       		.uleb128 0x5
 931 008e 13040000 		.4byte	.LASF12
 932 0092 04       		.byte	0x4
 933 0093 EA01     		.2byte	0x1ea
 934 0095 53000000 		.4byte	0x53
 935 0099 05       		.uleb128 0x5
 936 009a 33040000 		.4byte	.LASF13
 937 009e 04       		.byte	0x4
 938 009f ED01     		.2byte	0x1ed
 939 00a1 4C000000 		.4byte	0x4c
 940 00a5 02       		.uleb128 0x2
 941 00a6 04       		.byte	0x4
 942 00a7 04       		.byte	0x4
 943 00a8 87010000 		.4byte	.LASF14
 944 00ac 02       		.uleb128 0x2
 945 00ad 08       		.byte	0x8
 946 00ae 04       		.byte	0x4
 947 00af 39040000 		.4byte	.LASF15
 948 00b3 05       		.uleb128 0x5
 949 00b4 E4010000 		.4byte	.LASF16
 950 00b8 04       		.byte	0x4
 951 00b9 F401     		.2byte	0x1f4
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 23


 952 00bb 61000000 		.4byte	0x61
 953 00bf 02       		.uleb128 0x2
 954 00c0 01       		.byte	0x1
 955 00c1 08       		.byte	0x8
 956 00c2 80030000 		.4byte	.LASF17
 957 00c6 06       		.uleb128 0x6
 958 00c7 8D000000 		.4byte	0x8d
 959 00cb 02       		.uleb128 0x2
 960 00cc 08       		.byte	0x8
 961 00cd 04       		.byte	0x4
 962 00ce 33020000 		.4byte	.LASF18
 963 00d2 02       		.uleb128 0x2
 964 00d3 04       		.byte	0x4
 965 00d4 07       		.byte	0x7
 966 00d5 6F000000 		.4byte	.LASF19
 967 00d9 07       		.uleb128 0x7
 968 00da 1402     		.2byte	0x214
 969 00dc 05       		.byte	0x5
 970 00dd 11       		.byte	0x11
 971 00de 30010000 		.4byte	0x130
 972 00e2 08       		.uleb128 0x8
 973 00e3 62756600 		.ascii	"buf\000"
 974 00e7 05       		.byte	0x5
 975 00e8 14       		.byte	0x14
 976 00e9 40010000 		.4byte	0x140
 977 00ed 00       		.byte	0
 978 00ee 09       		.uleb128 0x9
 979 00ef 56040000 		.4byte	.LASF20
 980 00f3 05       		.byte	0x5
 981 00f4 15       		.byte	0x15
 982 00f5 45010000 		.4byte	0x145
 983 00f9 0002     		.2byte	0x200
 984 00fb 0A       		.uleb128 0xa
 985 00fc 69647800 		.ascii	"idx\000"
 986 0100 05       		.byte	0x5
 987 0101 16       		.byte	0x16
 988 0102 45010000 		.4byte	0x145
 989 0106 0402     		.2byte	0x204
 990 0108 0A       		.uleb128 0xa
 991 0109 73756D00 		.ascii	"sum\000"
 992 010d 05       		.byte	0x5
 993 010e 17       		.byte	0x17
 994 010f C6000000 		.4byte	0xc6
 995 0113 0802     		.2byte	0x208
 996 0115 0A       		.uleb128 0xa
 997 0116 61766700 		.ascii	"avg\000"
 998 011a 05       		.byte	0x5
 999 011b 18       		.byte	0x18
 1000 011c C6000000 		.4byte	0xc6
 1001 0120 0C02     		.2byte	0x20c
 1002 0122 09       		.uleb128 0x9
 1003 0123 4A010000 		.4byte	.LASF21
 1004 0127 05       		.byte	0x5
 1005 0128 19       		.byte	0x19
 1006 0129 C6000000 		.4byte	0xc6
 1007 012d 1002     		.2byte	0x210
 1008 012f 00       		.byte	0
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 24


 1009 0130 0B       		.uleb128 0xb
 1010 0131 C6000000 		.4byte	0xc6
 1011 0135 40010000 		.4byte	0x140
 1012 0139 0C       		.uleb128 0xc
 1013 013a D2000000 		.4byte	0xd2
 1014 013e 7F       		.byte	0x7f
 1015 013f 00       		.byte	0
 1016 0140 06       		.uleb128 0x6
 1017 0141 30010000 		.4byte	0x130
 1018 0145 06       		.uleb128 0x6
 1019 0146 68000000 		.4byte	0x68
 1020 014a 03       		.uleb128 0x3
 1021 014b DB010000 		.4byte	.LASF22
 1022 014f 05       		.byte	0x5
 1023 0150 1B       		.byte	0x1b
 1024 0151 D9000000 		.4byte	0xd9
 1025 0155 0D       		.uleb128 0xd
 1026 0156 27000000 		.4byte	.LASF95
 1027 015a 01       		.byte	0x1
 1028 015b 26       		.byte	0x26
 1029 015c 00000000 		.4byte	.LFB64
 1030 0160 10000000 		.4byte	.LFE64-.LFB64
 1031 0164 01       		.uleb128 0x1
 1032 0165 9C       		.byte	0x9c
 1033 0166 0E       		.uleb128 0xe
 1034 0167 9F030000 		.4byte	.LASF23
 1035 016b 01       		.byte	0x1
 1036 016c 2B       		.byte	0x2b
 1037 016d 00000000 		.4byte	.LFB65
 1038 0171 08000000 		.4byte	.LFE65-.LFB65
 1039 0175 01       		.uleb128 0x1
 1040 0176 9C       		.byte	0x9c
 1041 0177 85010000 		.4byte	0x185
 1042 017b 0F       		.uleb128 0xf
 1043 017c 06000000 		.4byte	.LVL0
 1044 0180 3E060000 		.4byte	0x63e
 1045 0184 00       		.byte	0
 1046 0185 10       		.uleb128 0x10
 1047 0186 4A020000 		.4byte	.LASF24
 1048 018a 01       		.byte	0x1
 1049 018b 30       		.byte	0x30
 1050 018c 00000000 		.4byte	.LFB66
 1051 0190 64000000 		.4byte	.LFE66-.LFB66
 1052 0194 01       		.uleb128 0x1
 1053 0195 9C       		.byte	0x9c
 1054 0196 E8010000 		.4byte	0x1e8
 1055 019a 11       		.uleb128 0x11
 1056 019b 83000000 		.4byte	.LASF25
 1057 019f 01       		.byte	0x1
 1058 01a0 36       		.byte	0x36
 1059 01a1 8D000000 		.4byte	0x8d
 1060 01a5 00000000 		.4byte	.LLST0
 1061 01a9 11       		.uleb128 0x11
 1062 01aa 05010000 		.4byte	.LASF26
 1063 01ae 01       		.byte	0x1
 1064 01af 37       		.byte	0x37
 1065 01b0 8D000000 		.4byte	0x8d
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 25


 1066 01b4 22000000 		.4byte	.LLST1
 1067 01b8 0F       		.uleb128 0xf
 1068 01b9 06000000 		.4byte	.LVL1
 1069 01bd 49060000 		.4byte	0x649
 1070 01c1 0F       		.uleb128 0xf
 1071 01c2 0A000000 		.4byte	.LVL2
 1072 01c6 54060000 		.4byte	0x654
 1073 01ca 12       		.uleb128 0x12
 1074 01cb 1A000000 		.4byte	.LVL6
 1075 01cf 5F060000 		.4byte	0x65f
 1076 01d3 DE010000 		.4byte	0x1de
 1077 01d7 13       		.uleb128 0x13
 1078 01d8 01       		.uleb128 0x1
 1079 01d9 50       		.byte	0x50
 1080 01da 02       		.uleb128 0x2
 1081 01db 74       		.byte	0x74
 1082 01dc 00       		.sleb128 0
 1083 01dd 00       		.byte	0
 1084 01de 0F       		.uleb128 0xf
 1085 01df 42000000 		.4byte	.LVL10
 1086 01e3 6A060000 		.4byte	0x66a
 1087 01e7 00       		.byte	0
 1088 01e8 10       		.uleb128 0x10
 1089 01e9 0E010000 		.4byte	.LASF27
 1090 01ed 01       		.byte	0x1
 1091 01ee 4B       		.byte	0x4b
 1092 01ef 00000000 		.4byte	.LFB67
 1093 01f3 34000000 		.4byte	.LFE67-.LFB67
 1094 01f7 01       		.uleb128 0x1
 1095 01f8 9C       		.byte	0x9c
 1096 01f9 26020000 		.4byte	0x226
 1097 01fd 11       		.uleb128 0x11
 1098 01fe 12000000 		.4byte	.LASF28
 1099 0202 01       		.byte	0x1
 1100 0203 4E       		.byte	0x4e
 1101 0204 8D000000 		.4byte	0x8d
 1102 0208 45000000 		.4byte	.LLST2
 1103 020c 0F       		.uleb128 0xf
 1104 020d 06000000 		.4byte	.LVL11
 1105 0211 75060000 		.4byte	0x675
 1106 0215 14       		.uleb128 0x14
 1107 0216 1A000000 		.4byte	.LVL13
 1108 021a 5F060000 		.4byte	0x65f
 1109 021e 13       		.uleb128 0x13
 1110 021f 01       		.uleb128 0x1
 1111 0220 50       		.byte	0x50
 1112 0221 02       		.uleb128 0x2
 1113 0222 74       		.byte	0x74
 1114 0223 00       		.sleb128 0
 1115 0224 00       		.byte	0
 1116 0225 00       		.byte	0
 1117 0226 10       		.uleb128 0x10
 1118 0227 27050000 		.4byte	.LASF29
 1119 022b 01       		.byte	0x1
 1120 022c 8B       		.byte	0x8b
 1121 022d 00000000 		.4byte	.LFB68
 1122 0231 A8020000 		.4byte	.LFE68-.LFB68
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 26


 1123 0235 01       		.uleb128 0x1
 1124 0236 9C       		.byte	0x9c
 1125 0237 45030000 		.4byte	0x345
 1126 023b 11       		.uleb128 0x11
 1127 023c 17010000 		.4byte	.LASF30
 1128 0240 01       		.byte	0x1
 1129 0241 94       		.byte	0x94
 1130 0242 AC000000 		.4byte	0xac
 1131 0246 58000000 		.4byte	.LLST3
 1132 024a 11       		.uleb128 0x11
 1133 024b 02020000 		.4byte	.LASF31
 1134 024f 01       		.byte	0x1
 1135 0250 98       		.byte	0x98
 1136 0251 AC000000 		.4byte	0xac
 1137 0255 70000000 		.4byte	.LLST4
 1138 0259 11       		.uleb128 0x11
 1139 025a 61020000 		.4byte	.LASF32
 1140 025e 01       		.byte	0x1
 1141 025f A5       		.byte	0xa5
 1142 0260 AC000000 		.4byte	0xac
 1143 0264 B2000000 		.4byte	.LLST5
 1144 0268 11       		.uleb128 0x11
 1145 0269 BF030000 		.4byte	.LASF33
 1146 026d 01       		.byte	0x1
 1147 026e A8       		.byte	0xa8
 1148 026f AC000000 		.4byte	0xac
 1149 0273 E4000000 		.4byte	.LLST6
 1150 0277 11       		.uleb128 0x11
 1151 0278 51010000 		.4byte	.LASF34
 1152 027c 01       		.byte	0x1
 1153 027d AB       		.byte	0xab
 1154 027e AC000000 		.4byte	0xac
 1155 0282 FC000000 		.4byte	.LLST7
 1156 0286 11       		.uleb128 0x11
 1157 0287 79010000 		.4byte	.LASF35
 1158 028b 01       		.byte	0x1
 1159 028c C0       		.byte	0xc0
 1160 028d AC000000 		.4byte	0xac
 1161 0291 14010000 		.4byte	.LLST8
 1162 0295 11       		.uleb128 0x11
 1163 0296 20030000 		.4byte	.LASF36
 1164 029a 01       		.byte	0x1
 1165 029b C4       		.byte	0xc4
 1166 029c AC000000 		.4byte	0xac
 1167 02a0 2C010000 		.4byte	.LLST9
 1168 02a4 11       		.uleb128 0x11
 1169 02a5 55030000 		.4byte	.LASF37
 1170 02a9 01       		.byte	0x1
 1171 02aa D1       		.byte	0xd1
 1172 02ab AC000000 		.4byte	0xac
 1173 02af 54010000 		.4byte	.LLST10
 1174 02b3 15       		.uleb128 0x15
 1175 02b4 F1050000 		.4byte	.LASF38
 1176 02b8 01       		.byte	0x1
 1177 02b9 D3       		.byte	0xd3
 1178 02ba AC000000 		.4byte	0xac
 1179 02be 08       		.byte	0x8
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 27


 1180 02bf 00000000 		.4byte	0
 1181 02c3 00000000 		.4byte	0
 1182 02c7 11       		.uleb128 0x11
 1183 02c8 9B010000 		.4byte	.LASF39
 1184 02cc 01       		.byte	0x1
 1185 02cd D6       		.byte	0xd6
 1186 02ce AC000000 		.4byte	0xac
 1187 02d2 86010000 		.4byte	.LLST11
 1188 02d6 11       		.uleb128 0x11
 1189 02d7 BA010000 		.4byte	.LASF40
 1190 02db 01       		.byte	0x1
 1191 02dc D9       		.byte	0xd9
 1192 02dd AC000000 		.4byte	0xac
 1193 02e1 9E010000 		.4byte	.LLST12
 1194 02e5 16       		.uleb128 0x16
 1195 02e6 62756600 		.ascii	"buf\000"
 1196 02ea 01       		.byte	0x1
 1197 02eb E5       		.byte	0xe5
 1198 02ec 45030000 		.4byte	0x345
 1199 02f0 03       		.uleb128 0x3
 1200 02f1 91       		.byte	0x91
 1201 02f2 D87E     		.sleb128 -168
 1202 02f4 0F       		.uleb128 0xf
 1203 02f5 20010000 		.4byte	.LVL45
 1204 02f9 80060000 		.4byte	0x680
 1205 02fd 12       		.uleb128 0x12
 1206 02fe 46020000 		.4byte	.LVL84
 1207 0302 8B060000 		.4byte	0x68b
 1208 0306 26030000 		.4byte	0x326
 1209 030a 13       		.uleb128 0x13
 1210 030b 01       		.uleb128 0x1
 1211 030c 50       		.byte	0x50
 1212 030d 03       		.uleb128 0x3
 1213 030e 91       		.byte	0x91
 1214 030f D87E     		.sleb128 -168
 1215 0311 13       		.uleb128 0x13
 1216 0312 01       		.uleb128 0x1
 1217 0313 51       		.byte	0x51
 1218 0314 05       		.uleb128 0x5
 1219 0315 03       		.byte	0x3
 1220 0316 00000000 		.4byte	.LC0
 1221 031a 13       		.uleb128 0x13
 1222 031b 01       		.uleb128 0x1
 1223 031c 52       		.byte	0x52
 1224 031d 02       		.uleb128 0x2
 1225 031e 74       		.byte	0x74
 1226 031f 00       		.sleb128 0
 1227 0320 13       		.uleb128 0x13
 1228 0321 01       		.uleb128 0x1
 1229 0322 53       		.byte	0x53
 1230 0323 01       		.uleb128 0x1
 1231 0324 30       		.byte	0x30
 1232 0325 00       		.byte	0
 1233 0326 12       		.uleb128 0x12
 1234 0327 4C020000 		.4byte	.LVL85
 1235 032b 96060000 		.4byte	0x696
 1236 032f 3B030000 		.4byte	0x33b
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 28


 1237 0333 13       		.uleb128 0x13
 1238 0334 01       		.uleb128 0x1
 1239 0335 50       		.byte	0x50
 1240 0336 03       		.uleb128 0x3
 1241 0337 91       		.byte	0x91
 1242 0338 D87E     		.sleb128 -168
 1243 033a 00       		.byte	0
 1244 033b 0F       		.uleb128 0xf
 1245 033c 5A020000 		.4byte	.LVL87
 1246 0340 A1060000 		.4byte	0x6a1
 1247 0344 00       		.byte	0
 1248 0345 0B       		.uleb128 0xb
 1249 0346 BF000000 		.4byte	0xbf
 1250 034a 55030000 		.4byte	0x355
 1251 034e 0C       		.uleb128 0xc
 1252 034f D2000000 		.4byte	0xd2
 1253 0353 7F       		.byte	0x7f
 1254 0354 00       		.byte	0
 1255 0355 17       		.uleb128 0x17
 1256 0356 B8000000 		.4byte	.LASF96
 1257 035a 01       		.byte	0x1
 1258 035b ED       		.byte	0xed
 1259 035c 68000000 		.4byte	0x68
 1260 0360 00000000 		.4byte	.LFB69
 1261 0364 B4000000 		.4byte	.LFE69-.LFB69
 1262 0368 01       		.uleb128 0x1
 1263 0369 9C       		.byte	0x9c
 1264 036a CF040000 		.4byte	0x4cf
 1265 036e 18       		.uleb128 0x18
 1266 036f 6A00     		.ascii	"j\000"
 1267 0371 01       		.byte	0x1
 1268 0372 F2       		.byte	0xf2
 1269 0373 68000000 		.4byte	0x68
 1270 0377 D6010000 		.4byte	.LLST13
 1271 037b 19       		.uleb128 0x19
 1272 037c 00000000 		.4byte	.Ldebug_ranges0+0
 1273 0380 92030000 		.4byte	0x392
 1274 0384 18       		.uleb128 0x18
 1275 0385 6900     		.ascii	"i\000"
 1276 0387 01       		.byte	0x1
 1277 0388 F3       		.byte	0xf3
 1278 0389 68000000 		.4byte	0x68
 1279 038d 01020000 		.4byte	.LLST14
 1280 0391 00       		.byte	0
 1281 0392 0F       		.uleb128 0xf
 1282 0393 06000000 		.4byte	.LVL89
 1283 0397 AC060000 		.4byte	0x6ac
 1284 039b 0F       		.uleb128 0xf
 1285 039c 2A000000 		.4byte	.LVL95
 1286 03a0 B7060000 		.4byte	0x6b7
 1287 03a4 0F       		.uleb128 0xf
 1288 03a5 2E000000 		.4byte	.LVL96
 1289 03a9 C2060000 		.4byte	0x6c2
 1290 03ad 12       		.uleb128 0x12
 1291 03ae 34000000 		.4byte	.LVL97
 1292 03b2 96060000 		.4byte	0x696
 1293 03b6 C4030000 		.4byte	0x3c4
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 29


 1294 03ba 13       		.uleb128 0x13
 1295 03bb 01       		.uleb128 0x1
 1296 03bc 50       		.byte	0x50
 1297 03bd 05       		.uleb128 0x5
 1298 03be 03       		.byte	0x3
 1299 03bf 2C000000 		.4byte	.LC1
 1300 03c3 00       		.byte	0
 1301 03c4 0F       		.uleb128 0xf
 1302 03c5 38000000 		.4byte	.LVL98
 1303 03c9 CD060000 		.4byte	0x6cd
 1304 03cd 12       		.uleb128 0x12
 1305 03ce 3E000000 		.4byte	.LVL99
 1306 03d2 D8060000 		.4byte	0x6d8
 1307 03d6 E4030000 		.4byte	0x3e4
 1308 03da 13       		.uleb128 0x13
 1309 03db 01       		.uleb128 0x1
 1310 03dc 50       		.byte	0x50
 1311 03dd 05       		.uleb128 0x5
 1312 03de 03       		.byte	0x3
 1313 03df 00000000 		.4byte	frame_int
 1314 03e3 00       		.byte	0
 1315 03e4 0F       		.uleb128 0xf
 1316 03e5 42000000 		.4byte	.LVL100
 1317 03e9 E3060000 		.4byte	0x6e3
 1318 03ed 0F       		.uleb128 0xf
 1319 03ee 46000000 		.4byte	.LVL101
 1320 03f2 EE060000 		.4byte	0x6ee
 1321 03f6 0F       		.uleb128 0xf
 1322 03f7 4A000000 		.4byte	.LVL102
 1323 03fb F9060000 		.4byte	0x6f9
 1324 03ff 0F       		.uleb128 0xf
 1325 0400 4E000000 		.4byte	.LVL103
 1326 0404 04070000 		.4byte	0x704
 1327 0408 12       		.uleb128 0x12
 1328 0409 54000000 		.4byte	.LVL104
 1329 040d 0F070000 		.4byte	0x70f
 1330 0411 1F040000 		.4byte	0x41f
 1331 0415 13       		.uleb128 0x13
 1332 0416 01       		.uleb128 0x1
 1333 0417 50       		.byte	0x50
 1334 0418 05       		.uleb128 0x5
 1335 0419 03       		.byte	0x3
 1336 041a 00000000 		.4byte	dark_int
 1337 041e 00       		.byte	0
 1338 041f 12       		.uleb128 0x12
 1339 0420 5C000000 		.4byte	.LVL105
 1340 0424 1A070000 		.4byte	0x71a
 1341 0428 3B040000 		.4byte	0x43b
 1342 042c 13       		.uleb128 0x13
 1343 042d 01       		.uleb128 0x1
 1344 042e 50       		.byte	0x50
 1345 042f 05       		.uleb128 0x5
 1346 0430 03       		.byte	0x3
 1347 0431 00000000 		.4byte	darkFilter
 1348 0435 13       		.uleb128 0x13
 1349 0436 01       		.uleb128 0x1
 1350 0437 51       		.byte	0x51
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 30


 1351 0438 01       		.uleb128 0x1
 1352 0439 33       		.byte	0x33
 1353 043a 00       		.byte	0
 1354 043b 0F       		.uleb128 0xf
 1355 043c 60000000 		.4byte	.LVL106
 1356 0440 25070000 		.4byte	0x725
 1357 0444 0F       		.uleb128 0xf
 1358 0445 64000000 		.4byte	.LVL107
 1359 0449 30070000 		.4byte	0x730
 1360 044d 12       		.uleb128 0x12
 1361 044e 6A000000 		.4byte	.LVL108
 1362 0452 3B070000 		.4byte	0x73b
 1363 0456 64040000 		.4byte	0x464
 1364 045a 13       		.uleb128 0x13
 1365 045b 01       		.uleb128 0x1
 1366 045c 50       		.byte	0x50
 1367 045d 05       		.uleb128 0x5
 1368 045e 03       		.byte	0x3
 1369 045f 00000000 		.4byte	hall_int
 1370 0463 00       		.byte	0
 1371 0464 12       		.uleb128 0x12
 1372 0465 72000000 		.4byte	.LVL109
 1373 0469 1A070000 		.4byte	0x71a
 1374 046d 80040000 		.4byte	0x480
 1375 0471 13       		.uleb128 0x13
 1376 0472 01       		.uleb128 0x1
 1377 0473 50       		.byte	0x50
 1378 0474 05       		.uleb128 0x5
 1379 0475 03       		.byte	0x3
 1380 0476 00000000 		.4byte	hallFilter
 1381 047a 13       		.uleb128 0x13
 1382 047b 01       		.uleb128 0x1
 1383 047c 51       		.byte	0x51
 1384 047d 01       		.uleb128 0x1
 1385 047e 35       		.byte	0x35
 1386 047f 00       		.byte	0
 1387 0480 0F       		.uleb128 0xf
 1388 0481 76000000 		.4byte	.LVL110
 1389 0485 46070000 		.4byte	0x746
 1390 0489 12       		.uleb128 0x12
 1391 048a 7C000000 		.4byte	.LVL111
 1392 048e 51070000 		.4byte	0x751
 1393 0492 A0040000 		.4byte	0x4a0
 1394 0496 13       		.uleb128 0x13
 1395 0497 01       		.uleb128 0x1
 1396 0498 50       		.byte	0x50
 1397 0499 05       		.uleb128 0x5
 1398 049a 03       		.byte	0x3
 1399 049b 00000000 		.4byte	target_int
 1400 049f 00       		.byte	0
 1401 04a0 0F       		.uleb128 0xf
 1402 04a1 80000000 		.4byte	.LVL112
 1403 04a5 5C070000 		.4byte	0x75c
 1404 04a9 0F       		.uleb128 0xf
 1405 04aa 84000000 		.4byte	.LVL113
 1406 04ae 67070000 		.4byte	0x767
 1407 04b2 0F       		.uleb128 0xf
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 31


 1408 04b3 88000000 		.4byte	.LVL114
 1409 04b7 72070000 		.4byte	0x772
 1410 04bb 14       		.uleb128 0x14
 1411 04bc 8E000000 		.4byte	.LVL115
 1412 04c0 7D070000 		.4byte	0x77d
 1413 04c4 13       		.uleb128 0x13
 1414 04c5 01       		.uleb128 0x1
 1415 04c6 50       		.byte	0x50
 1416 04c7 05       		.uleb128 0x5
 1417 04c8 03       		.byte	0x3
 1418 04c9 00000000 		.4byte	pid_int
 1419 04cd 00       		.byte	0
 1420 04ce 00       		.byte	0
 1421 04cf 1A       		.uleb128 0x1a
 1422 04d0 2F050000 		.4byte	.LASF41
 1423 04d4 06       		.byte	0x6
 1424 04d5 1207     		.2byte	0x712
 1425 04d7 DB040000 		.4byte	0x4db
 1426 04db 06       		.uleb128 0x6
 1427 04dc 76000000 		.4byte	0x76
 1428 04e0 1B       		.uleb128 0x1b
 1429 04e1 B0010000 		.4byte	.LASF42
 1430 04e5 01       		.byte	0x1
 1431 04e6 11       		.byte	0x11
 1432 04e7 45010000 		.4byte	0x145
 1433 04eb 05       		.uleb128 0x5
 1434 04ec 03       		.byte	0x3
 1435 04ed 00000000 		.4byte	numFrames
 1436 04f1 1B       		.uleb128 0x1b
 1437 04f2 15030000 		.4byte	.LASF43
 1438 04f6 01       		.byte	0x1
 1439 04f7 14       		.byte	0x14
 1440 04f8 02050000 		.4byte	0x502
 1441 04fc 05       		.uleb128 0x5
 1442 04fd 03       		.byte	0x3
 1443 04fe 00000000 		.4byte	darkFilter
 1444 0502 06       		.uleb128 0x6
 1445 0503 4A010000 		.4byte	0x14a
 1446 0507 1B       		.uleb128 0x1b
 1447 0508 84020000 		.4byte	.LASF44
 1448 050c 01       		.byte	0x1
 1449 050d 17       		.byte	0x17
 1450 050e 02050000 		.4byte	0x502
 1451 0512 05       		.uleb128 0x5
 1452 0513 03       		.byte	0x3
 1453 0514 00000000 		.4byte	hallFilter
 1454 0518 1B       		.uleb128 0x1b
 1455 0519 08030000 		.4byte	.LASF45
 1456 051d 01       		.byte	0x1
 1457 051e 1A       		.byte	0x1a
 1458 051f 8D000000 		.4byte	0x8d
 1459 0523 05       		.uleb128 0x5
 1460 0524 03       		.byte	0x3
 1461 0525 00000000 		.4byte	lastHallTime
 1462 0529 1B       		.uleb128 0x1b
 1463 052a DF020000 		.4byte	.LASF46
 1464 052e 01       		.byte	0x1
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 32


 1465 052f 1D       		.byte	0x1d
 1466 0530 3A050000 		.4byte	0x53a
 1467 0534 05       		.uleb128 0x5
 1468 0535 03       		.byte	0x3
 1469 0536 00000000 		.4byte	avgRpm
 1470 053a 06       		.uleb128 0x6
 1471 053b AC000000 		.4byte	0xac
 1472 053f 1B       		.uleb128 0x1b
 1473 0540 DD030000 		.4byte	.LASF47
 1474 0544 01       		.byte	0x1
 1475 0545 20       		.byte	0x20
 1476 0546 3A050000 		.4byte	0x53a
 1477 054a 05       		.uleb128 0x5
 1478 054b 03       		.byte	0x3
 1479 054c 00000000 		.4byte	darkTime
 1480 0550 1B       		.uleb128 0x1b
 1481 0551 46030000 		.4byte	.LASF48
 1482 0555 01       		.byte	0x1
 1483 0556 23       		.byte	0x23
 1484 0557 8D000000 		.4byte	0x8d
 1485 055b 05       		.uleb128 0x5
 1486 055c 03       		.byte	0x3
 1487 055d 00000000 		.4byte	timeOutCounter
 1488 0561 1B       		.uleb128 0x1b
 1489 0562 9F000000 		.4byte	.LASF49
 1490 0566 01       		.byte	0x1
 1491 0567 6C       		.byte	0x6c
 1492 0568 AC000000 		.4byte	0xac
 1493 056c 05       		.uleb128 0x5
 1494 056d 03       		.byte	0x3
 1495 056e 00000000 		.4byte	lastErr_speed
 1496 0572 1B       		.uleb128 0x1b
 1497 0573 E6020000 		.4byte	.LASF50
 1498 0577 01       		.byte	0x1
 1499 0578 6F       		.byte	0x6f
 1500 0579 AC000000 		.4byte	0xac
 1501 057d 05       		.uleb128 0x5
 1502 057e 03       		.byte	0x3
 1503 057f 00000000 		.4byte	sumErr_speed
 1504 0583 1B       		.uleb128 0x1b
 1505 0584 E9050000 		.4byte	.LASF51
 1506 0588 01       		.byte	0x1
 1507 0589 72       		.byte	0x72
 1508 058a AC000000 		.4byte	0xac
 1509 058e 05       		.uleb128 0x5
 1510 058f 03       		.byte	0x3
 1511 0590 00000000 		.4byte	goalRpm
 1512 0594 1B       		.uleb128 0x1b
 1513 0595 00000000 		.4byte	.LASF52
 1514 0599 01       		.byte	0x1
 1515 059a 75       		.byte	0x75
 1516 059b AC000000 		.4byte	0xac
 1517 059f 05       		.uleb128 0x5
 1518 05a0 03       		.byte	0x3
 1519 05a1 00000000 		.4byte	kp_speed
 1520 05a5 1B       		.uleb128 0x1b
 1521 05a6 4D040000 		.4byte	.LASF53
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 33


 1522 05aa 01       		.byte	0x1
 1523 05ab 76       		.byte	0x76
 1524 05ac AC000000 		.4byte	0xac
 1525 05b0 05       		.uleb128 0x5
 1526 05b1 03       		.byte	0x3
 1527 05b2 00000000 		.4byte	ki_speed
 1528 05b6 1B       		.uleb128 0x1b
 1529 05b7 1E000000 		.4byte	.LASF54
 1530 05bb 01       		.byte	0x1
 1531 05bc 77       		.byte	0x77
 1532 05bd AC000000 		.4byte	0xac
 1533 05c1 05       		.uleb128 0x5
 1534 05c2 03       		.byte	0x3
 1535 05c3 00000000 		.4byte	kd_speed
 1536 05c7 1B       		.uleb128 0x1b
 1537 05c8 2C010000 		.4byte	.LASF55
 1538 05cc 01       		.byte	0x1
 1539 05cd 7A       		.byte	0x7a
 1540 05ce AC000000 		.4byte	0xac
 1541 05d2 05       		.uleb128 0x5
 1542 05d3 03       		.byte	0x3
 1543 05d4 00000000 		.4byte	lastErr_steer
 1544 05d8 1B       		.uleb128 0x1b
 1545 05d9 B2030000 		.4byte	.LASF56
 1546 05dd 01       		.byte	0x1
 1547 05de 7D       		.byte	0x7d
 1548 05df AC000000 		.4byte	0xac
 1549 05e3 05       		.uleb128 0x5
 1550 05e4 03       		.byte	0x3
 1551 05e5 00000000 		.4byte	sumErr_steer
 1552 05e9 1B       		.uleb128 0x1b
 1553 05ea 40040000 		.4byte	.LASF57
 1554 05ee 01       		.byte	0x1
 1555 05ef 80       		.byte	0x80
 1556 05f0 AC000000 		.4byte	0xac
 1557 05f4 05       		.uleb128 0x5
 1558 05f5 03       		.byte	0x3
 1559 05f6 00000000 		.4byte	goalDarkTime
 1560 05fa 1B       		.uleb128 0x1b
 1561 05fb D4030000 		.4byte	.LASF58
 1562 05ff 01       		.byte	0x1
 1563 0600 83       		.byte	0x83
 1564 0601 AC000000 		.4byte	0xac
 1565 0605 05       		.uleb128 0x5
 1566 0606 03       		.byte	0x3
 1567 0607 00000000 		.4byte	kp_steer
 1568 060b 1B       		.uleb128 0x1b
 1569 060c D3040000 		.4byte	.LASF59
 1570 0610 01       		.byte	0x1
 1571 0611 84       		.byte	0x84
 1572 0612 AC000000 		.4byte	0xac
 1573 0616 05       		.uleb128 0x5
 1574 0617 03       		.byte	0x3
 1575 0618 00000000 		.4byte	ki_steer
 1576 061c 1B       		.uleb128 0x1b
 1577 061d 0A040000 		.4byte	.LASF60
 1578 0621 01       		.byte	0x1
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 34


 1579 0622 85       		.byte	0x85
 1580 0623 AC000000 		.4byte	0xac
 1581 0627 05       		.uleb128 0x5
 1582 0628 03       		.byte	0x3
 1583 0629 00000000 		.4byte	kd_steer
 1584 062d 1B       		.uleb128 0x1b
 1585 062e 3F020000 		.4byte	.LASF61
 1586 0632 01       		.byte	0x1
 1587 0633 88       		.byte	0x88
 1588 0634 AC000000 		.4byte	0xac
 1589 0638 05       		.uleb128 0x5
 1590 0639 03       		.byte	0x3
 1591 063a 00000000 		.4byte	pid_period
 1592 063e 1C       		.uleb128 0x1c
 1593 063f 15020000 		.4byte	.LASF62
 1594 0643 15020000 		.4byte	.LASF62
 1595 0647 07       		.byte	0x7
 1596 0648 5E       		.byte	0x5e
 1597 0649 1C       		.uleb128 0x1c
 1598 064a 09000000 		.4byte	.LASF63
 1599 064e 09000000 		.4byte	.LASF63
 1600 0652 08       		.byte	0x8
 1601 0653 16       		.byte	0x16
 1602 0654 1C       		.uleb128 0x1c
 1603 0655 EB010000 		.4byte	.LASF64
 1604 0659 EB010000 		.4byte	.LASF64
 1605 065d 09       		.byte	0x9
 1606 065e 6B       		.byte	0x6b
 1607 065f 1C       		.uleb128 0x1c
 1608 0660 78000000 		.4byte	.LASF65
 1609 0664 78000000 		.4byte	.LASF65
 1610 0668 05       		.byte	0x5
 1611 0669 1F       		.byte	0x1f
 1612 066a 1C       		.uleb128 0x1c
 1613 066b F3040000 		.4byte	.LASF66
 1614 066f F3040000 		.4byte	.LASF66
 1615 0673 09       		.byte	0x9
 1616 0674 5E       		.byte	0x5e
 1617 0675 1C       		.uleb128 0x1c
 1618 0676 CA050000 		.4byte	.LASF67
 1619 067a CA050000 		.4byte	.LASF67
 1620 067e 07       		.byte	0x7
 1621 067f 6B       		.byte	0x6b
 1622 0680 1C       		.uleb128 0x1c
 1623 0681 31000000 		.4byte	.LASF68
 1624 0685 31000000 		.4byte	.LASF68
 1625 0689 0A       		.byte	0xa
 1626 068a C3       		.byte	0xc3
 1627 068b 1C       		.uleb128 0x1c
 1628 068c A6020000 		.4byte	.LASF69
 1629 0690 A6020000 		.4byte	.LASF69
 1630 0694 0B       		.byte	0xb
 1631 0695 E7       		.byte	0xe7
 1632 0696 1C       		.uleb128 0x1c
 1633 0697 C3020000 		.4byte	.LASF70
 1634 069b C3020000 		.4byte	.LASF70
 1635 069f 0C       		.byte	0xc
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 35


 1636 06a0 8B       		.byte	0x8b
 1637 06a1 1C       		.uleb128 0x1c
 1638 06a2 E6030000 		.4byte	.LASF71
 1639 06a6 E6030000 		.4byte	.LASF71
 1640 06aa 0D       		.byte	0xd
 1641 06ab C3       		.byte	0xc3
 1642 06ac 1C       		.uleb128 0x1c
 1643 06ad 7E040000 		.4byte	.LASF72
 1644 06b1 7E040000 		.4byte	.LASF72
 1645 06b5 0D       		.byte	0xd
 1646 06b6 92       		.byte	0x92
 1647 06b7 1C       		.uleb128 0x1c
 1648 06b8 E1050000 		.4byte	.LASF73
 1649 06bc E1050000 		.4byte	.LASF73
 1650 06c0 08       		.byte	0x8
 1651 06c1 10       		.byte	0x10
 1652 06c2 1C       		.uleb128 0x1c
 1653 06c3 AD000000 		.4byte	.LASF74
 1654 06c7 AD000000 		.4byte	.LASF74
 1655 06cb 0C       		.byte	0xc
 1656 06cc 54       		.byte	0x54
 1657 06cd 1C       		.uleb128 0x1c
 1658 06ce 11050000 		.4byte	.LASF75
 1659 06d2 11050000 		.4byte	.LASF75
 1660 06d6 0E       		.byte	0xe
 1661 06d7 17       		.byte	0x17
 1662 06d8 1C       		.uleb128 0x1c
 1663 06d9 4B000000 		.4byte	.LASF76
 1664 06dd 4B000000 		.4byte	.LASF76
 1665 06e1 0E       		.byte	0xe
 1666 06e2 1D       		.byte	0x1d
 1667 06e3 1C       		.uleb128 0x1c
 1668 06e4 8E030000 		.4byte	.LASF77
 1669 06e8 8E030000 		.4byte	.LASF77
 1670 06ec 0F       		.byte	0xf
 1671 06ed 3F       		.byte	0x3f
 1672 06ee 1C       		.uleb128 0x1c
 1673 06ef 3A010000 		.4byte	.LASF78
 1674 06f3 3A010000 		.4byte	.LASF78
 1675 06f7 10       		.byte	0x10
 1676 06f8 33       		.byte	0x33
 1677 06f9 1C       		.uleb128 0x1c
 1678 06fa CA010000 		.4byte	.LASF79
 1679 06fe CA010000 		.4byte	.LASF79
 1680 0702 07       		.byte	0x7
 1681 0703 5A       		.byte	0x5a
 1682 0704 1C       		.uleb128 0x1c
 1683 0705 AE020000 		.4byte	.LASF80
 1684 0709 AE020000 		.4byte	.LASF80
 1685 070d 11       		.byte	0x11
 1686 070e 17       		.byte	0x17
 1687 070f 1C       		.uleb128 0x1c
 1688 0710 5B040000 		.4byte	.LASF81
 1689 0714 5B040000 		.4byte	.LASF81
 1690 0718 11       		.byte	0x11
 1691 0719 1D       		.byte	0x1d
 1692 071a 1C       		.uleb128 0x1c
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 36


 1693 071b FD030000 		.4byte	.LASF82
 1694 071f FD030000 		.4byte	.LASF82
 1695 0723 05       		.byte	0x5
 1696 0724 1D       		.byte	0x1d
 1697 0725 1C       		.uleb128 0x1c
 1698 0726 F3020000 		.4byte	.LASF83
 1699 072a F3020000 		.4byte	.LASF83
 1700 072e 12       		.byte	0x12
 1701 072f 17       		.byte	0x17
 1702 0730 1C       		.uleb128 0x1c
 1703 0731 A9040000 		.4byte	.LASF84
 1704 0735 A9040000 		.4byte	.LASF84
 1705 0739 09       		.byte	0x9
 1706 073a 5A       		.byte	0x5a
 1707 073b 1C       		.uleb128 0x1c
 1708 073c BA040000 		.4byte	.LASF85
 1709 0740 BA040000 		.4byte	.LASF85
 1710 0744 12       		.byte	0x12
 1711 0745 1D       		.byte	0x1d
 1712 0746 1C       		.uleb128 0x1c
 1713 0747 DC040000 		.4byte	.LASF86
 1714 074b DC040000 		.4byte	.LASF86
 1715 074f 13       		.byte	0x13
 1716 0750 17       		.byte	0x17
 1717 0751 1C       		.uleb128 0x1c
 1718 0752 8E040000 		.4byte	.LASF87
 1719 0756 8E040000 		.4byte	.LASF87
 1720 075a 13       		.byte	0x13
 1721 075b 1D       		.byte	0x1d
 1722 075c 1C       		.uleb128 0x1c
 1723 075d 8C000000 		.4byte	.LASF88
 1724 0761 8C000000 		.4byte	.LASF88
 1725 0765 0A       		.byte	0xa
 1726 0766 92       		.byte	0x92
 1727 0767 1C       		.uleb128 0x1c
 1728 0768 BD000000 		.4byte	.LASF89
 1729 076c BD000000 		.4byte	.LASF89
 1730 0770 14       		.byte	0x14
 1731 0771 5A       		.byte	0x5a
 1732 0772 1C       		.uleb128 0x1c
 1733 0773 6C030000 		.4byte	.LASF90
 1734 0777 6C030000 		.4byte	.LASF90
 1735 077b 15       		.byte	0x15
 1736 077c 17       		.byte	0x17
 1737 077d 1C       		.uleb128 0x1c
 1738 077e 61010000 		.4byte	.LASF91
 1739 0782 61010000 		.4byte	.LASF91
 1740 0786 15       		.byte	0x15
 1741 0787 1D       		.byte	0x1d
 1742 0788 00       		.byte	0
 1743              		.section	.debug_abbrev,"",%progbits
 1744              	.Ldebug_abbrev0:
 1745 0000 01       		.uleb128 0x1
 1746 0001 11       		.uleb128 0x11
 1747 0002 01       		.byte	0x1
 1748 0003 25       		.uleb128 0x25
 1749 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 37


 1750 0005 13       		.uleb128 0x13
 1751 0006 0B       		.uleb128 0xb
 1752 0007 03       		.uleb128 0x3
 1753 0008 0E       		.uleb128 0xe
 1754 0009 1B       		.uleb128 0x1b
 1755 000a 0E       		.uleb128 0xe
 1756 000b 55       		.uleb128 0x55
 1757 000c 17       		.uleb128 0x17
 1758 000d 11       		.uleb128 0x11
 1759 000e 01       		.uleb128 0x1
 1760 000f 10       		.uleb128 0x10
 1761 0010 17       		.uleb128 0x17
 1762 0011 00       		.byte	0
 1763 0012 00       		.byte	0
 1764 0013 02       		.uleb128 0x2
 1765 0014 24       		.uleb128 0x24
 1766 0015 00       		.byte	0
 1767 0016 0B       		.uleb128 0xb
 1768 0017 0B       		.uleb128 0xb
 1769 0018 3E       		.uleb128 0x3e
 1770 0019 0B       		.uleb128 0xb
 1771 001a 03       		.uleb128 0x3
 1772 001b 0E       		.uleb128 0xe
 1773 001c 00       		.byte	0
 1774 001d 00       		.byte	0
 1775 001e 03       		.uleb128 0x3
 1776 001f 16       		.uleb128 0x16
 1777 0020 00       		.byte	0
 1778 0021 03       		.uleb128 0x3
 1779 0022 0E       		.uleb128 0xe
 1780 0023 3A       		.uleb128 0x3a
 1781 0024 0B       		.uleb128 0xb
 1782 0025 3B       		.uleb128 0x3b
 1783 0026 0B       		.uleb128 0xb
 1784 0027 49       		.uleb128 0x49
 1785 0028 13       		.uleb128 0x13
 1786 0029 00       		.byte	0
 1787 002a 00       		.byte	0
 1788 002b 04       		.uleb128 0x4
 1789 002c 24       		.uleb128 0x24
 1790 002d 00       		.byte	0
 1791 002e 0B       		.uleb128 0xb
 1792 002f 0B       		.uleb128 0xb
 1793 0030 3E       		.uleb128 0x3e
 1794 0031 0B       		.uleb128 0xb
 1795 0032 03       		.uleb128 0x3
 1796 0033 08       		.uleb128 0x8
 1797 0034 00       		.byte	0
 1798 0035 00       		.byte	0
 1799 0036 05       		.uleb128 0x5
 1800 0037 16       		.uleb128 0x16
 1801 0038 00       		.byte	0
 1802 0039 03       		.uleb128 0x3
 1803 003a 0E       		.uleb128 0xe
 1804 003b 3A       		.uleb128 0x3a
 1805 003c 0B       		.uleb128 0xb
 1806 003d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 38


 1807 003e 05       		.uleb128 0x5
 1808 003f 49       		.uleb128 0x49
 1809 0040 13       		.uleb128 0x13
 1810 0041 00       		.byte	0
 1811 0042 00       		.byte	0
 1812 0043 06       		.uleb128 0x6
 1813 0044 35       		.uleb128 0x35
 1814 0045 00       		.byte	0
 1815 0046 49       		.uleb128 0x49
 1816 0047 13       		.uleb128 0x13
 1817 0048 00       		.byte	0
 1818 0049 00       		.byte	0
 1819 004a 07       		.uleb128 0x7
 1820 004b 13       		.uleb128 0x13
 1821 004c 01       		.byte	0x1
 1822 004d 0B       		.uleb128 0xb
 1823 004e 05       		.uleb128 0x5
 1824 004f 3A       		.uleb128 0x3a
 1825 0050 0B       		.uleb128 0xb
 1826 0051 3B       		.uleb128 0x3b
 1827 0052 0B       		.uleb128 0xb
 1828 0053 01       		.uleb128 0x1
 1829 0054 13       		.uleb128 0x13
 1830 0055 00       		.byte	0
 1831 0056 00       		.byte	0
 1832 0057 08       		.uleb128 0x8
 1833 0058 0D       		.uleb128 0xd
 1834 0059 00       		.byte	0
 1835 005a 03       		.uleb128 0x3
 1836 005b 08       		.uleb128 0x8
 1837 005c 3A       		.uleb128 0x3a
 1838 005d 0B       		.uleb128 0xb
 1839 005e 3B       		.uleb128 0x3b
 1840 005f 0B       		.uleb128 0xb
 1841 0060 49       		.uleb128 0x49
 1842 0061 13       		.uleb128 0x13
 1843 0062 38       		.uleb128 0x38
 1844 0063 0B       		.uleb128 0xb
 1845 0064 00       		.byte	0
 1846 0065 00       		.byte	0
 1847 0066 09       		.uleb128 0x9
 1848 0067 0D       		.uleb128 0xd
 1849 0068 00       		.byte	0
 1850 0069 03       		.uleb128 0x3
 1851 006a 0E       		.uleb128 0xe
 1852 006b 3A       		.uleb128 0x3a
 1853 006c 0B       		.uleb128 0xb
 1854 006d 3B       		.uleb128 0x3b
 1855 006e 0B       		.uleb128 0xb
 1856 006f 49       		.uleb128 0x49
 1857 0070 13       		.uleb128 0x13
 1858 0071 38       		.uleb128 0x38
 1859 0072 05       		.uleb128 0x5
 1860 0073 00       		.byte	0
 1861 0074 00       		.byte	0
 1862 0075 0A       		.uleb128 0xa
 1863 0076 0D       		.uleb128 0xd
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 39


 1864 0077 00       		.byte	0
 1865 0078 03       		.uleb128 0x3
 1866 0079 08       		.uleb128 0x8
 1867 007a 3A       		.uleb128 0x3a
 1868 007b 0B       		.uleb128 0xb
 1869 007c 3B       		.uleb128 0x3b
 1870 007d 0B       		.uleb128 0xb
 1871 007e 49       		.uleb128 0x49
 1872 007f 13       		.uleb128 0x13
 1873 0080 38       		.uleb128 0x38
 1874 0081 05       		.uleb128 0x5
 1875 0082 00       		.byte	0
 1876 0083 00       		.byte	0
 1877 0084 0B       		.uleb128 0xb
 1878 0085 01       		.uleb128 0x1
 1879 0086 01       		.byte	0x1
 1880 0087 49       		.uleb128 0x49
 1881 0088 13       		.uleb128 0x13
 1882 0089 01       		.uleb128 0x1
 1883 008a 13       		.uleb128 0x13
 1884 008b 00       		.byte	0
 1885 008c 00       		.byte	0
 1886 008d 0C       		.uleb128 0xc
 1887 008e 21       		.uleb128 0x21
 1888 008f 00       		.byte	0
 1889 0090 49       		.uleb128 0x49
 1890 0091 13       		.uleb128 0x13
 1891 0092 2F       		.uleb128 0x2f
 1892 0093 0B       		.uleb128 0xb
 1893 0094 00       		.byte	0
 1894 0095 00       		.byte	0
 1895 0096 0D       		.uleb128 0xd
 1896 0097 2E       		.uleb128 0x2e
 1897 0098 00       		.byte	0
 1898 0099 3F       		.uleb128 0x3f
 1899 009a 19       		.uleb128 0x19
 1900 009b 03       		.uleb128 0x3
 1901 009c 0E       		.uleb128 0xe
 1902 009d 3A       		.uleb128 0x3a
 1903 009e 0B       		.uleb128 0xb
 1904 009f 3B       		.uleb128 0x3b
 1905 00a0 0B       		.uleb128 0xb
 1906 00a1 27       		.uleb128 0x27
 1907 00a2 19       		.uleb128 0x19
 1908 00a3 11       		.uleb128 0x11
 1909 00a4 01       		.uleb128 0x1
 1910 00a5 12       		.uleb128 0x12
 1911 00a6 06       		.uleb128 0x6
 1912 00a7 40       		.uleb128 0x40
 1913 00a8 18       		.uleb128 0x18
 1914 00a9 9742     		.uleb128 0x2117
 1915 00ab 19       		.uleb128 0x19
 1916 00ac 00       		.byte	0
 1917 00ad 00       		.byte	0
 1918 00ae 0E       		.uleb128 0xe
 1919 00af 2E       		.uleb128 0x2e
 1920 00b0 01       		.byte	0x1
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 40


 1921 00b1 3F       		.uleb128 0x3f
 1922 00b2 19       		.uleb128 0x19
 1923 00b3 03       		.uleb128 0x3
 1924 00b4 0E       		.uleb128 0xe
 1925 00b5 3A       		.uleb128 0x3a
 1926 00b6 0B       		.uleb128 0xb
 1927 00b7 3B       		.uleb128 0x3b
 1928 00b8 0B       		.uleb128 0xb
 1929 00b9 27       		.uleb128 0x27
 1930 00ba 19       		.uleb128 0x19
 1931 00bb 11       		.uleb128 0x11
 1932 00bc 01       		.uleb128 0x1
 1933 00bd 12       		.uleb128 0x12
 1934 00be 06       		.uleb128 0x6
 1935 00bf 40       		.uleb128 0x40
 1936 00c0 18       		.uleb128 0x18
 1937 00c1 9742     		.uleb128 0x2117
 1938 00c3 19       		.uleb128 0x19
 1939 00c4 01       		.uleb128 0x1
 1940 00c5 13       		.uleb128 0x13
 1941 00c6 00       		.byte	0
 1942 00c7 00       		.byte	0
 1943 00c8 0F       		.uleb128 0xf
 1944 00c9 898201   		.uleb128 0x4109
 1945 00cc 00       		.byte	0
 1946 00cd 11       		.uleb128 0x11
 1947 00ce 01       		.uleb128 0x1
 1948 00cf 31       		.uleb128 0x31
 1949 00d0 13       		.uleb128 0x13
 1950 00d1 00       		.byte	0
 1951 00d2 00       		.byte	0
 1952 00d3 10       		.uleb128 0x10
 1953 00d4 2E       		.uleb128 0x2e
 1954 00d5 01       		.byte	0x1
 1955 00d6 3F       		.uleb128 0x3f
 1956 00d7 19       		.uleb128 0x19
 1957 00d8 03       		.uleb128 0x3
 1958 00d9 0E       		.uleb128 0xe
 1959 00da 3A       		.uleb128 0x3a
 1960 00db 0B       		.uleb128 0xb
 1961 00dc 3B       		.uleb128 0x3b
 1962 00dd 0B       		.uleb128 0xb
 1963 00de 27       		.uleb128 0x27
 1964 00df 19       		.uleb128 0x19
 1965 00e0 11       		.uleb128 0x11
 1966 00e1 01       		.uleb128 0x1
 1967 00e2 12       		.uleb128 0x12
 1968 00e3 06       		.uleb128 0x6
 1969 00e4 40       		.uleb128 0x40
 1970 00e5 18       		.uleb128 0x18
 1971 00e6 9642     		.uleb128 0x2116
 1972 00e8 19       		.uleb128 0x19
 1973 00e9 01       		.uleb128 0x1
 1974 00ea 13       		.uleb128 0x13
 1975 00eb 00       		.byte	0
 1976 00ec 00       		.byte	0
 1977 00ed 11       		.uleb128 0x11
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 41


 1978 00ee 34       		.uleb128 0x34
 1979 00ef 00       		.byte	0
 1980 00f0 03       		.uleb128 0x3
 1981 00f1 0E       		.uleb128 0xe
 1982 00f2 3A       		.uleb128 0x3a
 1983 00f3 0B       		.uleb128 0xb
 1984 00f4 3B       		.uleb128 0x3b
 1985 00f5 0B       		.uleb128 0xb
 1986 00f6 49       		.uleb128 0x49
 1987 00f7 13       		.uleb128 0x13
 1988 00f8 02       		.uleb128 0x2
 1989 00f9 17       		.uleb128 0x17
 1990 00fa 00       		.byte	0
 1991 00fb 00       		.byte	0
 1992 00fc 12       		.uleb128 0x12
 1993 00fd 898201   		.uleb128 0x4109
 1994 0100 01       		.byte	0x1
 1995 0101 11       		.uleb128 0x11
 1996 0102 01       		.uleb128 0x1
 1997 0103 31       		.uleb128 0x31
 1998 0104 13       		.uleb128 0x13
 1999 0105 01       		.uleb128 0x1
 2000 0106 13       		.uleb128 0x13
 2001 0107 00       		.byte	0
 2002 0108 00       		.byte	0
 2003 0109 13       		.uleb128 0x13
 2004 010a 8A8201   		.uleb128 0x410a
 2005 010d 00       		.byte	0
 2006 010e 02       		.uleb128 0x2
 2007 010f 18       		.uleb128 0x18
 2008 0110 9142     		.uleb128 0x2111
 2009 0112 18       		.uleb128 0x18
 2010 0113 00       		.byte	0
 2011 0114 00       		.byte	0
 2012 0115 14       		.uleb128 0x14
 2013 0116 898201   		.uleb128 0x4109
 2014 0119 01       		.byte	0x1
 2015 011a 11       		.uleb128 0x11
 2016 011b 01       		.uleb128 0x1
 2017 011c 31       		.uleb128 0x31
 2018 011d 13       		.uleb128 0x13
 2019 011e 00       		.byte	0
 2020 011f 00       		.byte	0
 2021 0120 15       		.uleb128 0x15
 2022 0121 34       		.uleb128 0x34
 2023 0122 00       		.byte	0
 2024 0123 03       		.uleb128 0x3
 2025 0124 0E       		.uleb128 0xe
 2026 0125 3A       		.uleb128 0x3a
 2027 0126 0B       		.uleb128 0xb
 2028 0127 3B       		.uleb128 0x3b
 2029 0128 0B       		.uleb128 0xb
 2030 0129 49       		.uleb128 0x49
 2031 012a 13       		.uleb128 0x13
 2032 012b 1C       		.uleb128 0x1c
 2033 012c 0A       		.uleb128 0xa
 2034 012d 00       		.byte	0
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 42


 2035 012e 00       		.byte	0
 2036 012f 16       		.uleb128 0x16
 2037 0130 34       		.uleb128 0x34
 2038 0131 00       		.byte	0
 2039 0132 03       		.uleb128 0x3
 2040 0133 08       		.uleb128 0x8
 2041 0134 3A       		.uleb128 0x3a
 2042 0135 0B       		.uleb128 0xb
 2043 0136 3B       		.uleb128 0x3b
 2044 0137 0B       		.uleb128 0xb
 2045 0138 49       		.uleb128 0x49
 2046 0139 13       		.uleb128 0x13
 2047 013a 02       		.uleb128 0x2
 2048 013b 18       		.uleb128 0x18
 2049 013c 00       		.byte	0
 2050 013d 00       		.byte	0
 2051 013e 17       		.uleb128 0x17
 2052 013f 2E       		.uleb128 0x2e
 2053 0140 01       		.byte	0x1
 2054 0141 3F       		.uleb128 0x3f
 2055 0142 19       		.uleb128 0x19
 2056 0143 03       		.uleb128 0x3
 2057 0144 0E       		.uleb128 0xe
 2058 0145 3A       		.uleb128 0x3a
 2059 0146 0B       		.uleb128 0xb
 2060 0147 3B       		.uleb128 0x3b
 2061 0148 0B       		.uleb128 0xb
 2062 0149 27       		.uleb128 0x27
 2063 014a 19       		.uleb128 0x19
 2064 014b 49       		.uleb128 0x49
 2065 014c 13       		.uleb128 0x13
 2066 014d 8701     		.uleb128 0x87
 2067 014f 19       		.uleb128 0x19
 2068 0150 11       		.uleb128 0x11
 2069 0151 01       		.uleb128 0x1
 2070 0152 12       		.uleb128 0x12
 2071 0153 06       		.uleb128 0x6
 2072 0154 40       		.uleb128 0x40
 2073 0155 18       		.uleb128 0x18
 2074 0156 9742     		.uleb128 0x2117
 2075 0158 19       		.uleb128 0x19
 2076 0159 01       		.uleb128 0x1
 2077 015a 13       		.uleb128 0x13
 2078 015b 00       		.byte	0
 2079 015c 00       		.byte	0
 2080 015d 18       		.uleb128 0x18
 2081 015e 34       		.uleb128 0x34
 2082 015f 00       		.byte	0
 2083 0160 03       		.uleb128 0x3
 2084 0161 08       		.uleb128 0x8
 2085 0162 3A       		.uleb128 0x3a
 2086 0163 0B       		.uleb128 0xb
 2087 0164 3B       		.uleb128 0x3b
 2088 0165 0B       		.uleb128 0xb
 2089 0166 49       		.uleb128 0x49
 2090 0167 13       		.uleb128 0x13
 2091 0168 02       		.uleb128 0x2
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 43


 2092 0169 17       		.uleb128 0x17
 2093 016a 00       		.byte	0
 2094 016b 00       		.byte	0
 2095 016c 19       		.uleb128 0x19
 2096 016d 0B       		.uleb128 0xb
 2097 016e 01       		.byte	0x1
 2098 016f 55       		.uleb128 0x55
 2099 0170 17       		.uleb128 0x17
 2100 0171 01       		.uleb128 0x1
 2101 0172 13       		.uleb128 0x13
 2102 0173 00       		.byte	0
 2103 0174 00       		.byte	0
 2104 0175 1A       		.uleb128 0x1a
 2105 0176 34       		.uleb128 0x34
 2106 0177 00       		.byte	0
 2107 0178 03       		.uleb128 0x3
 2108 0179 0E       		.uleb128 0xe
 2109 017a 3A       		.uleb128 0x3a
 2110 017b 0B       		.uleb128 0xb
 2111 017c 3B       		.uleb128 0x3b
 2112 017d 05       		.uleb128 0x5
 2113 017e 49       		.uleb128 0x49
 2114 017f 13       		.uleb128 0x13
 2115 0180 3F       		.uleb128 0x3f
 2116 0181 19       		.uleb128 0x19
 2117 0182 3C       		.uleb128 0x3c
 2118 0183 19       		.uleb128 0x19
 2119 0184 00       		.byte	0
 2120 0185 00       		.byte	0
 2121 0186 1B       		.uleb128 0x1b
 2122 0187 34       		.uleb128 0x34
 2123 0188 00       		.byte	0
 2124 0189 03       		.uleb128 0x3
 2125 018a 0E       		.uleb128 0xe
 2126 018b 3A       		.uleb128 0x3a
 2127 018c 0B       		.uleb128 0xb
 2128 018d 3B       		.uleb128 0x3b
 2129 018e 0B       		.uleb128 0xb
 2130 018f 49       		.uleb128 0x49
 2131 0190 13       		.uleb128 0x13
 2132 0191 3F       		.uleb128 0x3f
 2133 0192 19       		.uleb128 0x19
 2134 0193 02       		.uleb128 0x2
 2135 0194 18       		.uleb128 0x18
 2136 0195 00       		.byte	0
 2137 0196 00       		.byte	0
 2138 0197 1C       		.uleb128 0x1c
 2139 0198 2E       		.uleb128 0x2e
 2140 0199 00       		.byte	0
 2141 019a 3F       		.uleb128 0x3f
 2142 019b 19       		.uleb128 0x19
 2143 019c 3C       		.uleb128 0x3c
 2144 019d 19       		.uleb128 0x19
 2145 019e 6E       		.uleb128 0x6e
 2146 019f 0E       		.uleb128 0xe
 2147 01a0 03       		.uleb128 0x3
 2148 01a1 0E       		.uleb128 0xe
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 44


 2149 01a2 3A       		.uleb128 0x3a
 2150 01a3 0B       		.uleb128 0xb
 2151 01a4 3B       		.uleb128 0x3b
 2152 01a5 0B       		.uleb128 0xb
 2153 01a6 00       		.byte	0
 2154 01a7 00       		.byte	0
 2155 01a8 00       		.byte	0
 2156              		.section	.debug_loc,"",%progbits
 2157              	.Ldebug_loc0:
 2158              	.LLST0:
 2159 0000 0A000000 		.4byte	.LVL2
 2160 0004 16000000 		.4byte	.LVL5
 2161 0008 0100     		.2byte	0x1
 2162 000a 50       		.byte	0x50
 2163 000b 16000000 		.4byte	.LVL5
 2164 000f 19000000 		.4byte	.LVL6-1
 2165 0013 0500     		.2byte	0x5
 2166 0015 03       		.byte	0x3
 2167 0016 00000000 		.4byte	lastHallTime
 2168 001a 00000000 		.4byte	0
 2169 001e 00000000 		.4byte	0
 2170              	.LLST1:
 2171 0022 0E000000 		.4byte	.LVL3
 2172 0026 14000000 		.4byte	.LVL4
 2173 002a 0600     		.2byte	0x6
 2174 002c 71       		.byte	0x71
 2175 002d 00       		.sleb128 0
 2176 002e 70       		.byte	0x70
 2177 002f 00       		.sleb128 0
 2178 0030 1C       		.byte	0x1c
 2179 0031 9F       		.byte	0x9f
 2180 0032 14000000 		.4byte	.LVL4
 2181 0036 19000000 		.4byte	.LVL6-1
 2182 003a 0100     		.2byte	0x1
 2183 003c 51       		.byte	0x51
 2184 003d 00000000 		.4byte	0
 2185 0041 00000000 		.4byte	0
 2186              	.LLST2:
 2187 0045 08000000 		.4byte	.LVL12
 2188 0049 19000000 		.4byte	.LVL13-1
 2189 004d 0100     		.2byte	0x1
 2190 004f 51       		.byte	0x51
 2191 0050 00000000 		.4byte	0
 2192 0054 00000000 		.4byte	0
 2193              	.LLST3:
 2194 0058 34000000 		.4byte	.LVL16
 2195 005c 58010000 		.4byte	.LVL53
 2196 0060 0600     		.2byte	0x6
 2197 0062 5A       		.byte	0x5a
 2198 0063 93       		.byte	0x93
 2199 0064 04       		.uleb128 0x4
 2200 0065 5B       		.byte	0x5b
 2201 0066 93       		.byte	0x93
 2202 0067 04       		.uleb128 0x4
 2203 0068 00000000 		.4byte	0
 2204 006c 00000000 		.4byte	0
 2205              	.LLST4:
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 45


 2206 0070 5E000000 		.4byte	.LVL20
 2207 0074 7C000000 		.4byte	.LVL23
 2208 0078 0600     		.2byte	0x6
 2209 007a 54       		.byte	0x54
 2210 007b 93       		.byte	0x93
 2211 007c 04       		.uleb128 0x4
 2212 007d 55       		.byte	0x55
 2213 007e 93       		.byte	0x93
 2214 007f 04       		.uleb128 0x4
 2215 0080 7C000000 		.4byte	.LVL23
 2216 0084 80000000 		.4byte	.LVL24
 2217 0088 0300     		.2byte	0x3
 2218 008a 91       		.byte	0x91
 2219 008b C87E     		.sleb128 -184
 2220 008d 82000000 		.4byte	.LVL25
 2221 0091 86000000 		.4byte	.LVL26
 2222 0095 0600     		.2byte	0x6
 2223 0097 54       		.byte	0x54
 2224 0098 93       		.byte	0x93
 2225 0099 04       		.uleb128 0x4
 2226 009a 55       		.byte	0x55
 2227 009b 93       		.byte	0x93
 2228 009c 04       		.uleb128 0x4
 2229 009d 86000000 		.4byte	.LVL26
 2230 00a1 9A010000 		.4byte	.LVL61
 2231 00a5 0300     		.2byte	0x3
 2232 00a7 91       		.byte	0x91
 2233 00a8 C87E     		.sleb128 -184
 2234 00aa 00000000 		.4byte	0
 2235 00ae 00000000 		.4byte	0
 2236              	.LLST5:
 2237 00b2 9C000000 		.4byte	.LVL29
 2238 00b6 A4000000 		.4byte	.LVL30
 2239 00ba 0600     		.2byte	0x6
 2240 00bc 50       		.byte	0x50
 2241 00bd 93       		.byte	0x93
 2242 00be 04       		.uleb128 0x4
 2243 00bf 51       		.byte	0x51
 2244 00c0 93       		.byte	0x93
 2245 00c1 04       		.uleb128 0x4
 2246 00c2 A4000000 		.4byte	.LVL30
 2247 00c6 60020000 		.4byte	.LVL88
 2248 00ca 0300     		.2byte	0x3
 2249 00cc 91       		.byte	0x91
 2250 00cd D07E     		.sleb128 -176
 2251 00cf 60020000 		.4byte	.LVL88
 2252 00d3 A8020000 		.4byte	.LFE68
 2253 00d7 0300     		.2byte	0x3
 2254 00d9 7D       		.byte	0x7d
 2255 00da D07E     		.sleb128 -176
 2256 00dc 00000000 		.4byte	0
 2257 00e0 00000000 		.4byte	0
 2258              	.LLST6:
 2259 00e4 BE000000 		.4byte	.LVL34
 2260 00e8 4E010000 		.4byte	.LVL51
 2261 00ec 0600     		.2byte	0x6
 2262 00ee 58       		.byte	0x58
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 46


 2263 00ef 93       		.byte	0x93
 2264 00f0 04       		.uleb128 0x4
 2265 00f1 59       		.byte	0x59
 2266 00f2 93       		.byte	0x93
 2267 00f3 04       		.uleb128 0x4
 2268 00f4 00000000 		.4byte	0
 2269 00f8 00000000 		.4byte	0
 2270              	.LLST7:
 2271 00fc FC000000 		.4byte	.LVL41
 2272 0100 36010000 		.4byte	.LVL48
 2273 0104 0600     		.2byte	0x6
 2274 0106 56       		.byte	0x56
 2275 0107 93       		.byte	0x93
 2276 0108 04       		.uleb128 0x4
 2277 0109 57       		.byte	0x57
 2278 010a 93       		.byte	0x93
 2279 010b 04       		.uleb128 0x4
 2280 010c 00000000 		.4byte	0
 2281 0110 00000000 		.4byte	0
 2282              	.LLST8:
 2283 0114 34010000 		.4byte	.LVL47
 2284 0118 30020000 		.4byte	.LVL82
 2285 011c 0600     		.2byte	0x6
 2286 011e 54       		.byte	0x54
 2287 011f 93       		.byte	0x93
 2288 0120 04       		.uleb128 0x4
 2289 0121 55       		.byte	0x55
 2290 0122 93       		.byte	0x93
 2291 0123 04       		.uleb128 0x4
 2292 0124 00000000 		.4byte	0
 2293 0128 00000000 		.4byte	0
 2294              	.LLST9:
 2295 012c 5A010000 		.4byte	.LVL54
 2296 0130 7A010000 		.4byte	.LVL57
 2297 0134 0600     		.2byte	0x6
 2298 0136 5A       		.byte	0x5a
 2299 0137 93       		.byte	0x93
 2300 0138 04       		.uleb128 0x4
 2301 0139 5B       		.byte	0x5b
 2302 013a 93       		.byte	0x93
 2303 013b 04       		.uleb128 0x4
 2304 013c 80010000 		.4byte	.LVL58
 2305 0140 60020000 		.4byte	.LVL88
 2306 0144 0600     		.2byte	0x6
 2307 0146 5A       		.byte	0x5a
 2308 0147 93       		.byte	0x93
 2309 0148 04       		.uleb128 0x4
 2310 0149 5B       		.byte	0x5b
 2311 014a 93       		.byte	0x93
 2312 014b 04       		.uleb128 0x4
 2313 014c 00000000 		.4byte	0
 2314 0150 00000000 		.4byte	0
 2315              	.LLST10:
 2316 0154 9A010000 		.4byte	.LVL61
 2317 0158 A2010000 		.4byte	.LVL62
 2318 015c 0600     		.2byte	0x6
 2319 015e 50       		.byte	0x50
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 47


 2320 015f 93       		.byte	0x93
 2321 0160 04       		.uleb128 0x4
 2322 0161 51       		.byte	0x51
 2323 0162 93       		.byte	0x93
 2324 0163 04       		.uleb128 0x4
 2325 0164 A2010000 		.4byte	.LVL62
 2326 0168 60020000 		.4byte	.LVL88
 2327 016c 0300     		.2byte	0x3
 2328 016e 91       		.byte	0x91
 2329 016f C87E     		.sleb128 -184
 2330 0171 60020000 		.4byte	.LVL88
 2331 0175 A8020000 		.4byte	.LFE68
 2332 0179 0300     		.2byte	0x3
 2333 017b 7D       		.byte	0x7d
 2334 017c C87E     		.sleb128 -184
 2335 017e 00000000 		.4byte	0
 2336 0182 00000000 		.4byte	0
 2337              	.LLST11:
 2338 0186 BC010000 		.4byte	.LVL66
 2339 018a F4010000 		.4byte	.LVL73
 2340 018e 0600     		.2byte	0x6
 2341 0190 58       		.byte	0x58
 2342 0191 93       		.byte	0x93
 2343 0192 04       		.uleb128 0x4
 2344 0193 59       		.byte	0x59
 2345 0194 93       		.byte	0x93
 2346 0195 04       		.uleb128 0x4
 2347 0196 00000000 		.4byte	0
 2348 019a 00000000 		.4byte	0
 2349              	.LLST12:
 2350 019e F6010000 		.4byte	.LVL74
 2351 01a2 18020000 		.4byte	.LVL77
 2352 01a6 0600     		.2byte	0x6
 2353 01a8 58       		.byte	0x58
 2354 01a9 93       		.byte	0x93
 2355 01aa 04       		.uleb128 0x4
 2356 01ab 59       		.byte	0x59
 2357 01ac 93       		.byte	0x93
 2358 01ad 04       		.uleb128 0x4
 2359 01ae 1E020000 		.4byte	.LVL78
 2360 01b2 22020000 		.4byte	.LVL79
 2361 01b6 0600     		.2byte	0x6
 2362 01b8 58       		.byte	0x58
 2363 01b9 93       		.byte	0x93
 2364 01ba 04       		.uleb128 0x4
 2365 01bb 59       		.byte	0x59
 2366 01bc 93       		.byte	0x93
 2367 01bd 04       		.uleb128 0x4
 2368 01be 26020000 		.4byte	.LVL80
 2369 01c2 60020000 		.4byte	.LVL88
 2370 01c6 0600     		.2byte	0x6
 2371 01c8 58       		.byte	0x58
 2372 01c9 93       		.byte	0x93
 2373 01ca 04       		.uleb128 0x4
 2374 01cb 59       		.byte	0x59
 2375 01cc 93       		.byte	0x93
 2376 01cd 04       		.uleb128 0x4
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 48


 2377 01ce 00000000 		.4byte	0
 2378 01d2 00000000 		.4byte	0
 2379              	.LLST13:
 2380 01d6 06000000 		.4byte	.LVL89
 2381 01da 0C000000 		.4byte	.LVL90
 2382 01de 0300     		.2byte	0x3
 2383 01e0 08       		.byte	0x8
 2384 01e1 70       		.byte	0x70
 2385 01e2 9F       		.byte	0x9f
 2386 01e3 0C000000 		.4byte	.LVL90
 2387 01e7 16000000 		.4byte	.LVL91
 2388 01eb 0100     		.2byte	0x1
 2389 01ed 53       		.byte	0x53
 2390 01ee 18000000 		.4byte	.LVL92
 2391 01f2 29000000 		.4byte	.LVL95-1
 2392 01f6 0100     		.2byte	0x1
 2393 01f8 53       		.byte	0x53
 2394 01f9 00000000 		.4byte	0
 2395 01fd 00000000 		.4byte	0
 2396              	.LLST14:
 2397 0201 06000000 		.4byte	.LVL89
 2398 0205 0C000000 		.4byte	.LVL90
 2399 0209 0200     		.2byte	0x2
 2400 020b 30       		.byte	0x30
 2401 020c 9F       		.byte	0x9f
 2402 020d 0C000000 		.4byte	.LVL90
 2403 0211 29000000 		.4byte	.LVL95-1
 2404 0215 0100     		.2byte	0x1
 2405 0217 52       		.byte	0x52
 2406 0218 00000000 		.4byte	0
 2407 021c 00000000 		.4byte	0
 2408              		.section	.debug_aranges,"",%progbits
 2409 0000 44000000 		.4byte	0x44
 2410 0004 0200     		.2byte	0x2
 2411 0006 00000000 		.4byte	.Ldebug_info0
 2412 000a 04       		.byte	0x4
 2413 000b 00       		.byte	0
 2414 000c 0000     		.2byte	0
 2415 000e 0000     		.2byte	0
 2416 0010 00000000 		.4byte	.LFB64
 2417 0014 10000000 		.4byte	.LFE64-.LFB64
 2418 0018 00000000 		.4byte	.LFB65
 2419 001c 08000000 		.4byte	.LFE65-.LFB65
 2420 0020 00000000 		.4byte	.LFB66
 2421 0024 64000000 		.4byte	.LFE66-.LFB66
 2422 0028 00000000 		.4byte	.LFB67
 2423 002c 34000000 		.4byte	.LFE67-.LFB67
 2424 0030 00000000 		.4byte	.LFB68
 2425 0034 A8020000 		.4byte	.LFE68-.LFB68
 2426 0038 00000000 		.4byte	.LFB69
 2427 003c B4000000 		.4byte	.LFE69-.LFB69
 2428 0040 00000000 		.4byte	0
 2429 0044 00000000 		.4byte	0
 2430              		.section	.debug_ranges,"",%progbits
 2431              	.Ldebug_ranges0:
 2432 0000 06000000 		.4byte	.LBB2
 2433 0004 08000000 		.4byte	.LBE2
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 49


 2434 0008 0A000000 		.4byte	.LBB3
 2435 000c 24000000 		.4byte	.LBE3
 2436 0010 00000000 		.4byte	0
 2437 0014 00000000 		.4byte	0
 2438 0018 00000000 		.4byte	.LFB64
 2439 001c 10000000 		.4byte	.LFE64
 2440 0020 00000000 		.4byte	.LFB65
 2441 0024 08000000 		.4byte	.LFE65
 2442 0028 00000000 		.4byte	.LFB66
 2443 002c 64000000 		.4byte	.LFE66
 2444 0030 00000000 		.4byte	.LFB67
 2445 0034 34000000 		.4byte	.LFE67
 2446 0038 00000000 		.4byte	.LFB68
 2447 003c A8020000 		.4byte	.LFE68
 2448 0040 00000000 		.4byte	.LFB69
 2449 0044 B4000000 		.4byte	.LFE69
 2450 0048 00000000 		.4byte	0
 2451 004c 00000000 		.4byte	0
 2452              		.section	.debug_line,"",%progbits
 2453              	.Ldebug_line0:
 2454 0000 8C030000 		.section	.debug_str,"MS",%progbits,1
 2454      0200C002 
 2454      00000201 
 2454      FB0E0D00 
 2454      01010101 
 2455              	.LASF52:
 2456 0000 6B705F73 		.ascii	"kp_speed\000"
 2456      70656564 
 2456      00
 2457              	.LASF63:
 2458 0009 636C6561 		.ascii	"clearLCD\000"
 2458      724C4344 
 2458      00
 2459              	.LASF28:
 2460 0012 74696D65 		.ascii	"timeElapsed\000"
 2460      456C6170 
 2460      73656400 
 2461              	.LASF54:
 2462 001e 6B645F73 		.ascii	"kd_speed\000"
 2462      70656564 
 2462      00
 2463              	.LASF95:
 2464 0027 6672616D 		.ascii	"frame_int\000"
 2464      655F696E 
 2464      7400
 2465              	.LASF68:
 2466 0031 5468726F 		.ascii	"Throttle_PWM_WriteCompare\000"
 2466      74746C65 
 2466      5F50574D 
 2466      5F577269 
 2466      7465436F 
 2467              	.LASF76:
 2468 004b 4672616D 		.ascii	"Frame_Interrupt_SetVector\000"
 2468      655F496E 
 2468      74657272 
 2468      7570745F 
 2468      53657456 
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 50


 2469              	.LASF2:
 2470 0065 73686F72 		.ascii	"short int\000"
 2470      7420696E 
 2470      7400
 2471              	.LASF19:
 2472 006f 73697A65 		.ascii	"sizetype\000"
 2472      74797065 
 2472      00
 2473              	.LASF65:
 2474 0078 66696C74 		.ascii	"filterPush\000"
 2474      65725075 
 2474      736800
 2475              	.LASF25:
 2476 0083 68616C6C 		.ascii	"hallTime\000"
 2476      54696D65 
 2476      00
 2477              	.LASF88:
 2478 008c 5468726F 		.ascii	"Throttle_PWM_Start\000"
 2478      74746C65 
 2478      5F50574D 
 2478      5F537461 
 2478      727400
 2479              	.LASF49:
 2480 009f 6C617374 		.ascii	"lastErr_speed\000"
 2480      4572725F 
 2480      73706565 
 2480      6400
 2481              	.LASF74:
 2482 00ad 58426565 		.ascii	"XBee_Start\000"
 2482      5F537461 
 2482      727400
 2483              	.LASF96:
 2484 00b8 6D61696E 		.ascii	"main\000"
 2484      00
 2485              	.LASF89:
 2486 00bd 5049445F 		.ascii	"PID_Timer_Start\000"
 2486      54696D65 
 2486      725F5374 
 2486      61727400 
 2487              	.LASF94:
 2488 00cd 433A5C55 		.ascii	"C:\\Users\\ianh\\Documents\\Car Lab\\Navigation\\De"
 2488      73657273 
 2488      5C69616E 
 2488      685C446F 
 2488      63756D65 
 2489 00fa 7369676E 		.ascii	"sign.cydsn\000"
 2489      2E637964 
 2489      736E00
 2490              	.LASF26:
 2491 0105 64696666 		.ascii	"diffTime\000"
 2491      54696D65 
 2491      00
 2492              	.LASF27:
 2493 010e 6461726B 		.ascii	"dark_int\000"
 2493      5F696E74 
 2493      00
 2494              	.LASF30:
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 51


 2495 0117 63757272 		.ascii	"currErr_speed\000"
 2495      4572725F 
 2495      73706565 
 2495      6400
 2496              	.LASF11:
 2497 0125 75696E74 		.ascii	"uint16\000"
 2497      313600
 2498              	.LASF55:
 2499 012c 6C617374 		.ascii	"lastErr_steer\000"
 2499      4572725F 
 2499      73746565 
 2499      7200
 2500              	.LASF78:
 2501 013a 52656665 		.ascii	"Reference_Start\000"
 2501      72656E63 
 2501      655F5374 
 2501      61727400 
 2502              	.LASF21:
 2503 014a 6D656469 		.ascii	"median\000"
 2503      616E00
 2504              	.LASF34:
 2505 0151 7069644F 		.ascii	"pidOutput_speed\000"
 2505      75747075 
 2505      745F7370 
 2505      65656400 
 2506              	.LASF91:
 2507 0161 5049445F 		.ascii	"PID_Interrupt_SetVector\000"
 2507      496E7465 
 2507      72727570 
 2507      745F5365 
 2507      74566563 
 2508              	.LASF35:
 2509 0179 63757272 		.ascii	"currErr_steer\000"
 2509      4572725F 
 2509      73746565 
 2509      7200
 2510              	.LASF14:
 2511 0187 666C6F61 		.ascii	"float\000"
 2511      7400
 2512              	.LASF6:
 2513 018d 6C6F6E67 		.ascii	"long long int\000"
 2513      206C6F6E 
 2513      6720696E 
 2513      7400
 2514              	.LASF39:
 2515 019b 64657269 		.ascii	"derivativeTerm_steer\000"
 2515      76617469 
 2515      76655465 
 2515      726D5F73 
 2515      74656572 
 2516              	.LASF42:
 2517 01b0 6E756D46 		.ascii	"numFrames\000"
 2517      72616D65 
 2517      7300
 2518              	.LASF40:
 2519 01ba 7069644F 		.ascii	"pidOutput_steer\000"
 2519      75747075 
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 52


 2519      745F7374 
 2519      65657200 
 2520              	.LASF79:
 2521 01ca 4461726B 		.ascii	"Dark_Timer_Start\000"
 2521      5F54696D 
 2521      65725F53 
 2521      74617274 
 2521      00
 2522              	.LASF22:
 2523 01db 6C704669 		.ascii	"lpFilter\000"
 2523      6C746572 
 2523      00
 2524              	.LASF16:
 2525 01e4 75696E74 		.ascii	"uint64\000"
 2525      363400
 2526              	.LASF64:
 2527 01eb 48616C6C 		.ascii	"Hall_Timer_ReadCapture\000"
 2527      5F54696D 
 2527      65725F52 
 2527      65616443 
 2527      61707475 
 2528              	.LASF31:
 2529 0202 696E7465 		.ascii	"integralTerm_speed\000"
 2529      6772616C 
 2529      5465726D 
 2529      5F737065 
 2529      656400
 2530              	.LASF62:
 2531 0215 4461726B 		.ascii	"Dark_Timer_ReadStatusRegister\000"
 2531      5F54696D 
 2531      65725F52 
 2531      65616453 
 2531      74617475 
 2532              	.LASF18:
 2533 0233 6C6F6E67 		.ascii	"long double\000"
 2533      20646F75 
 2533      626C6500 
 2534              	.LASF61:
 2535 023f 7069645F 		.ascii	"pid_period\000"
 2535      70657269 
 2535      6F6400
 2536              	.LASF24:
 2537 024a 68616C6C 		.ascii	"hall_int\000"
 2537      5F696E74 
 2537      00
 2538              	.LASF1:
 2539 0253 756E7369 		.ascii	"unsigned char\000"
 2539      676E6564 
 2539      20636861 
 2539      7200
 2540              	.LASF32:
 2541 0261 70726F70 		.ascii	"proportionalTerm_speed\000"
 2541      6F727469 
 2541      6F6E616C 
 2541      5465726D 
 2541      5F737065 
 2542              	.LASF0:
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 53


 2543 0278 7369676E 		.ascii	"signed char\000"
 2543      65642063 
 2543      68617200 
 2544              	.LASF44:
 2545 0284 68616C6C 		.ascii	"hallFilter\000"
 2545      46696C74 
 2545      657200
 2546              	.LASF7:
 2547 028f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2547      206C6F6E 
 2547      6720756E 
 2547      7369676E 
 2547      65642069 
 2548              	.LASF69:
 2549 02a6 73707269 		.ascii	"sprintf\000"
 2549      6E746600 
 2550              	.LASF80:
 2551 02ae 4461726B 		.ascii	"Dark_Interrupt_Start\000"
 2551      5F496E74 
 2551      65727275 
 2551      70745F53 
 2551      74617274 
 2552              	.LASF70:
 2553 02c3 58426565 		.ascii	"XBee_PutString\000"
 2553      5F507574 
 2553      53747269 
 2553      6E6700
 2554              	.LASF8:
 2555 02d2 756E7369 		.ascii	"unsigned int\000"
 2555      676E6564 
 2555      20696E74 
 2555      00
 2556              	.LASF46:
 2557 02df 61766752 		.ascii	"avgRpm\000"
 2557      706D00
 2558              	.LASF50:
 2559 02e6 73756D45 		.ascii	"sumErr_speed\000"
 2559      72725F73 
 2559      70656564 
 2559      00
 2560              	.LASF83:
 2561 02f3 48616C6C 		.ascii	"Hall_Interrupt_Start\000"
 2561      5F496E74 
 2561      65727275 
 2561      70745F53 
 2561      74617274 
 2562              	.LASF45:
 2563 0308 6C617374 		.ascii	"lastHallTime\000"
 2563      48616C6C 
 2563      54696D65 
 2563      00
 2564              	.LASF43:
 2565 0315 6461726B 		.ascii	"darkFilter\000"
 2565      46696C74 
 2565      657200
 2566              	.LASF36:
 2567 0320 696E7465 		.ascii	"integralTerm_steer\000"
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 54


 2567      6772616C 
 2567      5465726D 
 2567      5F737465 
 2567      657200
 2568              	.LASF3:
 2569 0333 73686F72 		.ascii	"short unsigned int\000"
 2569      7420756E 
 2569      7369676E 
 2569      65642069 
 2569      6E7400
 2570              	.LASF48:
 2571 0346 74696D65 		.ascii	"timeOutCounter\000"
 2571      4F757443 
 2571      6F756E74 
 2571      657200
 2572              	.LASF37:
 2573 0355 70726F70 		.ascii	"proportionalTerm_steer\000"
 2573      6F727469 
 2573      6F6E616C 
 2573      5465726D 
 2573      5F737465 
 2574              	.LASF90:
 2575 036c 5049445F 		.ascii	"PID_Interrupt_Start\000"
 2575      496E7465 
 2575      72727570 
 2575      745F5374 
 2575      61727400 
 2576              	.LASF17:
 2577 0380 63686172 		.ascii	"char\000"
 2577      00
 2578              	.LASF4:
 2579 0385 6C6F6E67 		.ascii	"long int\000"
 2579      20696E74 
 2579      00
 2580              	.LASF77:
 2581 038e 416E616C 		.ascii	"Analog_CMP_Start\000"
 2581      6F675F43 
 2581      4D505F53 
 2581      74617274 
 2581      00
 2582              	.LASF23:
 2583 039f 74617267 		.ascii	"target_int\000"
 2583      65745F69 
 2583      6E7400
 2584              	.LASF10:
 2585 03aa 696E7433 		.ascii	"int32_t\000"
 2585      325F7400 
 2586              	.LASF56:
 2587 03b2 73756D45 		.ascii	"sumErr_steer\000"
 2587      72725F73 
 2587      74656572 
 2587      00
 2588              	.LASF33:
 2589 03bf 64657269 		.ascii	"derivativeTerm_speed\000"
 2589      76617469 
 2589      76655465 
 2589      726D5F73 
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 55


 2589      70656564 
 2590              	.LASF58:
 2591 03d4 6B705F73 		.ascii	"kp_steer\000"
 2591      74656572 
 2591      00
 2592              	.LASF47:
 2593 03dd 6461726B 		.ascii	"darkTime\000"
 2593      54696D65 
 2593      00
 2594              	.LASF71:
 2595 03e6 53657276 		.ascii	"Servo_PWM_WriteCompare\000"
 2595      6F5F5057 
 2595      4D5F5772 
 2595      69746543 
 2595      6F6D7061 
 2596              	.LASF82:
 2597 03fd 66696C74 		.ascii	"filterResize\000"
 2597      65725265 
 2597      73697A65 
 2597      00
 2598              	.LASF60:
 2599 040a 6B645F73 		.ascii	"kd_steer\000"
 2599      74656572 
 2599      00
 2600              	.LASF12:
 2601 0413 75696E74 		.ascii	"uint32\000"
 2601      333200
 2602              	.LASF93:
 2603 041a 6D61696E 		.ascii	"main.c\000"
 2603      2E6300
 2604              	.LASF5:
 2605 0421 6C6F6E67 		.ascii	"long unsigned int\000"
 2605      20756E73 
 2605      69676E65 
 2605      6420696E 
 2605      7400
 2606              	.LASF13:
 2607 0433 696E7433 		.ascii	"int32\000"
 2607      3200
 2608              	.LASF15:
 2609 0439 646F7562 		.ascii	"double\000"
 2609      6C6500
 2610              	.LASF57:
 2611 0440 676F616C 		.ascii	"goalDarkTime\000"
 2611      4461726B 
 2611      54696D65 
 2611      00
 2612              	.LASF53:
 2613 044d 6B695F73 		.ascii	"ki_speed\000"
 2613      70656564 
 2613      00
 2614              	.LASF20:
 2615 0456 73697A65 		.ascii	"size\000"
 2615      00
 2616              	.LASF81:
 2617 045b 4461726B 		.ascii	"Dark_Interrupt_SetVector\000"
 2617      5F496E74 
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 56


 2617      65727275 
 2617      70745F53 
 2617      65745665 
 2618              	.LASF9:
 2619 0474 5F5F696E 		.ascii	"__int32_t\000"
 2619      7433325F 
 2619      7400
 2620              	.LASF72:
 2621 047e 53657276 		.ascii	"Servo_PWM_Start\000"
 2621      6F5F5057 
 2621      4D5F5374 
 2621      61727400 
 2622              	.LASF87:
 2623 048e 54617267 		.ascii	"Target_Interrupt_SetVector\000"
 2623      65745F49 
 2623      6E746572 
 2623      72757074 
 2623      5F536574 
 2624              	.LASF84:
 2625 04a9 48616C6C 		.ascii	"Hall_Timer_Start\000"
 2625      5F54696D 
 2625      65725F53 
 2625      74617274 
 2625      00
 2626              	.LASF85:
 2627 04ba 48616C6C 		.ascii	"Hall_Interrupt_SetVector\000"
 2627      5F496E74 
 2627      65727275 
 2627      70745F53 
 2627      65745665 
 2628              	.LASF59:
 2629 04d3 6B695F73 		.ascii	"ki_steer\000"
 2629      74656572 
 2629      00
 2630              	.LASF86:
 2631 04dc 54617267 		.ascii	"Target_Interrupt_Start\000"
 2631      65745F49 
 2631      6E746572 
 2631      72757074 
 2631      5F537461 
 2632              	.LASF66:
 2633 04f3 48616C6C 		.ascii	"Hall_Timer_ReadStatusRegister\000"
 2633      5F54696D 
 2633      65725F52 
 2633      65616453 
 2633      74617475 
 2634              	.LASF75:
 2635 0511 4672616D 		.ascii	"Frame_Interrupt_Start\000"
 2635      655F496E 
 2635      74657272 
 2635      7570745F 
 2635      53746172 
 2636              	.LASF29:
 2637 0527 7069645F 		.ascii	"pid_int\000"
 2637      696E7400 
 2638              	.LASF41:
 2639 052f 49544D5F 		.ascii	"ITM_RxBuffer\000"
ARM GAS  C:\Users\ianh\AppData\Local\Temp\cclOXnlP.s 			page 57


 2639      52784275 
 2639      66666572 
 2639      00
 2640              	.LASF92:
 2641 053c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2641      43313120 
 2641      352E342E 
 2641      31203230 
 2641      31363036 
 2642 056f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2642      20726576 
 2642      6973696F 
 2642      6E203233 
 2642      37373135 
 2643 05a2 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2643      66756E63 
 2643      74696F6E 
 2643      2D736563 
 2643      74696F6E 
 2644              	.LASF67:
 2645 05ca 4461726B 		.ascii	"Dark_Timer_ReadCapture\000"
 2645      5F54696D 
 2645      65725F52 
 2645      65616443 
 2645      61707475 
 2646              	.LASF73:
 2647 05e1 696E6974 		.ascii	"initLCD\000"
 2647      4C434400 
 2648              	.LASF51:
 2649 05e9 676F616C 		.ascii	"goalRpm\000"
 2649      52706D00 
 2650              	.LASF38:
 2651 05f1 63756269 		.ascii	"cubicProportional_steer\000"
 2651      6350726F 
 2651      706F7274 
 2651      696F6E61 
 2651      6C5F7374 
 2652              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
